#pragma once

#include "types.h"

// clang-format off

namespace StringIDs {
    constexpr u32 Swap = 0x1E5728ED; // Swap
    constexpr u32 OpenYourInventory = 0x2D7B8EFC; // Open your inventory.
    constexpr u32 TakingInventory = 0xF28AC13D; // Taking Inventory
    constexpr u32 PunchATreeUntilABlockOfWoodPopsOut = 0x251FAF0F; // Punch a tree until a block of Wood pops out.
    constexpr u32 GettingWood = 0x2BA9A566; // Getting Wood
    constexpr u32 CraftAWorkbenchWithFourBlocksOfWooden = 0xAAD1343E; // Craft a workbench with four blocks of Wooden Planks.
    constexpr u32 Benchmarking = 0xD5D0CEEF; // Benchmarking
    constexpr u32 MakeAHoe = 0xB744B349; // Make a Hoe.
    constexpr u32 TimeToFarm = 0xCBF9C690; // Time to Farm!
    constexpr u32 TurnWheatIntoBread = 0xEC03C5B8; // Turn Wheat into Bread.
    constexpr u32 BakeBread = 0xAAF2C159; // Bake Bread
    constexpr u32 BakeACakeUsingWheatSugarMilkAndEggs = 0xD051FCCB; // Bake a Cake using: Wheat, Sugar, Milk and Eggs.
    constexpr u32 TheLie = 0xD40E6602; // The Lie
    constexpr u32 UsePlanksAndSticksToMakeASword = 0x69596AFA; // Use Planks and Sticks to make a Sword.
    constexpr u32 TimeToStrike = 0xAAFFE10B; // Time to Strike!
    constexpr u32 AttackAndDestroyAMonster = 0xD7C1B555; // Attack and destroy a monster.
    constexpr u32 MonsterHunter = 0x75094A9C; // Monster Hunter
    constexpr u32 HarvestSomeLeather = 0x89AC6B84; // Harvest some Leather.
    constexpr u32 CowTipper = 0x088994E5; // Cow Tipper
    constexpr u32 UseASaddleToRideAPigAndn = 0x25D5BEE4; // Use a Saddle to ride a Pig, and then have the Pig get hurt from fall damage while riding it.
    constexpr u32 WhenPigsFly = 0x9A5947C5; // When Pigs Fly
    constexpr u32 UsePlanksAndSticksToMakeAPickaxe = 0xEF6AA635; // Use Planks and Sticks to make a Pickaxe.
    constexpr u32 TimeToMine = 0x77E6DD7C; // Time to Mine!
    constexpr u32 ConstructABetterPickaxe = 0x265EAF26; // Construct a better Pickaxe.
    constexpr u32 GettingAnUpgrade = 0x177692F7; // Getting an Upgrade
    constexpr u32 ConstructAFurnaceOutOfEightCobblestoneBlocks = 0x8FD1A9F7; // Construct a Furnace out of eight Cobblestone blocks.
    constexpr u32 HotTopic = 0x1F3264AE; // Hot Topic
    constexpr u32 CatchAndCookFish = 0xFAC6D4A0; // Catch and cook Fish!
    constexpr u32 DeliciousFish = 0x6C76F061; // Delicious Fish
    constexpr u32 SmeltAnIronIngot = 0xACB5A871; // Smelt an Iron Ingot.
    constexpr u32 AcquireHardware = 0x36F66718; // Acquire Hardware
    constexpr u32 TravelByMinecartToAPointAtLeast = 0x74CE7062; // Travel by Minecart to a point at least 500m in a single direction from where you started.
    constexpr u32 OnARail = 0xCDFB2A93; // On A Rail
    constexpr u32 BefriendFiveWolves = 0x20E37B33; // Befriend five Wolves.
    constexpr u32 LeaderOfPack = 0x9BEF14CA; // Leader of the Pack
    constexpr u32 ConstructOneTypeOfEachTool = 0x52A09FDC; // Construct one type of each tool.
    constexpr u32 MoarTools = 0x1DC25B1D; // MOAR Tools
    constexpr u32 ConstructADispenser = 0xA2520CED; // Construct a Dispenser.
    constexpr u32 DispenseWithThis = 0x83E5D954; // Dispense With This
    constexpr u32 ConstructANetherPortal = 0x82303FDF; // Construct a Nether Portal.
    constexpr u32 IntoTheNether = 0x7A0BF856; // Into The Nether
    constexpr u32 KillASkeletonWithAnArrowFromMore = 0x28AC430E; // Kill a Skeleton with an Arrow from more than 50 meters.
    constexpr u32 SniperDuel = 0xDBDF2F5F; // Sniper Duel
    constexpr u32 AcquireDiamondsWithYourIronTools = 0x6987C51D; // Acquire Diamonds with your iron tools.
    constexpr u32 Diamonds = 0x491119A4; // DIAMONDS!
    constexpr u32 DestroyAGhastWithAFireball = 0x3EEB208C; // Destroy a Ghast with a Fireball.
    constexpr u32 ReturnToSender = 0xB0C864ED; // Return to Sender
    constexpr u32 RelieveABlazeOfItsRod = 0x15BC7A1B; // Relieve a Blaze of its rod.
    constexpr u32 IntoFire = 0xAB890FF2; // Into Fire
    constexpr u32 BrewAPotion = 0xB9BE144A; // Brew a Potion.
    constexpr u32 LocalBrewery = 0xEA3F287B; // Local Brewery
    constexpr u32 EnterAnEndPortal = 0xD21802D9; // Enter an End Portal.
    constexpr u32 TheEnd = 0xBCE10AC0; // The End?
    constexpr u32 KillEnderdragon = 0xB856DE48; // Kill the Enderdragon.
    constexpr u32 TheEnd_1 = 0x22B4ED89; // The End.
    constexpr u32 ConstructAnEnchantmentTable = 0x13281DA7; // Construct an Enchantment Table.
    constexpr u32 Enchanter = 0xE61C41BE; // Enchanter
    constexpr u32 DealNineHeartsOfDamageInASingleHit = 0x2C6ABD96; // Deal nine hearts of damage in a single hit.
    constexpr u32 Overkill = 0xA43999C7; // Overkill
    constexpr u32 BuildSomeBookshelvesToImproveYourEnchantmentTable = 0xA43F9DF6; // Build some Bookshelves to improve your Enchantment Table.
    constexpr u32 Librarian = 0x4C6C4BA7; // Librarian
    constexpr u32 Discover17Of40DifferentBiomes = 0xDE4E6187; // Discover 17 of the 40 different biomes.
    constexpr u32 AdventuringTime = 0xB870791E; // Adventuring Time
    constexpr u32 BreedTwoCowsWithWheat = 0xA4159C74; // Breed two Cows with Wheat.
    constexpr u32 Repopulation = 0xE8BB9AB5; // Repopulation
    constexpr u32 ThrowDiamondsAtAnotherPlayer = 0xA53CCF85; // Throw Diamonds at another player.
    constexpr u32 DiamondsToYou = 0x80AB4F2C; // Diamonds to you!
    constexpr u32 CookAndEatAPorkChop = 0x50AF2032; // Cook and eat a Pork Chop.
    constexpr u32 PorkChop = 0x4D436E43; // Pork Chop
    constexpr u32 PlayFor100Days = 0x709D6743; // Play for 100 days.
    constexpr u32 PassingTime = 0x1F0DA0BA; // Passing the Time
    constexpr u32 KillACreeperWithArrows = 0x35276DB0; // Kill a Creeper with Arrows.
    constexpr u32 Archer = 0xF4A12AD1; // Archer
    constexpr u32 MineOrPurchase30Emeralds = 0xF3AC90C1; // Mine or purchase 30 Emeralds.
    constexpr u32 TheHaggler = 0x9C9FDEC8; // The Haggler
    constexpr u32 CraftAndPlaceAFlowerPot = 0x81BA0F6E; // Craft and place a Flower Pot.
    constexpr u32 PotPlanter = 0xE60A7FBF; // Pot Planter
    constexpr u32 CraftAndPlaceASign = 0xC798ECBF; // Craft and place a Sign.
    constexpr u32 ItSASign = 0xDDB1ABB6; // It's a Sign!
    constexpr u32 StopStarvationUsingRottenFlesh = 0x6CE0F229; // Stop starvation using Rotten Flesh.
    constexpr u32 IronBelly = 0xEA1B0670; // Iron Belly
    constexpr u32 UseShearsToObtainWoolFromASheep = 0x1D2F8518; // Use Shears to obtain Wool from a Sheep.
    constexpr u32 HaveAShearfulDay = 0x34A718B9; // Have a Shearful Day
    constexpr u32 GatherAll16ColorsOfWool = 0x49F3B52B; // Gather all 16 colors of Wool.
    constexpr u32 RainbowCollection = 0xF30A1CE2; // Rainbow Collection
    constexpr u32 SwimInLavaWhileHavingFireResistanceEffect = 0x1EF5A9DA; // Swim in Lava while having the Fire Resistance effect.
    constexpr u32 StayinFrosty = 0x5A8F366B; // Stayin' Frosty
    constexpr u32 Mine1728CobblestoneAndPlaceItInAChest = 0x1E7130ED; // Mine 1,728 Cobblestone and place it in a Chest.
    constexpr u32 ChestfulOfCobblestone = 0x8BD39D54; // Chestful of Cobblestone
    constexpr u32 SmeltWoodTrunksUsingCharcoalToMakeMore = 0xCEBFC3DC; // Smelt Wood Trunks using Charcoal to make more Charcoal.
    constexpr u32 RenewableEnergy = 0x25B01F1D; // Renewable Energy
    constexpr u32 PlayAMusicDiscInAJukebox = 0xB6677AEF; // Play a Music Disc in a Jukebox.
    constexpr u32 MusicToMyEars = 0x205573C6; // Music to my Ears
    constexpr u32 CreateAnIronGolem = 0x48C75F9E; // Create an Iron Golem.
    constexpr u32 BodyGuard = 0xDE6986CF; // Body Guard
    constexpr u32 WearAFullSuitOfIronArmor = 0x28D4CC71; // Wear a full suit of Iron Armor.
    constexpr u32 IronMan = 0x3EE42B18; // Iron Man
    constexpr u32 CureAZombieVillager = 0x76E5F8A0; // Cure a Zombie Villager.
    constexpr u32 ZombieDoctor = 0x7464B461; // Zombie Doctor
    constexpr u32 TameAnOcelot = 0xE7673B80; // Tame an Ocelot.
    constexpr u32 LionTamer = 0xE42B6E41; // Lion Tamer
    constexpr u32 SpawnWither = 0xB0FC22D1; // Spawn the Wither.
    constexpr u32 TheBeginning = 0xEDF234F8; // The Beginning?
    constexpr u32 KillWither = 0x39BB0442; // Kill the Wither.
    constexpr u32 TheBeginning_1 = 0x1EA6A973; // The Beginning.
    constexpr u32 CreateAndFullyPowerABeacon = 0x0212B713; // Create and fully power a Beacon.
    constexpr u32 Beaconator = 0x81E7D32A; // Beaconator
    constexpr u32 EatANotchApple = 0x2A1C3944; // Eat a Notch Apple.
    constexpr u32 Overpowered = 0x676EBE25; // Overpowered
    constexpr u32 DyeAll4UniquePiecesOfLeatherArmor = 0x63C99615; // Dye all 4 unique pieces of Leather Armor.
    constexpr u32 TieDyeOutfit = 0x922534DC; // Tie Dye Outfit
    constexpr u32 Connect3ChestsToASingleFurnaceUsing = 0x7B32CD86; // Connect 3 Chests to a single Furnace using 3 Hoppers.
    constexpr u32 SmeltEverything = 0x1046B057; // Smelt Everything!
    constexpr u32 KillAMobWhileWearingSameTypeOfMobHead = 0x56E06957; // Kill a Mob while wearing the same type of Mob Head.
    constexpr u32 Camouflage = 0x05C2238E; // Camouflage
    constexpr u32 PlaceAFullyExploredMapIntoAnItemFrame = 0x14321C78; // Place a fully explored Map into an Item Frame.
    constexpr u32 MapRoom = 0x93CDB299; // Map Room
    constexpr u32 Bounce30BlocksUpwardOffASlimeBlock = 0x14931A09; // Bounce 30 blocks upward off a Slime Block.
    constexpr u32 Trampoline = 0x3F0DA9D0; // Trampoline
    constexpr u32 WinAPublicBattleMiniGame = 0xBD23CE7B; // Win a public Battle mini game.
    constexpr u32 TheStudent = 0x416C6FD2; // The Student...
    constexpr u32 Win3PublicBattleMiniGamesInARow = 0x7744F12A; // Win 3 public Battle mini games in a row.
    constexpr u32 HasBecomeMaster = 0xA47CDB5B; // ...has become the Master
    constexpr u32 Take100DamageInARoundOfA = 0xF3CBC339; // Take 100 damage in a round of a public Battle game.
    constexpr u32 TisButAScratch = 0xCDCF8120; // 'Tis but a scratch
    constexpr u32 Kill2PlayersInARoundOfPublic = 0xDF4EA728; // Kill 2 players in a round of public Battle mini game using a bow and arrow.
    constexpr u32 Cupid = 0x344997E9; // Cupid
    constexpr u32 KillAPlayerWhileYouAreStarvingIn = 0x43B810BF; // Kill a player while you are starving in a Battle mini game.
    constexpr u32 HungerPain = 0xE59F6FB6; // Hunger Pain
    constexpr u32 OpenEveryChestInABattleMiniGame = 0xFDD9336E; // Open every chest in a Battle mini game arena in one round.
    constexpr u32 Mine = 0xEDF843BF; // Mine!
    constexpr u32 RespawnEnderdragon = 0x1D9D78FD; // Respawn the Enderdragon.
    constexpr u32 TheEndAgain = 0x51A9D184; // The End... Again...
    constexpr u32 CollectDragonSBreathInAGlassBottle = 0x4BC26CEC; // Collect Dragon's Breath in a Glass Bottle.
    constexpr u32 YouNeedAMint = 0x18EC08CD; // You Need a Mint
    constexpr u32 UseAnElytraToFlyThroughA1 = 0xECBC8B43; // Use an Elytra to fly through a 1 by 1 gap while moving faster than 40 m/s.
    constexpr u32 SuperSonic = 0x26FB64BA; // Super Sonic
    constexpr u32 DryASpongeInAFurnace = 0xCCCE4432; // Dry a Sponge in a Furnace.
    constexpr u32 DrySpell = 0x55313243; // Dry Spell
    constexpr u32 StayUnderwaterFor2Minutes = 0x18FB1412; // Stay underwater for 2 minutes.
    constexpr u32 FreeDiver = 0xDB5AEB23; // Free Diver
    constexpr u32 PowerAFurnaceWithLava = 0x89C055A3; // Power a Furnace with Lava.
    constexpr u32 SuperFuel = 0xD746A31A; // Super Fuel
    constexpr u32 TameAHorse = 0x65A71910; // Tame a Horse.
    constexpr u32 SaddleUp = 0x328DC131; // Saddle Up
    constexpr u32 PoisonAWitchWithASplashPotion = 0xA2799C21; // Poison a Witch with a Splash Potion.
    constexpr u32 TasteOfYourOwnMedicine = 0x5CDF6928; // Taste of Your Own Medicine
    constexpr u32 TeleportOver100MetersFromASingleThrow = 0x86AC0E56; // Teleport over 100 meters from a single throw of an Ender Pearl.
    constexpr u32 BeamMeUp = 0xBFFD5C07; // Beam Me Up
    constexpr u32 PlaceAFullyExploredMapIntoAnItemFrame_1 = 0x1191CC67; // Place a fully explored Map into an Item Frame.
    constexpr u32 MapRoom_1 = 0xD1719BFE; // Map Room
    constexpr u32 KillAMobWhileWearingSameTypeOfMobHead_1 = 0xEC3B5B54; // Kill a Mob while wearing the same type of Mob Head.
    constexpr u32 Camouflage_1 = 0x7C092995; // Camouflage
    constexpr u32 Win3RoundsInARowAfterOne = 0x39E95E65; // Win 3 rounds in a row after one of the opponents has won 2 rounds.
    constexpr u32 BackFromDead = 0x3F07710C; // Back from the Dead
    constexpr u32 WinASingleRoundOfSnowballTumbleWithout = 0x45C5F50A; // Win a single round of Snowball Tumble without throwing any Snowballs.
    constexpr u32 SNoThrow = 0x04E0A9BB; // S-No Throw
    constexpr u32 HitASinglePlayerWith25SnowballsIn = 0x9F49F1DB; // Hit a single Player with 25 Snowballs in a single public round.
    constexpr u32 SnowStorm = 0x53BD0332; // Snow Storm
    constexpr u32 HitAPlayerWithASnowballWhileFalling = 0x778C8A05; // Hit a Player with a Snowball while falling into the Lava.
    constexpr u32 Hotshot = 0x373FCDAC; // Hotshot
    constexpr u32 PushThreePlayersIntoLavaUsingSnowballs = 0x766556F4; // Push three Players into Lava using Snowballs.
    constexpr u32 Snowplough = 0x9F501935; // Snowplough
    constexpr u32 StayOnTopLayerWhileWinningARound = 0xB09E1C07; // Stay on the top layer while winning a round in a Snowball Tumble Mini Game.
    constexpr u32 Overlord = 0x6F04F79E; // Overlord
    constexpr u32 WinATumbleGameWhilstOnLowestLayer = 0x768F5876; // Win a Tumble game whilst on the lowest layer in a Snowball Tumble Mini Game.
    constexpr u32 Underdog = 0x0300CA27; // Underdog
    constexpr u32 DefeatAnElderGuardian = 0xC5FC4B41; // Defeat an Elder Guardian.
    constexpr u32 TheDeepEnd = 0x53345D48; // The Deep End
    constexpr u32 LevitateUp50BlocksFromAttacksOfAShulker = 0x07772830; // Levitate up 50 blocks from the attacks of a Shulker.
    constexpr u32 GreatViewFromUpHere = 0xAB35A951; // Great View From Up Here
    constexpr u32 DyeYourBedADifferentColor = 0x42ED21C3; // Dye your bed a different color.
    constexpr u32 ChangeOfSheets = 0xD5A21F3A; // Change of Sheets
    constexpr u32 UseTotemOfUndyingToCheatDeath = 0x22FEDAB2; // Use the Totem of Undying to cheat death.
    constexpr u32 CheatingDeath = 0x03D7ECC3; // Cheating Death
    constexpr u32 LeadACaravanContainingAtLeast5Llamas = 0x73CE0F7D; // Lead a Caravan containing at least 5 Llamas.
    constexpr u32 SoIGotThatGoingForMe = 0x00508C04; // So I Got That Going For Me...
    constexpr u32 WalkAcrossSurfaceOfADeepOceanBy = 0xA1F3036C; // Walk across the surface of a deep ocean by freezing the water with Frost Walker boots.
    constexpr u32 LetItGo = 0xC792C34D; // Let It Go!
    constexpr u32 DefeatAnEvoker = 0xFA479A9C; // Defeat an Evoker.
    constexpr u32 FeelingIll = 0x4173E15D; // Feeling Ill
    constexpr u32 Achievements = 0x31DACD58; // Achievements
    constexpr u32 AddThisLevelToYourBannedLevelList = 0x0CF95AE0; // Are you sure you want to add this level to your banned level list? \r\nSelecting OK will also exit t...
    constexpr u32 BanThisLevel = 0x6C2DD04E; // Ban This Level?
    constexpr u32 Adventure = 0xA48E97FA; // Adventure
    constexpr u32 AllowFriendsOfFriends = 0x4D7EC0CC; // Allow friends of friends
    constexpr u32 AmplifiedWorlds = 0x2409B19D; // Amplified Worlds
    constexpr u32 PlanksAnyType = 0xA4FBD60E; // Planks (any type)
    constexpr u32 PurpurBlockAnyType = 0x3C112875; // Purpur Block (any type)
    constexpr u32 BlockOfQuartzAnyType = 0x48008E1A; // Block of Quartz (any type)
    constexpr u32 RedSandstoneAnyType = 0xF36C79ED; // Red Sandstone (any type)
    constexpr u32 SandstoneAnyType = 0x6BB77EDE; // Sandstone (any type)
    constexpr u32 StoneBricksAnyType = 0xD2631070; // Stone Bricks (any type)
    constexpr u32 WoolAnyColor = 0x52C6DF2E; // Wool (any color)
    constexpr u32 ArmorStand = 0x2C65F6DB; // Armor Stand
    constexpr u32 Armor = 0x6CA19582; // Armor
    constexpr u32 ArmorToughness = 0xAAE7CF20; // Armor Toughness
    constexpr u32 AttackDamage = 0xF25163D2; // Attack Damage
    constexpr u32 AttackSpeed = 0x1EA0E2FE; // Attack Speed
    constexpr u32 MobFollowRange = 0x46BDC66F; // Mob Follow Range
    constexpr u32 KnockbackResistance = 0x102AF61B; // Knockback Resistance
    constexpr u32 Luck = 0xC9BC92C8; // Luck
    constexpr u32 MaxHealth = 0xBADA09B9; // Max Health
    constexpr u32 Speed = 0xAA6BDC35; // Speed
    constexpr u32 HorseJumpStrength = 0x400FEB0C; // Horse Jump Strength
    constexpr u32 ZombieReinforcements = 0xAD135001; // Zombie Reinforcements
    constexpr u32 Audio = 0xE13A424A; // Audio
    constexpr u32 AutoJump = 0x048CFBB9; // Auto Jump
    constexpr u32 AutosavingInD = 0x2A1B8F34; // Autosaving in %d...
    constexpr u32 HurrayYouVeBeenAwardedAnAvatarItem = 0xE40E1DF2; // Hurray - you've been awarded an avatar item - a Minecraft: Nintendo Switch Edition t-shirt!\r\nGo to...
    constexpr u32 HurrayYouVeBeenAwardedAnAvatarItemWatchWatch = 0xBE0BA389; // Hurray - you've been awarded an avatar item - a Minecraft: Nintendo Switch Edition watch!\r\nGo to t...
    constexpr u32 HurrayYouVeBeenAwardedAnAvatarItemCreeperBaseballCapCap = 0x98092920; // Hurray - you've been awarded an avatar item - a Creeper baseball cap!\r\nGo to the dashboard to put ...
    constexpr u32 HurrayYouVeBeenAwardedAGamerpicFeaturing = 0xD9D1B115; // Hurray - you've been awarded a gamerpic featuring Steve from Minecraft!
    constexpr u32 HurrayYouVeBeenAwardedAGamerpicFeaturingCreeper = 0xFFD42B7E; // Hurray - you've been awarded a gamerpic featuring a Creeper!
    constexpr u32 HurrayYouVeBeenAwardedConsolemeRNgo = 0x3FAAB143; // Hurray - you've been awarded the Minecraft: Nintendo Switch Edition theme!\r\nGo to the dashboard to...
    constexpr u32 AwardUnlocked = 0x501C342A; // Award Unlocked!
    constexpr u32 Back = 0x79346957; // Back
    constexpr u32 Button = 0x3D497286; // - button
    constexpr u32 BannedLevel = 0x853479B8; // Banned Level
    constexpr u32 BordersBackgroundsAndGradients = 0xF8E4117F; // Borders, Backgrounds and Gradients
    constexpr u32 Halves = 0xB35EE68B; // Halves
    constexpr u32 Shapes = 0xDD9417BA; // Shapes
    constexpr u32 Stripes = 0x133E5CD4; // Stripes
    constexpr u32 Symbols = 0x8078384B; // Symbols
    constexpr u32 Copy = 0xFE4F3A12; // Copy
    constexpr u32 CopyBanner = 0xF6BFB839; // Copy Banner
    constexpr u32 CreateBanner = 0x7F57B5E0; // Create Banner
    constexpr u32 SelectBanner = 0x93D2882C; // Select Banner
    constexpr u32 Bat = 0xD3E3ACFB; // Bat
    constexpr u32 GoToMinecraftNew = 0xF1855148; // Go to Minecraft (NEW!)
    constexpr u32 HoorayNewMinecraftIsHereRNweVe = 0xD2082953; // Hooray, the new Minecraft is here!\r\nWe’ve been working on an entirely new version of Minecraft in ...
    constexpr u32 NewVersionAvailable = 0x05FABA7E; // New Version Available!
    constexpr u32 WelcomeBackJustAReminderThatYouAlso = 0x51B7052A; // Welcome back! Just a reminder that you also have the newer version of Minecraft available for you to...
    constexpr u32 ChooseMinecraftVersion = 0x40509F0F; // Choose Minecraft Version
    constexpr u32 ThisVersionOfMinecraftWillNoLongerReceive = 0x25370472; // This version of Minecraft will no longer receive any future gameplay updates.  \r\nReceive all of th...
    constexpr u32 DownloadLatestVersionOfMinecraftForFree = 0x64B1492F; // Download the latest version of Minecraft for FREE!
    constexpr u32 ANewVersionOfMinecraftIsAvailable = 0xF2A9D9F4; // A New Version of Minecraft is Available!
    constexpr u32 Biome = 0xFC5C5250; // Biome
    constexpr u32 Beach = 0x0FD173BA; // Beach
    constexpr u32 BirchForest = 0x051D7F6B; // Birch Forest
    constexpr u32 ColdBeach = 0xE41F8CB1; // Cold Beach
    constexpr u32 ColdTaiga = 0x03EF261E; // Cold Taiga
    constexpr u32 ASandyBiomeFoundAtEdgeOfOcean = 0x803004FC; // A sandy biome found at the edge of the ocean. Beaches are good for fishing.
    constexpr u32 AForestMadeEntirelyOutOfBirchTrees = 0xC285717D; // A forest made entirely out of birch trees.
    constexpr u32 ABeachWithSnowyWeatherConditions = 0xFEFE5487; // A beach with snowy weather conditions.
    constexpr u32 ASnowyVariantOfTaigaBiomeWhereFerns = 0x54E18948; // A snowy variant of the Taiga biome, where ferns and spruce trees grow. Wolves naturally spawn here.
    constexpr u32 AHotBiomeWithNoRainfallWithLittle = 0xF440C270; // A hot biome with no rainfall, with little vegetation other than Cacti. Desert Villages can be found ...
    constexpr u32 AColdDesolateBiomeWithNoRainEndermen = 0x938424DE; // A cold desolate biome with no rain. Endermen will spawn frequently at night time and the Enderdragon...
    constexpr u32 AColdBiomeWithSparseVegetationLivestockWill = 0xB5196CE2; // A cold biome with sparse vegetation. Livestock will spawn and it is the only biome where you can fin...
    constexpr u32 ATemperateWoodlandBiomeWithPlentifulFlowersAnd = 0xE2E84BD8; // A temperate woodland biome with plentiful flowers and mushrooms. Wolves may spawn here in addition t...
    constexpr u32 AColderVariantOfOceanWhereItSnows = 0x84809552; // A colder variant of the ocean where it snows and any surface water will begin to freeze. Squids can ...
    constexpr u32 ARiverThatOnlySpawnsInIceFlats = 0x743721BE; // A river that only spawns in Ice Flats. The surface layer of water will be frozen.
    constexpr u32 AnIcyBiomeWithLittleVegetationItWill = 0xC36E4255; // An icy biome with little vegetation, it will snow here and lakes will start to freeze over. Villages...
    constexpr u32 HugeMountainsCoveredInIceLittleWillGrow = 0x94EEA7F1; // Huge mountains covered in ice. Little will grow or live here.
    constexpr u32 AWarmBiomeEncrustedWithDenseTallForest = 0xCDC09066; // A warm biome encrusted with dense tall forest and thick vegetation underfoot. Ocelots can spawn here...
    constexpr u32 AHotAridBiome = 0x512D43DB; // A hot arid biome.
    constexpr u32 AnEccentricBiomePopulatedWithGiantMushroomsAnd = 0x64137D27; // An eccentric biome populated with Giant Mushrooms and Mooshrooms where Mushrooms can grow in sunligh...
    constexpr u32 AHotBiomeWithNoRainAndAn = 0x36D871A9; // A hot biome with no rain and an ominous red fog. Ghasts, Zombie Pigmen and Magma Cubes will spawn he...
    constexpr u32 ATemperateBiomeWithLittleVegetationOrFeatures = 0xB451512F; // A temperate biome with little vegetation or features, intended for worlds with deep surface water. S...
    constexpr u32 ATemperateGrassLandBiomeWithFewTrees = 0xE18C04C8; // A temperate grass land biome with few trees. Livestock and Horses will spawn here as will Villages.
    constexpr u32 AColdBiomeSimilarToRegularBiomeBut = 0xB0F3C474; // A cold biome similar to the regular biome but with large redwood trees.
    constexpr u32 ARiverMadeOfWaterBlocksRiversAre = 0x2BFF5663; // A river made of water blocks. Rivers are a good source of clay, and are good for fishing. Oak trees ...
    constexpr u32 ATemperateBiomeCoveredInADenseForest = 0xA5E5B0F2; // A temperate biome covered in a dense forest such that at ground level it is often dark enough for Mo...
    constexpr u32 AWarmDryBiomeWithNoRainVillages = 0x70594C1D; // A warm dry biome with no rain. Villages can spawn here as can Horses and Llamas.
    constexpr u32 AStoneCoveredBiomeThatLinksMountainsTo = 0x36A73618; // A stone-covered biome that links mountains to the ocean. This can result in huge cliffs if the mount...
    constexpr u32 ADankWetBiomeOfVariableTemperatureWitch = 0xDCCB0C5E; // A dank, wet biome of variable temperature. Witch Huts and Giant Mushrooms can be found here and Slim...
    constexpr u32 AConiferousWoodlandBiomeVillagesCanBeFound = 0x970AA853; // A coniferous woodland biome. Villages can be found here, and Wolves may spawn in addition to the usu...
    constexpr u32 Desert = 0xDA0D05C6; // Desert
    constexpr u32 End = 0x90FB0258; // End
    constexpr u32 ExtremeHills = 0x10B1B364; // Extreme Hills
    constexpr u32 Forest = 0x9DF015CE; // Forest
    constexpr u32 FrozenOcean = 0xFF83F484; // Frozen Ocean
    constexpr u32 FrozenRiver = 0xF3EF6AC8; // Frozen River
    constexpr u32 IceFlats = 0x57FDD413; // Ice Flats
    constexpr u32 IceMountains = 0xCD8BF7D7; // Ice Mountains
    constexpr u32 Jungle = 0xFF3DFB90; // Jungle
    constexpr u32 Mesa = 0xF12C6D6D; // Mesa
    constexpr u32 MushroomIsland = 0xE340F7C1; // Mushroom Island
    constexpr u32 Nether = 0x2241BF3F; // Nether
    constexpr u32 Ocean = 0x80F560C9; // Ocean
    constexpr u32 Plains = 0x67F3D31E; // Plains
    constexpr u32 RedwoodTaiga = 0x4D8647D2; // Redwood Taiga
    constexpr u32 River = 0x8D265305; // River
    constexpr u32 RoofedForest = 0xCE7616B4; // Roofed Forest
    constexpr u32 Savanna = 0x1CDB7ABB; // Savanna
    constexpr u32 BiomeScale = 0xA0E64DBF; // Biome Scale
    constexpr u32 StoneBeach = 0x54176F1E; // Stone Beach
    constexpr u32 Swampland = 0x9A125218; // Swampland
    constexpr u32 Taiga = 0x21EF0815; // Taiga
    constexpr u32 PlayableArea = 0xB0507C4A; // Playable Area
    constexpr u32 Biomes = 0x96F9113B; // Biomes
    constexpr u32 Blaze = 0xE6EDF96C; // Blaze
    constexpr u32 BonusChest = 0xF1FC8097; // Bonus Chest
    constexpr u32 ByS = 0xF68C61DB; // By %s
    constexpr u32 Original = 0x4AF696B3; // Original
    constexpr u32 CopyOfOriginal = 0x24F41C4A; // Copy of original
    constexpr u32 CopyOfACopy = 0xFEF1A1E1; // Copy of a copy
    constexpr u32 Tattered = 0xD8EF2778; // Tattered
    constexpr u32 SignAndClose = 0xA16C845C; // Sign and Close
    constexpr u32 EnterBookTitleRSRbySR = 0x27364E1B; // Enter Book Title:\r%s\rby %s\r\rNote! When you sign the book, it will no longer be editable.
    constexpr u32 EnderDragon = 0x588FEC7C; // Ender Dragon
    constexpr u32 BrewingStand = 0xDF516F15; // Brewing Stand
    constexpr u32 RemoveFromBannedList = 0xDCCBBA45; // Remove from Banned List
    constexpr u32 CanAttackAnimals = 0x2E30F7DD; // Can Attack Animals
    constexpr u32 CanAttackPlayers = 0x2A3B2570; // Can Attack Players
    constexpr u32 CanBuildAndMine = 0x0C1F0645; // Can Build and Mine
    constexpr u32 CanDisableExhaustion = 0x6D72DB6A; // Can Disable Exhaustion
    constexpr u32 CanFly = 0x65C86B6C; // Can Fly
    constexpr u32 CanBecomeInvisible = 0xBF2DF1B6; // Can Become Invisible
    constexpr u32 CanOpenContainers = 0xDA9C2AF0; // Can Open Containers
    constexpr u32 CanUseDoorsAndSwitches = 0xF7E7F9A1; // Can Use Doors and Switches
    constexpr u32 Cancel = 0xB25FB71A; // Cancel
    constexpr u32 PlacingLavaCloseToLevelSpawnPointIs = 0xBF12DC51; // Placing lava close to the level spawn point is not allowed due to the possibility of instant death f...
    constexpr u32 CantPlaceHere = 0x3856A24C; // Can't Place Here!
    constexpr u32 CantShearThisMooshroomAtMomentTheMaximum = 0x3221ECE8; // Can't shear this Mooshroom at the moment. The maximum number of animals, excluding Wolves, Bats, Chi...
    constexpr u32 YouCantSpawnEnemiesInPeacefulMode = 0xD97FDBA2; // You can't spawn enemies in Peaceful mode.
    constexpr u32 CantJoinGame = 0x85D6DC81; // Can't Join Game
    constexpr u32 Carrot = 0x288A8C0E; // Carrot
    constexpr u32 CaveSounds = 0xADD6F672; // Cave Sounds
    constexpr u32 CaveSpider = 0x11C0F98B; // Cave Spider
    constexpr u32 ChangeSkin = 0x5268D042; // Change Skin
    constexpr u32 AnimatedCharacter = 0x3A3FCF71; // Animated Character
    constexpr u32 ClassicCrafting = 0x58F11EC9; // Classic Crafting
    constexpr u32 CustomSkinAnimation = 0x68A6FE3F; // Custom Skin Animation
    constexpr u32 DeathMessages = 0xA38B3363; // Death Messages
    constexpr u32 DisplayGameMessages = 0x0A15F6DC; // Display Game Messages
    constexpr u32 DisplayHand = 0xA905CA9E; // Display Hand
    constexpr u32 DisplayHud = 0xC799C804; // Display HUD
    constexpr u32 DisplaySaveIcon = 0x02B7FF90; // Display Save Icon
    constexpr u32 SplitscreenNicknames = 0x07EB016E; // Splitscreen Nicknames
    constexpr u32 BedrockFog = 0x5DC9B58D; // Bedrock Fog
    constexpr u32 RenderClouds = 0xAC39846F; // Render Clouds
    constexpr u32 VerticalSplitscreen = 0xFFA0F6DC; // Vertical Splitscreen
    constexpr u32 Chest = 0x24FEE045; // Chest
    constexpr u32 LargeChest = 0x68521AAF; // Large Chest
    constexpr u32 Chicken = 0xBF2E68C5; // Chicken
    constexpr u32 ChooseBanner = 0x3FAFA532; // Choose Banner
    constexpr u32 PlayerCommand = 0xD2BD3683; // [{*PLAYER*} : {*COMMAND*}]
    constexpr u32 TheWorldSDefaultGameModeIsNowMode = 0xA816EC2E; // The world's default game mode is now {*MODE*}
    constexpr u32 SetGameDifficultyToDifficulty = 0xE34B099B; // Set game difficulty to {*DIFFICULTY*}
    constexpr u32 YourGameModeHasChanged = 0xDD05C6B4; // Your game mode has changed
    constexpr u32 SetPlayerSGameModeToMode = 0x5EEB14CE; // Set {*PLAYER*}'s game mode to {*MODE*}
    constexpr u32 SetOwnGameModeToMode = 0xDA993CC6; // Set own game mode to {*MODE*}
    constexpr u32 FailedToSetWorldSpawnPointYouMust = 0x334E4F83; // Failed to set the world spawn point. You must be in the Overworld to perform this action.
    constexpr u32 SetWorldSpawnPointToDDD = 0x590236FB; // Set the world spawn point to (%d, %d, %d)
    constexpr u32 FailedToSetPlayerSSpawnPointYou = 0xA7D52E1F; // Failed to set {*PLAYER*}'s spawn point. You must be in the Overworld to perform this action.
    constexpr u32 SetPlayerSSpawnPointToDDD = 0xC5814157; // Set {*PLAYER*}'s spawn point to (%d, %d, %d)
    constexpr u32 PlayerTeleportedYouToirPosition = 0x5C19FA7A; // {*PLAYER*} teleported you to their position
    constexpr u32 TeleportedPlayerToDestination = 0xCE88D7B9; // Teleported {*PLAYER*} to {*DESTINATION*}
    constexpr u32 PlayerTeleportedToYou = 0x186485A6; // {*PLAYER*} teleported to you
    constexpr u32 SetTimeToD = 0x24A5EDDC; // Set the time to %d
    constexpr u32 SetTimeToDay = 0xD982F837; // Set the time to day
    constexpr u32 SetTimeToNight = 0x0087FB07; // Set the time to night
    constexpr u32 ChangingToClearWeather = 0xB5F2B622; // Changing to clear weather
    constexpr u32 ChangingToRainyWeather = 0x3CED883F; // Changing to rainy weather
    constexpr u32 ChangingToRainAndThunder = 0x0A09D437; // Changing to rain and thunder
    constexpr u32 Cancel_1 = 0x4FCBC7E7; // Cancel
    constexpr u32 ExitWithoutSavingYouWillLoseAllProgress = 0xBB7E4722; // Are you sure you want to exit without saving? You will lose all progress in this world!
    constexpr u32 DisableConstantAutomaticSavingOfWorld = 0x4D0C73AC; // Are you sure you want to disable the constant, automatic saving of the world?
    constexpr u32 WouldYouLikeToEnableConstantAutomaticSaving = 0x17B69951; // Would you like to enable the constant, automatic saving of the world?
    constexpr u32 ExitToMainMenu = 0xC85A78C0; // Are you sure you want to exit to the main menu?
    constexpr u32 ExitToMainMenuAndDisconnectAllPlayers = 0x094D2642; // Are you sure you want to exit to the main menu and disconnect all players from the game?
    constexpr u32 ExitToMainMenuAndDisconnectAllPlayersAnyUnsavedProgressWillBe = 0x54B9CCF4; // Are you sure you want to exit to the main menu and disconnect all players from the game? Any unsaved...
    constexpr u32 ExitToMainMenuYourProgressWillBeLost = 0x59C349D9; // Are you sure you want to exit to the main menu? Your progress will be lost!
    constexpr u32 ExitToMainMenu_1 = 0xD5E33637; // Are you sure you want to exit to the main menu?
    constexpr u32 LeaveYourCurrentGameAndJoinNewOne = 0xAE8AAE0D; // Are you sure you want to leave your current game and join the new one? Any unsaved progress will be ...
    constexpr u32 Ok = 0xB9A1BF4D; // OK
    constexpr u32 OverwriteAnyPreviousSaveForThisWorldWith = 0xD66B8839; // Are you sure you want to overwrite any previous save for this world with the current version of this...
    constexpr u32 IfYouCreateLoadOrSaveAWorld = 0x9007A945; // If you create, load or save a world in Creative Mode, that world will have achievements disabled, ev...
    constexpr u32 CustomWorldsHaveAchievementsDisabledDoYouWant = 0x7BC65289; // Custom worlds have achievements disabled. Do you want to continue?
    constexpr u32 IfYouCreateLoadOrSaveAWorldWithHostPrivilegesEnabledWith = 0x020D77D5; // If you create, load or save a world with Host Privileges enabled, that world will have achievements ...
    constexpr u32 ThisWorldHasPreviouslyBeenSavedInCreative = 0xFFA86E4F; // This world has previously been saved in Creative Mode, and it will have achievements disabled. Are y...
    constexpr u32 ThisWorldHasPreviouslyBeenSavedInCreative_1 = 0x564AD961; // This world has previously been saved in Creative Mode, and it will have achievements disabled.
    constexpr u32 IfYouCreateASuperflatWorldThatWorld = 0x93BD6580; // If you create a Superflat world, that world will have achievements disabled. Are you sure you want t...
    constexpr u32 ConnectingToNetwork = 0xCB861729; // Connecting to network
    constexpr u32 ConnectingToNintendoSwitchOnline = 0x5F33BA82; // Connecting to Nintendo Switch Online
    constexpr u32 ConnectingToNetwork_1 = 0xDC997B77; // Connecting to network
    constexpr u32 ConnectionFailed = 0x4BB9D6AE; // Connection failed
    constexpr u32 YouCannotJoinThisGameAsSplitScreen = 0x9A0686FB; // You cannot join this game as split-screen is only supported when not displaying the game on the Nint...
    constexpr u32 YouCannotJoinThisGameAsSplitScreenInHighDefinitionModeSign = 0xE1F62E69; // You cannot join this game as split-screen is only supported when in High Definition mode. Sign out a...
    constexpr u32 ConnectionLost = 0xF1C0F3D9; // Connection lost
    constexpr u32 ConnectionToNintendoSwitchOnlineWasLostExiting = 0x9D363C70; // Connection to Nintendo Switch Online was lost. Exiting to the main menu.
    constexpr u32 ConnectionToNintendoSwitchOnlineWasLost = 0x16CB58E9; // Connection to Nintendo Switch Online was lost.
    constexpr u32 ConnectionToLocalNetworkWasLostExitingTo = 0xD30DB113; // Connection to Local Network was lost. Exiting to the main menu.
    constexpr u32 ConnectionToLocalNetworkWasLost = 0x1AA54C4A; // Connection to Local Network was lost.
    constexpr u32 ConnectionToServerWasLostExitingToMain = 0x665E892B; // Connection to the server was lost. Exiting to the main menu.
    constexpr u32 Horse = 0x2568BD7A; // Horse
    constexpr u32 Beacon = 0x73B59FE0; // Beacon
    constexpr u32 PrimaryPower = 0xB3C82373; // Primary Power
    constexpr u32 SecondaryPower = 0x7B8C1D5D; // Secondary Power
    constexpr u32 Dropper = 0x0F46E4B2; // Dropper
    constexpr u32 Hopper = 0xADE7383C; // Hopper
    constexpr u32 Minecart = 0x917EA687; // Minecart
    constexpr u32 ShulkerBox = 0x7B0460C8; // Shulker Box
    constexpr u32 Control = 0xF73A5623; // Control
    constexpr u32 Controls = 0x80FED3F0; // Controls
    constexpr u32 Action = 0xE90D9E49; // Action
    constexpr u32 ButtonConflictDetectedPleaseAssignAButtonTo = 0x23B1B1AE; // Button Conflict detected. Please assign a button to this action.
    constexpr u32 PressAnyButtonOrPressControllerVkBack = 0x4ADD6081; // Press any button or press {*CONTROLLER_VK_BACK*} to cancel.
    constexpr u32 SomeActionsCantBeMappedBecauseYouAre = 0x185BDD14; // Some actions can't be mapped because you are using a controller with a reduced set of buttons. Press...
    constexpr u32 ResetControls = 0x8038CB11; // Reset Controls
    constexpr u32 Crafting = 0x4EF5D075; // Crafting
    constexpr u32 FlyDown = 0x48A6649D; // Fly Down
    constexpr u32 FlyLeft = 0x880870A4; // Fly Left
    constexpr u32 FlyRight = 0xDB0D0C07; // Fly Right
    constexpr u32 FlyUp = 0xBFC2DB62; // Fly Up
    constexpr u32 MovementWhenFlying = 0x3134B0A6; // Movement (When Flying)
    constexpr u32 Drop = 0x7A6EAD8E; // Drop
    constexpr u32 CycleHeldItemLeft = 0xC513139B; // Cycle Held Item Left
    constexpr u32 CycleHeldItemRight = 0x72AB6B50; // Cycle Held Item Right
    constexpr u32 Menus = 0x976ACDBA; // Menus
    constexpr u32 Inventory = 0xC2695D1D; // Inventory
    constexpr u32 Jump = 0x3FEF334D; // Jump
    constexpr u32 JumpFlyUp = 0x774C60EE; // Jump/Fly Up
    constexpr u32 Layout = 0x31AFD3BD; // Layout
    constexpr u32 ConfirmReady = 0x2EDFF749; // Confirm Ready
    constexpr u32 Vote = 0xC9F98A25; // Vote
    constexpr u32 Look = 0x1C7A7950; // Look
    constexpr u32 MoveSprint = 0x1EDA7C36; // Move/Sprint
    constexpr u32 None = 0x211CD1AD; // NONE
    constexpr u32 Pause = 0x69C78F9D; // Pause
    constexpr u32 PickBlock = 0x50C103AF; // Pick Block
    constexpr u32 Players = 0x7BA25517; // Players
    constexpr u32 Layout1 = 0xDBE693CA; // Layout 1
    constexpr u32 Layout2 = 0x01E90E33; // Layout 2
    constexpr u32 Layout3 = 0x8FE19EF8; // Layout 3
    constexpr u32 Creative = 0x4AEBCA1A; // Creative
    constexpr u32 GlideMiniGame = 0x48A5D3BA; // Glide Mini Game
    constexpr u32 MiniGameLobby = 0xD62470C6; // Mini Game Lobby
    constexpr u32 Movement = 0x8EB977D2; // Movement
    constexpr u32 Spectating = 0x1FD34DBD; // Spectating
    constexpr u32 Standard = 0x19988BBA; // Standard
    constexpr u32 SneakDismount = 0x464BE825; // Sneak/Dismount
    constexpr u32 SneakFlyDown = 0x8EFA4866; // Sneak/Fly Down
    constexpr u32 CancelSpectating = 0x6A023A0F; // Cancel Spectating
    constexpr u32 NextPlayer = 0xEA6BB036; // Next Player
    constexpr u32 SpectateNoise = 0xF4A1C60F; // Spectate Noise
    constexpr u32 PreviousPlayer = 0xBC932FF8; // Previous Player
    constexpr u32 Sprint = 0x75549FCD; // Sprint
    constexpr u32 EquipUnequipOffhand = 0xF4DA0577; // Equip/Unequip Offhand
    constexpr u32 ChangeCameraMode = 0x88874831; // Change Camera Mode
    constexpr u32 Use = 0x5617DB3C; // Use
    constexpr u32 YouHaveUnassignedActionsAreYouSureYou = 0x9954EBE7; // You have unassigned actions, are you sure you want to continue?
    constexpr u32 UnassignedActions = 0x9EAA5B0A; // Unassigned Actions
    constexpr u32 CopySave = 0x490209B8; // Copy Save
    constexpr u32 ConsoleWorlds = 0x5D2F512D; // Minecraft: Nintendo Switch Edition has insufficient space to copy this save game. To make room, dele...
    constexpr u32 SaveGameCopyingError = 0x87FF2053; // Save game copying error
    constexpr u32 ThisDownloadableContentIsCorruptAndCannotBe = 0xA69E5B0D; // This downloadable content is corrupt and cannot be used. You need to delete it, then re-install it f...
    constexpr u32 SomeOfYourDownloadableContentIsCorruptAnd = 0x75E79C02; // Some of your downloadable content is corrupt and cannot be used. You need to delete them, then re-in...
    constexpr u32 CorruptDownloadableContent = 0xE3D8522A; // Corrupt Downloadable Content
    constexpr u32 ThisSaveIsCorruptOrDamagedWouldYou = 0x9C82CC67; // This save is corrupt or damaged. Would you like to delete it?
    constexpr u32 DamagedSave = 0x8A786F8A; // Damaged Save
    constexpr u32 YourSaveDataAppearsToBeCorruptCreate = 0xDF524372; // Your save data appears to be corrupt.  Create a new save and overwrite the corrupt one?
    constexpr u32 CorruptSave = 0x8AF063C7; // Corrupt Save
    constexpr u32 Cow = 0x32A43497; // Cow
    constexpr u32 CreateNewWorld = 0xB0B877E6; // Create New World
    constexpr u32 LeaveBlankForARandomSeed = 0xAE4164B2; // Leave blank for a random seed
    constexpr u32 SeedForWorldGenerator = 0xA60B975E; // Seed for the World Generator
    constexpr u32 InputSeedForYourWorldGeneration = 0x4F8E6A4B; // Input the seed for your world generation
    constexpr u32 Create = 0x41716830; // Create
    constexpr u32 CreateANewSave = 0xAB74E4FC; // Create a new save
    constexpr u32 CreatedInCreativeMode = 0x61833048; // Created in Creative Mode
    constexpr u32 CreatedInSurvivalMode = 0x108A4753; // Created in Survival Mode
    constexpr u32 Creative_1 = 0xB7C2FCAF; // Creative
    constexpr u32 Credits = 0x4E960EB2; // Credits
    constexpr u32 AdditionalAssistance = 0xBAFD6735; // Additional Assistance
    constexpr u32 AdditionalGraphics = 0x0926FB0E; // Additional Graphics
    constexpr u32 AdditionalProgramming = 0xCB5A7F0A; // Additional Programming
    constexpr u32 AdditionalSte = 0xE74E0F2E; // Additional STE
    constexpr u32 AdrianStergRd = 0x306B970A; // Adrian Östergård
    constexpr u32 AgataJabOSka = 0x8FAC0F5D; // Agata Jabłońska
    constexpr u32 AlexanderStman = 0x44BB0513; // Alexander Östman
    constexpr u32 AmandaStrM = 0x7609436C; // Amanda Ström
    constexpr u32 AndreasJRgensen = 0x9784D718; // Andreas Jörgensen
    constexpr u32 AnnaPonomarWCompliance = 0xEFEF76BF; // Anna Ponomarów (Compliance)
    constexpr u32 AnnaWrBel = 0x2A229D33; // Anna Wróbel
    constexpr u32 ArkadiuszKOs = 0xC044B061; // Arkadiusz Kłos
    constexpr u32 ArkadiuszKOs_1 = 0x4EB09CF5; // Arkadiusz Kłos
    constexpr u32 ArkadiuszSykuA = 0xAA422C63; // Arkadiusz Sykuła
    constexpr u32 Art = 0xDBE84132; // Art
    constexpr u32 ArtDirector = 0xD153F605; // Art Director
    constexpr u32 ArtDeveloper = 0xA21DFE94; // Art Developer
    constexpr u32 AsiaLocalizationTeam = 0xDA5A1A3F; // Asia Localization Team
    constexpr u32 AssistantProducers = 0xB4C1366D; // Assistant Producers
    constexpr u32 AssociateProducer = 0x7C185FB1; // Associate Producer
    constexpr u32 BAEjRajewski = 0xCE72D3E4; // Błażej Rajewski
    constexpr u32 BarbaraUkaszewicz = 0x18E2C17B; // Barbara Łukaszewicz
    constexpr u32 BarOmiejBorowiec = 0xAAFAA647; // Barłomiej Borowiec
    constexpr u32 BarOmiejJesionkiewiczLionbridgeTechnologiesInc = 0x699C9463; // Barłomiej Jesionkiewicz (Lionbridge Technologies Inc)
    constexpr u32 BartOmiejKmita = 0x1921548D; // Bartłomiej Kmita
    constexpr u32 BartOmiejNowakowski = 0xCD7534EA; // Bartłomiej Nowakowski
    constexpr u32 BartOmiejArek = 0xCF11F7A0; // Bartłomiej Żarek
    constexpr u32 BartOmiejJesionkiewiczLionbridgeTechnologiesInc = 0xD67E631C; // Bartłomiej Jesionkiewicz (Lionbridge Technologies Inc)
    constexpr u32 BartOmiejArek_1 = 0x79C4E34E; // Bartłomiej Żarek
    constexpr u32 BusinessDevelopment = 0x5478AFFB; // Business Development
    constexpr u32 BAEjZawadzki = 0xE8AE5549; // Błażej Zawadzki
    constexpr u32 BrandDirector = 0xF23284A9; // Brand Director
    constexpr u32 BullyCoordinator = 0xED96CEA6; // Bully Coordinator
    constexpr u32 BusinessDevelopment_1 = 0xD6789B47; // Business Development
    constexpr u32 BusinessIntelligence = 0x5BF14C41; // Business Intelligence
    constexpr u32 Ceo = 0x1D3E6134; // CEO
    constexpr u32 CharlotteWredesj = 0xB091AF14; // Charlotte Wredesjö
    constexpr u32 ChiefExecutiveOfficer = 0x52A74A46; // Chief Executive Officer
    constexpr u32 ChiefExecutiveOfficers = 0x5215649D; // Chief Executive Officers
    constexpr u32 ChiefFinanceOfficer = 0x7EB392AE; // Chief Finance Officer
    constexpr u32 ChiefOperationsOfficer = 0x11338E70; // Chief Operations Officer
    constexpr u32 ChiefTechnologyOfficer = 0xEAF50990; // Chief Technology Officer
    constexpr u32 ChiefArchitect = 0xE3A4EB2B; // Chief Architect
    constexpr u32 NinjaCoder = 0x25A71862; // Ninja Coder
    constexpr u32 CommunityCoordinator = 0xD15B5DC3; // Community Coordinator
    constexpr u32 CommunityManager = 0xF2F32F7A; // Community Manager
    constexpr u32 CommunityManager_1 = 0x3A274A35; // Community Manager
    constexpr u32 ConceptArtist = 0x743DB8CA; // Concept Artist
    constexpr u32 CreativeCommunicationsAssistant = 0xB0F32241; // Creative Communications Assistant
    constexpr u32 CreativeCommunicationsManager = 0xDDFDEBD6; // Creative Communications Manager
    constexpr u32 NumberCrunchingAndStatistics = 0xEA413AC3; // Number Crunching and Statistics
    constexpr u32 CustomerSupport = 0xF9A50191; // Customer Support
    constexpr u32 CustomerSupportTeamLead = 0xEDC37C58; // Customer Support Team Lead
    constexpr u32 CustomerSupport_1 = 0x92A6CC86; // Customer Support
    constexpr u32 _3dVfxGeneralist = 0xD7F366C1; // 3D/vfx Generalist
    constexpr u32 DamianGabry = 0x3A0853FB; // Damian Gabryś
    constexpr u32 DamianGabry_1 = 0x5C985FE8; // Damian Gabryś
    constexpr u32 DamianStPie = 0xD8F4F82C; // Damian Stępień
    constexpr u32 DamianStPie_1 = 0x9B622FEF; // Damian Stępień
    constexpr u32 DesignTeam = 0x9B231F2A; // Design Team
    constexpr u32 DesignerProgrammerMinecraftPocketEdition = 0x0DF5B6E5; // Designer/Programmer Minecraft - Pocket Edition
    constexpr u32 Developer = 0x386E02DB; // Developer
    constexpr u32 DevelopersOfMoCreatures = 0xBF1721FC; // Developers of Mo’ Creatures
    constexpr u32 DevelopmentTeam = 0x530FE26B; // Development Team
    constexpr u32 DiegoFernNdezRodrGuezLionbridgeTechnologiesInc = 0x4DBC1FC9; // Diego Fernández Rodríguez (Lionbridge Technologies Inc)
    constexpr u32 DirectorOfBusinessDevelopment = 0xB0734E2E; // Director of Business Development
    constexpr u32 DirectorOfCreativeCommunications = 0xB0346BFB; // Director of Creative Communications
    constexpr u32 DirectorOfFun = 0x56D03840; // Director of Fun
    constexpr u32 EuropeLocalizationTeam = 0x1A2CB985; // Europe Localization Team
    constexpr u32 ExecutiveProducer = 0x388E64F6; // Executive Producer
    constexpr u32 ExecutiveProducer_1 = 0x7AE784AA; // Executive Producer
    constexpr u32 ExplosivesAnimator = 0x29D8FEEC; // Explosives Animator
    constexpr u32 FinanceAccountants = 0xA360BA1B; // Finance Accountants
    constexpr u32 FinanceManager = 0xA92C74E1; // Finance Manager
    constexpr u32 FranchiseBusinessManager = 0x6183B28F; // Franchise Business Manager
    constexpr u32 FranchiseBusinessTeam = 0x584FAEC1; // Franchise Business Team
    constexpr u32 FrDRiqueFourny = 0x895BA299; // Frédérique Fourny
    constexpr u32 GameDevelopers = 0x9215E989; // Game Developers
    constexpr u32 GameCrafter = 0x8033E876; // Game Crafter
    constexpr u32 GamesTestSpecialistsDutch = 0xBD37E77B; // Games Test Specialists (Dutch)
    constexpr u32 GamesTestSpecialistsFrench = 0xB657E469; // Games Test Specialists (French)
    constexpr u32 GamesTestSpecialistsFrenchCanadian = 0x76DB78A1; // Games Test Specialists (French Canadian)
    constexpr u32 GamesTestSpecialistsGerman = 0x3221FC5F; // Games Test Specialists (German)
    constexpr u32 GamesTestSpecialistsItalian = 0x7F4501AB; // Games Test Specialists (Italian)
    constexpr u32 GamesTestSpecialistsJapanese = 0xD54E780A; // Games Test Specialists (Japanese)
    constexpr u32 GamesTestSpecialistsPortuguese = 0xB9D522D0; // Games Test Specialists (Portuguese)
    constexpr u32 GamesTestSpecialistsRussian = 0xAFF88B04; // Games Test Specialists (Russian)
    constexpr u32 GamesTestSpecialistsSpanish = 0xA3D34FC3; // Games Test Specialists (Spanish)
    constexpr u32 GamesTestSpecialistsSpanishMexican = 0x0FA644F9; // Games Test Specialists (Spanish Mexican)
    constexpr u32 GamesTestSpecialistsTurkish = 0x247EA617; // Games Test Specialists (Turkish)
    constexpr u32 GlobalProductionManager = 0x7A7495C6; // Global Production Manager
    constexpr u32 GlobalProgramManager = 0xE4476429; // Global Program Manager
    constexpr u32 GraphicsArtists = 0xB1D7555D; // Graphics Artists
    constexpr u32 HeadOfCommunityRelations = 0x0BA35AAD; // Head of Community Relations
    constexpr u32 HeadOfSocialMedia = 0x426A7E7C; // Head of Social Media
    constexpr u32 IntellectualPropertyEnforcementAgents = 0xE4C7E97F; // Intellectual Property Enforcement Agents
    constexpr u32 IntellectualPropertyEnforcementTeamLead = 0x2B838FBB; // Intellectual Property Enforcement Team Lead
    constexpr u32 InternationalProjectEngineer = 0xD03B0593; // International Project Engineer
    constexpr u32 InternationalProjectManager = 0x162281B9; // International Project Manager
    constexpr u32 InternationalProjectEngineer_1 = 0x8D0CE6D1; // International Project Engineer
    constexpr u32 JaimeLimN = 0xA8AF8969; // Jaime Limón
    constexpr u32 JRMieDionLionbridgeTechnologiesInc = 0xF3D6AC20; // Jérémie Dion (Lionbridge Technologies Inc)
    constexpr u32 JerzyTymiSki = 0x5845D1F2; // Jerzy Tymiński
    constexpr u32 JoOMeiraLionbridgeTechnologiesInc = 0xCCCE67E4; // João Meira (Lionbridge Technologies Inc)
    constexpr u32 JonKGstrM = 0xEF9CAA03; // Jon Kågström
    constexpr u32 JonasMRtensson = 0xBE6016D2; // Jonas Mårtensson
    constexpr u32 JonatanPLj = 0x686EBB35; // Jonatan Pöljö
    constexpr u32 JuniorProjectManager = 0x1D52C3A2; // Junior Project Manager
    constexpr u32 JuniorProjectManager_1 = 0x815E1746; // Junior Project Manager
    constexpr u32 KamilBazydO = 0x58B41A03; // Kamil Bazydło
    constexpr u32 KamilBazydO_1 = 0xA2806F88; // Kamil Bazydło
    constexpr u32 KarimWalldN = 0x6592A6FA; // Karim Walldén
    constexpr u32 KonradMontwi = 0x35D4F251; // Konrad Montwiłł
    constexpr u32 KonradMontwi_1 = 0xBF208651; // Konrad Montwiłł
    constexpr u32 KrzysztofUczakCompliance = 0x62155AE8; // Krzysztof Łuczak (Compliance)
    constexpr u32 LanguageLead = 0x937B23C5; // Language Lead
    constexpr u32 LanguageLead_1 = 0xDAAEDE5C; // Language Lead
    constexpr u32 LeadCreativeDesigner = 0xDFB5CF07; // Lead Creative Designer
    constexpr u32 LeadSoundDesigner = 0xAE652ED7; // Lead Sound Designer
    constexpr u32 LeadSystemsDeveloper = 0xC73BE621; // Lead Systems Developer
    constexpr u32 LeadGameProgrammerMinecraftPc = 0x2C01229A; // Lead Game Programmer Minecraft PC
    constexpr u32 LeadProducer = 0x76B5D631; // Lead Producer
    constexpr u32 LeadTester = 0x47A66018; // Lead Tester
    constexpr u32 LevelDesigners = 0x1E104FC2; // Level Designers
    constexpr u32 LionbridgeGameServices = 0x2DA9020D; // Lionbridge Game Services
    constexpr u32 LionbridgeOperationsManager = 0x2DE3A503; // Lionbridge Operations Manager
    constexpr u32 GlobalProgramManager_1 = 0x28994300; // Global Program Manager
    constexpr u32 Localization = 0xD039BC1E; // Localization
    constexpr u32 LocalizationEngineeringManager = 0x86A617DC; // Localization Engineering Manager
    constexpr u32 LocalizationProjectManager = 0x9BC352E8; // Localization Project Manager
    constexpr u32 LocalizationTestLead = 0x008DB08C; // Localization Test Lead
    constexpr u32 LocalizationTestProjectManager = 0xA61C0011; // Localization Test Project Manager
    constexpr u32 LocalizationWarsawTeam = 0x84748C3A; // Localization Warsaw Team
    constexpr u32 GlobalProductionManager_1 = 0xDBE2A0E6; // Global Production Manager
    constexpr u32 InternationalProjectManager_1 = 0x10841699; // International Project Manager
    constexpr u32 LocalizationOperationsManagerSeniorPm = 0xB5CD96EE; // Localization Operations Manager/Senior PM
    constexpr u32 LocalizationProjectManager_1 = 0x8471AEB0; // Localization Project Manager
    constexpr u32 LocalizationQaProjectManager = 0x49AD3658; // Localization QA Project Manager
    constexpr u32 LocalizationTestLead_1 = 0x69050D7F; // Localization Test Lead
    constexpr u32 LocalizationTestProjectManager_1 = 0x3E1DC5DC; // Localization Test Project Manager
    constexpr u32 UkaszMikusek = 0xEC09E450; // Łukasz Mikusek
    constexpr u32 MaciejMamiSkiLionbridgeGameServices = 0x325B2C06; // Maciej Mamiński (Lionbridge Game Services)
    constexpr u32 MaciejUrO = 0xD55E8D97; // Maciej Urło
    constexpr u32 MaciejZwierzySki = 0xDC4F829C; // Maciej Zwierzyński
    constexpr u32 MaciejMamiSkiLionbridgeGameServices_1 = 0x47F3627B; // Maciej Mamiński (Lionbridge Game Services)
    constexpr u32 MagnusJDerberg = 0x71364A9A; // Magnus Jäderberg
    constexpr u32 MarcinKulpiSki = 0x353D1464; // Marcin Kulpiński
    constexpr u32 MarcinKulpiSki_1 = 0x7709B592; // Marcin Kulpiński
    constexpr u32 MariaLemN = 0x82F7F356; // Maria Lemón
    constexpr u32 Marketing = 0x09DB2AF9; // Marketing
    constexpr u32 MartynaPaAszTwardochLionbridgeGameServices = 0x8740D5D4; // Martyna Pałasz-Twardoch (Lionbridge Game Services)
    constexpr u32 MartynaPaAszTwardochLionbridgeGameServices_1 = 0xE076FB3C; // Martyna Pałasz-Twardoch (Lionbridge Game Services)
    constexpr u32 MateuszSzymaSki = 0x56A29538; // Mateusz Szymański
    constexpr u32 MatildaKerman = 0x72E963C4; // Matilda Åkerman
    constexpr u32 MgsCentralTeams = 0x30C5217F; // MGS Central Teams
    constexpr u32 MichaBOSki = 0xDF4DEBA8; // Michał Błoński
    constexpr u32 MichaKusiak = 0xF11F0872; // Michał Kusiak
    constexpr u32 MichaMYnek = 0xD1872370; // Michał Młynek
    constexpr u32 MichaBajguz = 0xCD404EA1; // Michał Bajguz
    constexpr u32 MichaBOSki_1 = 0xB8BC98E6; // Michał Błoński
    constexpr u32 MichaBorowicz = 0x7564F9FF; // Michał Borowicz
    constexpr u32 MichaOleszek = 0xD75F5EF9; // Michał Oleszek
    constexpr u32 MichaSAwek = 0x66D62927; // Michał Sławek
    constexpr u32 MichaStefaSki = 0xE0EE6C62; // Michał Stefański
    constexpr u32 MichaWaCiSki = 0x46EEC868; // Michał Waściński
    constexpr u32 MichalWojciechowskiLionbridgeGameServices = 0xFB7914AB; // Michal Wojciechowski (Lionbridge Game Services)
    constexpr u32 MichaWojeciechowski = 0xC8B1AE72; // Michał Wojeciechowski
    constexpr u32 MichaWyroLak = 0xA5A2484E; // Michał Wyroślak
    constexpr u32 MichaMYnek_1 = 0x06AF3D0F; // Michał Młynek
    constexpr u32 MichaWojciechowskiLionbridgeGameServices = 0x521243E8; // Michał Wojciechowski (Lionbridge Game Services)
    constexpr u32 MicrosoftLocalization = 0x29A87664; // Microsoft Localization
    constexpr u32 MicrosoftLocalization_1 = 0x128D467D; // Microsoft Localization
    constexpr u32 MicrosoftProjectLead = 0x14334198; // Microsoft Project Lead
    constexpr u32 MilestoneAcceptanceTester = 0xE0017DE3; // Milestone Acceptance Tester
    constexpr u32 MinecraftConsoleTeam = 0x516F1BB2; // Minecraft Console Team
    constexpr u32 MinecraftTeam = 0xDB4B09C2; // Minecraft Team
    constexpr u32 MNsOlson = 0x3142D383; // Måns Olson
    constexpr u32 MusicComposedBy = 0x94DA1013; // Music composed by
    constexpr u32 MusicAndSounds = 0xF9F297E7; // Music and Sounds
    constexpr u32 OfficeManagers = 0xE10654BA; // Office Managers
    constexpr u32 OfficeDj = 0x6D23E98B; // Office DJ
    constexpr u32 OriginalCreator = 0x3CC215D7; // Original Creator
    constexpr u32 OriginalDesignAndCodeBy = 0xB475D2D6; // Original Design and Code by
    constexpr u32 PatrikSDergren = 0xAD2D7129; // Patrik Södergren
    constexpr u32 PaulinaLiwiSka = 0x2D0E4533; // Paulina Śliwińska
    constexpr u32 PaweDermanowskiCompliance = 0x7A660D6B; // Paweł Dermanowski  (Compliance)
    constexpr u32 PaweRomanowski = 0x7ADEAF53; // Paweł Romanowski
    constexpr u32 PiotrOrOwskiCompliance = 0xE694EE0C; // Piotr Orłowski (Compliance)
    constexpr u32 ProjectManagerProducer = 0x17C203A9; // Project Manager/Producer
    constexpr u32 PortfolioDirector = 0x485F6FCF; // Portfolio Director
    constexpr u32 PRAxelsson = 0x86D10241; // Pär Axelsson
    constexpr u32 Producer = 0x3230EB75; // Producer
    constexpr u32 Producers = 0x606C8E96; // Producers
    constexpr u32 ProductDesigners = 0xD693A37F; // Product Designers
    constexpr u32 ProductionDirector = 0x51BBD761; // Production Director
    constexpr u32 ProductManager = 0x95210B65; // Product Manager
    constexpr u32 Programming = 0x16BD8EB4; // Programming
    constexpr u32 ProjectSte = 0x3F531B88; // Project STE
    constexpr u32 ProjectCoordinator = 0x2F5E0DDD; // Project Coordinator
    constexpr u32 ProjectDirector = 0xA39A4D9F; // Project Director
    constexpr u32 ProjectDirectors = 0x86F520AC; // Project Directors
    constexpr u32 ProjectManager = 0xDA284844; // Project Manager
    constexpr u32 ProjectManagers = 0xA70E876F; // Project Managers
    constexpr u32 ProjectCoordinator_1 = 0x6834B3FD; // Project Coordinator
    constexpr u32 ProjectManager_1 = 0x8894C7DB; // Project Manager
    constexpr u32 PrzemysAwPDzierski = 0x2A864C36; // Przemysław Pędzierski
    constexpr u32 PrzemysAwWrBel = 0x957EF4D3; // Przemysław Wróbel
    constexpr u32 PublicRelations = 0x1277FC6E; // Public Relations
    constexpr u32 Qa = 0xD7CCD84D; // QA
    constexpr u32 QualityTeamLead = 0x2E45D4B9; // Quality Team Lead
    constexpr u32 QualityTeamLead_1 = 0xBD757619; // Quality Team Lead
    constexpr u32 RadosAwParfieniuk = 0xE5CE3147; // Radosław Parfieniuk
    constexpr u32 RadosAwParfieniuk_1 = 0x778780BB; // Radosław Parfieniuk
    constexpr u32 RafaNDzarek = 0x3784C212; // Rafał Nędzarek
    constexpr u32 RafaWojda = 0x7CE17CDD; // Rafał Wojda
    constexpr u32 ReadingEngland = 0x7B0CF4E7; // READING, ENGLAND
    constexpr u32 RealmsContentCoordinator = 0x55648D72; // Realms Content Coordinator
    constexpr u32 RealmsContentLead = 0x801A48DC; // Realms Content Lead
    constexpr u32 RealmsDevelopers = 0xB985D4E3; // Realms Developers
    constexpr u32 RedmondLocalizationTeam = 0xE52A7ED6; // Redmond Localization Team
    constexpr u32 ReleaseManagement = 0x23BDDE97; // Release Management
    constexpr u32 RestOfMojangOffice = 0xA59E715C; // Rest of Mojang Office
    constexpr u32 RisLugo = 0xE696698E; // Risë Lugo
    constexpr u32 RobertSjDahl = 0xA77BD396; // Robert Sjödahl
    constexpr u32 RobinThunstrM = 0x86C3F09D; // Robin Thunström
    constexpr u32 SamuelBerg = 0xCF363E03; // Samuel Åberg
    constexpr u32 SarahMRtensson = 0xE2550D72; // Sarah Mårtensson
    constexpr u32 Sdet = 0xAA2786A3; // SDET
    constexpr u32 SeniorEngineer = 0x69EED83F; // Senior Engineer
    constexpr u32 SeniorLanguageLead = 0x23027397; // Senior Language Lead
    constexpr u32 SeniorLocalizationTestLead = 0x9B7D6D2F; // Senior Localization Test Lead
    constexpr u32 SeniorManagerPlayerVoiceExperience = 0x315D4F09; // "Senior Manager,  Player Voice & Experience "
    constexpr u32 SeniorProducer = 0x6B798F06; // Senior Producer
    constexpr u32 SeniorSoftwareTestEngineer = 0x4E06952E; // Senior Software Test Engineer
    constexpr u32 SeniorTestManager = 0xBFDEBF64; // Senior Test Manager
    constexpr u32 SeniorEngineer_1 = 0x886C6330; // Senior Engineer
    constexpr u32 SeniorLanguageLead_1 = 0x2E38A5F9; // Senior Language Lead
    constexpr u32 SeniorProducer_1 = 0xB124D7A9; // Senior Producer
    constexpr u32 SeniorTestManager_1 = 0x7A7696DC; // Senior Test Manager
    constexpr u32 SoftwareTestEngineer = 0x9D90B5AD; // Software Test Engineer
    constexpr u32 SoftwareTestEngineers = 0xB711B12E; // Software Test Engineers
    constexpr u32 SoundDesign = 0xA045307B; // Sound Design
    constexpr u32 SpecialThanks = 0x34DEFC60; // Special Thanks
    constexpr u32 SpecialThanksToNintendo = 0x6A04EF8A; // Special thanks to Nintendo
    constexpr u32 SpecialThanks_1 = 0x81D17017; // Special Thanks
    constexpr u32 SeniorTestLead = 0xD88AAF3E; // Senior Test Lead
    constexpr u32 SteCompliance = 0x61809465; // STE Compliance
    constexpr u32 SteCompliance_1 = 0x306F493A; // STE Compliance
    constexpr u32 StudiosReleaseManagement = 0xD0C92F5C; // Studios Release Management
    constexpr u32 SystemDevelopers = 0x8A5EA58A; // System Developers
    constexpr u32 TaCompliance = 0xABECEFBA; // TA Compliance
    constexpr u32 TaCompliance_1 = 0x7FF3484D; // TA Compliance
    constexpr u32 TeamLeads = 0xE4DAECB8; // Team Leads
    constexpr u32 TeamLeads_1 = 0x7C885467; // Team Leads
    constexpr u32 TeamManager = 0x66128D6B; // Team Manager
    constexpr u32 TestAssociate = 0x63640748; // Test Associate 
    constexpr u32 TestAssociates = 0x7F9FC813; // Test Associates
    constexpr u32 TestLeads = 0x6997A99B; // Test Leads
    constexpr u32 TestManager = 0x598B1F77; // Test Manager
    constexpr u32 MinecraftTestTeamLead = 0x884E5162; // Minecraft Test Team Lead
    constexpr u32 TestAssociates_1 = 0x5739ACBC; // Test Associates
    constexpr u32 TestLead = 0x9E2BCA6F; // Test Lead
    constexpr u32 TestManager_1 = 0x0F3C9AD0; // Test Manager
    constexpr u32 ThomasGuimbretiRe = 0xC17C4F27; // Thomas Guimbretière
    constexpr u32 TobiasMLlstam = 0xE46E0FC6; // Tobias Möllstam
    constexpr u32 TobiasMLlstam_1 = 0x579246E9; // Tobias Möllstam
    constexpr u32 UkTestTeamLead = 0x394A3AEB; // UK Test Team Lead
    constexpr u32 UkaszMikusek_1 = 0xFE6A2E73; // Łukasz Mikusek
    constexpr u32 UlrikaHJgRd = 0x338C5979; // Ulrika Höjgård
    constexpr u32 UserExperienceDesign = 0x32B5C0B0; // User Experience Design
    constexpr u32 UserResearchTeam = 0x56E4C355; // User Research Team
    constexpr u32 WarsawPoland = 0xF334EF4C; // WARSAW, POLAND
    constexpr u32 LocalizationWarsawTeam_1 = 0x17091329; // Localization Warsaw Team
    constexpr u32 WarsawPoland_1 = 0x63C8E1E3; // WARSAW,  POLAND
    constexpr u32 WawTestTeamLead = 0x54E239EC; // WAW Test Team Lead
    constexpr u32 WhiteCollarWorker = 0x84F51EBE; // White Collar Worker
    constexpr u32 WAdysAwSzaKiewicz = 0xF8F4F4F0; // Władysław Szałkiewicz
    constexpr u32 Writing = 0xEA76B045; // Writing
    constexpr u32 DirectorXblaPublishing = 0xE160668A; // Director, XBLA Publishing
    constexpr u32 Creeper = 0x2F0DAD1A; // Creeper
    constexpr u32 CurrentControls = 0x9871ECD0; // Current Controls
    constexpr u32 DaylightCycle = 0x5E940E19; // Daylight Cycle
    constexpr u32 PlayerWasShotBySource = 0x7A2A89AE; // {*PLAYER*} was shot by {*SOURCE*}
    constexpr u32 PlayerWasShotBySourceUsingItem = 0xF0EBA2E4; // {*PLAYER*} was shot by {*SOURCE*} using {*ITEM*}
    constexpr u32 PlayerWasPrickedToDeath = 0x2BF5A7DC; // {*PLAYER*} was pricked to death
    constexpr u32 PlayerWalkedIntoACactusWhilstTryingTo = 0x7AD1A880; // {*PLAYER*} walked into a cactus whilst trying to escape {*SOURCE*}
    constexpr u32 PlayerWasKilledByEnderDragonBreath = 0x2DCF5941; // {*PLAYER*} was killed by Ender Dragon breath
    constexpr u32 PlayerDrowned = 0x576593EF; // {*PLAYER*} drowned
    constexpr u32 PlayerDrownedWhilstTryingToEscapeSource = 0xCF30BEFB; // {*PLAYER*} drowned whilst trying to escape {*SOURCE*}
    constexpr u32 PlayerBlewUp = 0xB04CAD6A; // {*PLAYER*} blew up
    constexpr u32 PlayerWasBlownUpBySource = 0xAF29A206; // {*PLAYER*} was blown up by {*SOURCE*}
    constexpr u32 PlayerHitGroundTooHard = 0xD63D2190; // {*PLAYER*} hit the ground too hard
    constexpr u32 PlayerWasSquashedByAFallingAnvil = 0x0D235D4B; // {*PLAYER*}  was squashed by a falling Anvil.
    constexpr u32 PlayerWasSquashedByAFallingBlock = 0xA1216033; // {*PLAYER*} was squashed by a falling block.
    constexpr u32 PlayerFellFromAHighPlace = 0x44E2DD06; // {*PLAYER*} fell from a high place
    constexpr u32 PlayerFellOffALadder = 0x62F8280D; // {*PLAYER*} fell off a ladder
    constexpr u32 PlayerFellOffSomeVines = 0x461BA4E8; // {*PLAYER*} fell off some vines
    constexpr u32 PlayerFellOutOfWater = 0xC130636A; // {*PLAYER*} fell out of the water
    constexpr u32 PlayerWasDoomedToFallBySource = 0x1ECE8CFC; // {*PLAYER*} was doomed to fall by {*SOURCE*}
    constexpr u32 PlayerWasDoomedToFallBySourceUsing = 0xD871BB46; // {*PLAYER*} was doomed to fall by {*SOURCE*} using {*ITEM*}
    constexpr u32 PlayerFellTooFarAndWasFinishedBy = 0x7BA47E90; // {*PLAYER*} fell too far and was finished by {*SOURCE*}
    constexpr u32 PlayerFellTooFarAndWasFinishedByUsingItem = 0x3EC0C74A; // {*PLAYER*} fell too far and was finished by {*SOURCE*} using {*ITEM*}
    constexpr u32 PlayerWasDoomedToFall = 0x8BC1A50E; // {*PLAYER*} was doomed to fall
    constexpr u32 PlayerWasFireballedBySource = 0x0242D45C; // {*PLAYER*} was fireballed by {*SOURCE*}
    constexpr u32 PlayerWasFireballedBySourceUsingItem = 0x31B789A6; // {*PLAYER*} was fireballed by {*SOURCE*} using {*ITEM*}
    constexpr u32 PlayerExperiencedKineticEnergy = 0x15C8F4AE; // {*PLAYER*} experienced kinetic energy
    constexpr u32 PlayerDied = 0xD98E2236; // {*PLAYER*} died
    constexpr u32 PlayerDiscoveredFloorWasLava = 0x1A3B16DB; // {*PLAYER*} discovered floor was lava
    constexpr u32 PlayerWalkedIntoDangerZoneDueToSource = 0x9EEFF8CF; // {*PLAYER*} walked into danger zone due to {*SOURCE*}
    constexpr u32 PlayerWasKilledBySourceUsingMagic = 0x3FC22003; // {*PLAYER*} was killed by {*SOURCE*} using magic
    constexpr u32 PlayerWasKilledBySourceUsingItem = 0x06046121; // {*PLAYER*} was killed by {*SOURCE*} using {*ITEM*}
    constexpr u32 PlayerWentUpInFlames = 0xEFC9FEF0; // {*PLAYER*} went up in flames
    constexpr u32 PlayerWalkedIntoFireWhilstFightingSource = 0xC30A962C; // {*PLAYER*} walked into fire whilst fighting {*SOURCE*}
    constexpr u32 PlayerSuffocatedInAWall = 0x6AE921B6; // {*PLAYER*} suffocated in a wall
    constexpr u32 PlayerTriedToSwimInLava = 0x5EFF1005; // {*PLAYER*} tried to swim in lava
    constexpr u32 PlayerTriedToSwimInLavaToEscape = 0xE2B2D991; // {*PLAYER*} tried to swim in lava to escape {*SOURCE*}
    constexpr u32 PlayerWasStruckByLightning = 0xF4980932; // {*PLAYER*} was struck by lightning
    constexpr u32 PlayerWasKilledByMagic = 0x189C795E; // {*PLAYER*} was killed by magic
    constexpr u32 PlayerWasSlainBySource = 0x4BEC30BF; // {*PLAYER*} was slain by {*SOURCE*}
    constexpr u32 PlayerBurnedToDeath = 0xD711D936; // {*PLAYER*} burned to death
    constexpr u32 PlayerWasBurntToACrispWhilstFighting = 0x48FFBD9A; // {*PLAYER*} was burnt to a crisp whilst fighting {*SOURCE*}
    constexpr u32 PlayerFellOutOfWorld = 0x6F2C7352; // {*PLAYER*} fell out of the world
    constexpr u32 PlayerWasSlainBySource_1 = 0x3C5DA2B4; // {*PLAYER*} was slain by {*SOURCE*}
    constexpr u32 PlayerWasSlainBySourceUsingItem = 0x31C3794E; // {*PLAYER*} was slain by {*SOURCE*} using {*ITEM*}
    constexpr u32 PlayerStarvedToDeath = 0xF244DF30; // {*PLAYER*} starved to death
    constexpr u32 PlayerWasKilledTryingToHurtSource = 0x5AC8AFBB; // {*PLAYER*} was killed trying to hurt {*SOURCE*}
    constexpr u32 PlayerWasPummeledBySource = 0xB3FB4F7F; // {*PLAYER*} was pummeled by {*SOURCE*}
    constexpr u32 PlayerWasPummeledBySourceUsingItem = 0xE3BE8E0D; // {*PLAYER*} was pummeled by {*SOURCE*} using {*ITEM*}
    constexpr u32 PlayerWitheredAway = 0x516DB1A2; // {*PLAYER*} withered away
    constexpr u32 DebugSettings = 0x7693B9CF; // Debug Settings
    constexpr u32 NewWorld = 0xC0B26BE6; // New World
    constexpr u32 Steve = 0x4D50FA0F; // Steve
    constexpr u32 TennisSteve = 0x274E7FA6; // Tennis Steve
    constexpr u32 TuxedoAlex = 0xCB2BD086; // Tuxedo Alex
    constexpr u32 AthleteAlex = 0xF12E4AEF; // Athlete Alex
    constexpr u32 SwedishAlex = 0x7F26DBB4; // Swedish Alex
    constexpr u32 PrisonerAlex = 0xA529561D; // Prisoner Alex
    constexpr u32 CyclistAlex = 0x3321E6E2; // Cyclist Alex
    constexpr u32 BoxerAlex = 0x5924614B; // Boxer Alex
    constexpr u32 DeveloperSteve = 0xE71CF210; // Developer Steve
    constexpr u32 DeveloperAlex = 0x0D1F6C79; // Developer Alex
    constexpr u32 TuxedoSteve = 0x014C053D; // Tuxedo Steve
    constexpr u32 AthleteSteve = 0xDB498AD4; // Athlete Steve
    constexpr u32 ScottishSteve = 0xB547106B; // Scottish Steve
    constexpr u32 PrisonerSteve = 0x8F449602; // Prisoner Steve
    constexpr u32 CyclistSteve = 0x69421B99; // Cyclist Steve
    constexpr u32 BoxerSteve = 0x433FA130; // Boxer Steve
    constexpr u32 Alex = 0x7D64CD57; // Alex
    constexpr u32 TennisAlex = 0x576252EE; // Tennis Alex
    constexpr u32 AutoSelected = 0x9B98D7F4; // Auto Selected
    constexpr u32 TheClassicMinecraftTexturesIconsAndUserInterface = 0x8B1D2C06; // The classic Minecraft textures, icons and user interface!
    constexpr u32 Minecraft = 0x03A2A406; // Minecraft
    constexpr u32 NewWorld_1 = 0x860494EA; // New World
    constexpr u32 AreYouSureYouWouldLikeToReset = 0x432195FD; // Are you sure you would like to reset your controls to their default values?
    constexpr u32 ResetControls_1 = 0x6EC67FA0; // Reset Controls
    constexpr u32 AreYouSureYouWouldLikeToResetSettings = 0x5694645E; // Are you sure you would like to reset your settings to their default values?
    constexpr u32 ResetSettings = 0x13EFEFFB; // Reset Settings
    constexpr u32 ATypeOfRailThatCanEnableOr = 0x0E397C8A; // A type of rail that can enable or disable Minecarts with Hoppers and trigger Minecarts with TNT.
    constexpr u32 ARareMagentaFlowerThatCanBeUsed = 0x525F4042; // A rare magenta flower that can be used to craft magenta dye.
    constexpr u32 GenerateAWorldWithHugeMountainsAndDeep = 0xAE922073; // Generate a world with huge mountains and deep valleys and caverns. Much more difficult to survive in...
    constexpr u32 CanBeUsedToRepairWeaponsToolsAndArmor = 0x8011E036; // Can be used to repair weapons, tools and armor.
    constexpr u32 Restores2IconShank01AndCanBe = 0x451710BA; // Restores 2{*ICON_SHANK_01*}, and can be crafted into a golden apple.
    constexpr u32 CanBeEquippedToDisplayArmorAndOther = 0x80617875; // Can be equipped to display armor and other decorative items such as mob heads.
    constexpr u32 UsedAsAmmunitionForBows = 0x57C4CE0B; // Used as ammunition for bows.
    constexpr u32 ASmallWhiteFlowerThatCanBeUsed = 0x9045632E; // A small white flower that can be used to craft light gray dye.
    constexpr u32 AnInvisibleButSolidBlock = 0x2A6C6247; // An invisible but solid block.
    constexpr u32 TheseFlyingCreaturesAreFoundInCavernsOr = 0x48211895; // These flying creatures are found in caverns or other large enclosed spaces.
    constexpr u32 ProjectsABeamOfLightIntoSkyAnd = 0xC1094EE6; // Projects a beam of light into the sky, and can provide Status Effects to nearby players.
    constexpr u32 UsedToForwardTimeFromAnyTimeAt = 0xB8E5E821; // Used to forward time from any time at night to morning if all the players in the world are in bed, a...
    constexpr u32 ThisCannotBeBroken = 0x0AB4B374; // This cannot be broken.
    constexpr u32 Restores4IconShank01CreatedByCooking = 0xBAF03780; // Restores 4{*ICON_SHANK_01*}. Created by cooking raw beef in a furnace.
    constexpr u32 Restores15IconShank01OrCan = 0x93F6A0CD; // Restores 1.5{*ICON_SHANK_01*}, or can be cooked in a furnace.
    constexpr u32 SelectABiomeScaleToChangeAmountOf = 0xFFE92161; // Select a Biome scale to change the amount of world space each Biome will take up. Larger scale usual...
    constexpr u32 FoundInNetherMostlyInsideNetherFortressesDrops = 0x7E885D22; // Found in the Nether, mostly inside Nether Fortresses. Drops Blaze Rods when killed.
    constexpr u32 UsedInPotionBrewingOrCraftedWithOther = 0xDF506406; // Used in potion brewing, or crafted with other items to make Eye of Ender or Magma Cream.
    constexpr u32 UsedInPotionBrewingAndForLocatingStrongholds = 0xC330EF04; // Used in potion brewing, and for locating Strongholds. Dropped by Blazes who tend to be found near or...
    constexpr u32 AllowsIngotsGemsOrDyesToBeCrafted = 0x8E29887B; // Allows ingots, gems, or dyes to be crafted into placeable blocks. Can be used as an expensive buildi...
    constexpr u32 ACompactWayOfStoringDiamonds = 0x3E40B430; // A compact way of storing Diamonds.
    constexpr u32 ACompactWayOfStoringGold = 0xF014E6BC; // A compact way of storing Gold.
    constexpr u32 ACompactWayOfStoringIron = 0xF73D6B0E; // A compact way of storing Iron.
    constexpr u32 ACompactWayOfStoringLapisLazuli = 0x8CB9F08B; // A compact way of storing Lapis Lazuli.
    constexpr u32 CausesPlayersAndMobsToBounceWhenyJump = 0x0C6ECE52; // Causes players and mobs to bounce when they jump on it.
    constexpr u32 UsedToTravelInWaterMoreQuicklyThan = 0x1BAB2B22; // Used to travel in water more quickly than swimming.
    constexpr u32 CollectedByKillingASkeletonCanBeCrafted = 0xB4DC6624; // Collected by killing a skeleton. Can be crafted into bone meal, or fed to a wolf to tame it.
    constexpr u32 CanBeUsedToCreateBookshelvesOrEnchanted = 0x349C53CB; // Can be used to create bookshelves or enchanted to make Enchanted Books.
    constexpr u32 AllowsCreationOfMorePowerfulEnchantmentsWhenPlaced = 0xD8F22C57; // Allows the creation of more powerful enchantments when placed around the Enchantment Table.
    constexpr u32 NotUsed = 0xFDFDDE57; // NOT USED
    constexpr u32 GivesUser05IconArmor01WhenWorn = 0x8F8739A5; // Gives the user 0.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser15IconArmor01WhenWorn = 0xB58229BC; // Gives the user 1.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser05IconArmor01WhenWorn_1 = 0x27F702C0; // Gives the user 0.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser1IconArmor01WhenWorn = 0xD0506AE2; // Gives the user 1{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser05IconArmor01WhenWorn_2 = 0xCF27E723; // Gives the user 0.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 AllowsForRangedAttacksByUsingArrows = 0x07341480; // Allows for ranged attacks by using arrows.
    constexpr u32 UsedToHoldMushroomStewAndBeetrootSoup = 0x37DDBFAC; // Used to hold mushroom stew and beetroot soup. You keep the bowl when the contents have been eaten.
    constexpr u32 Restores25IconShank01 = 0x791B364A; // Restores 2.5{*ICON_SHANK_01*}.
    constexpr u32 UsedForMakingPotionsAndSplashPotions = 0x8DAD714B; // Used for making Potions and Splash Potions.
    constexpr u32 BakedFromClayInAFurnace = 0x043FC433; // Baked from clay in a furnace.
    constexpr u32 DecorativePrismarineBrickThatCanBeFoundIn = 0xC6915853; // Decorative Prismarine brick that can be found in ocean temples. Can be crafted from Prismarine shard...
    constexpr u32 UsedToHoldAndTransportWaterLavaAndMilk = 0xD5C581EC; // Used to hold and transport water, lava and milk.
    constexpr u32 UsedToHoldAndTransportLava = 0xC6B79A61; // Used to hold and transport lava.
    constexpr u32 UsedToHoldAndTransportMilk = 0x27EB8B38; // Used to hold and transport milk.
    constexpr u32 UsedToHoldAndTransportWater = 0x79769A5E; // Used to hold and transport water.
    constexpr u32 UsedToSendAnElectricalChargeByBeing = 0xD31BEEAC; // Used to send an electrical charge by being pressed. Stays activated for approximately a second befor...
    constexpr u32 CanBeCookedInAFurnaceToCreateAGreenDye = 0x88FFDCB1; // Can be cooked in a furnace to create a green dye.
    constexpr u32 Restores1IconShank01CanBeUsed7Times = 0x1BA88C3E; // Restores 1{*ICON_SHANK_01*}. Can be used 7 times.
    constexpr u32 CraftedFromWoolUsedAsADecoration = 0x01C5501B; // Crafted from Wool. Used as a decoration.
    constexpr u32 Restores3IconShank01CraftedFromA = 0xA2A3A5AF; // Restores 3{*ICON_SHANK_01*}. Crafted from a carrot and gold nuggets.
    constexpr u32 UsedToControlASaddledPigWhenRidingOnIt = 0x95744B8A; // Used to control a saddled pig when riding on it.
    constexpr u32 Restores15IconShank01AndCan = 0x5807C490; // Restores 1.5{*ICON_SHANK_01*}, and can be crafted into a golden carrot. Can be planted in farmland.
    constexpr u32 UsedToMixDyesAndDyeArmorOr = 0x92B04126; // Used to mix dyes and dye armor, or store Potions and make Tipped Arrows. Filled with water by rain o...
    constexpr u32 HasAVenomousBite = 0xB0C858E5; // Has a venomous bite.
    constexpr u32 StoresBlocksAndItemsInsidePlaceTwoChests = 0xA753F16B; // Stores blocks and items inside. Place two chests side by side to create a larger chest with double t...
    constexpr u32 StoresBlocksAndItemsInsidePlaceTwoChestsATrappedAlsoCreatesRedstone = 0x96A5DAC3; // Stores blocks and items inside. Place two chests side by side to create a larger chest with double c...
    constexpr u32 NotUsed_1 = 0x1D9420FF; // NOT USED
    constexpr u32 GivesUser25IconArmor01WhenWorn = 0x4028FB8D; // Gives the user 2.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser4IconArmor01WhenWorn = 0x4FC26274; // Gives the user 4{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser25IconArmor01WhenWorn_1 = 0xCAE9EF98; // Gives the user 2.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser3IconArmor01WhenWorn = 0x09958B2A; // Gives the user 3{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser15IconArmor01WhenWorn_1 = 0x05E7B53B; // Gives the user 1.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 DropsFeathersWhenKilledAndAlsoRandomlyLays = 0x6CAF5F1B; // Drops feathers when killed, and also randomly lays eggs.
    constexpr u32 Restores3IconShank01CreatedByCooking = 0x7AB879ED; // Restores 3{*ICON_SHANK_01*}. Created by cooking raw chicken in a furnace.
    constexpr u32 Restores1IconShank01OrCanBe = 0xFDE89328; // Restores 1{*ICON_SHANK_01*}, or can be cooked in a furnace. Eating this can cause you to be poisoned...
    constexpr u32 CanBePlantedOnEndStoneToGrow = 0x90579E00; // Can be planted on End Stone to grow more Chorus Flowers, and Chorus Plants.
    constexpr u32 GrowsFromChorusFlowersSometimesDropsChorusFruit = 0x9D1C103A; // Grows from Chorus Flowers. Sometimes drops Chorus Fruit when destroyed.
    constexpr u32 CanBeBakedIntoBricksInAFurnace = 0xA273EEED; // Can be baked into bricks in a furnace.
    constexpr u32 WhenBrokenDropsClayBallsWhichCanBe = 0xB5B55F16; // When broken drops clay balls which can be baked into bricks in a furnace.
    constexpr u32 DisplaysPositionsOfSunAndMoon = 0x6B05B9D2; // Displays positions of the Sun and Moon.
    constexpr u32 UsedAsAFuelInAFurnaceOr = 0xE13DA78B; // Used as a fuel in a furnace, or crafted to make a torch.
    constexpr u32 ACompactWayOfStoringCoalCanBe = 0x79BF78ED; // A compact way of storing Coal. Can be used as fuel in a Furnace.
    constexpr u32 AWallMadeOfCobblestone = 0x9FA77EDD; // A wall made of Cobblestone.
    constexpr u32 CanBeFarmedToCollectCocoaBeans = 0x9BFC9CCB; // Can be farmed to collect Cocoa Beans.
    constexpr u32 UsedToExecuteCommands = 0xFB413E2B; // Used to execute commands.
    constexpr u32 UsedInRedstoneCircuitsToMaintainCompareOr = 0xF7057FE0; // Used in Redstone circuits to maintain, compare, or subtract signal strength, or to measure certain b...
    constexpr u32 PointsToYourStartPoint = 0xDA63BBF2; // Points to your start point.
    constexpr u32 Restores1IconShank01 = 0x566BFA2E; // Restores 1{*ICON_SHANK_01*}.
    constexpr u32 DropsLeatherWhenKilledCanAlsoBeMilked = 0x6DFF13B9; // Drops leather when killed. Can also be milked with a bucket.
    constexpr u32 AllowsYouToCraftAMoreVariedSelection = 0xE7D59516; // Allows you to craft a more varied selection of items than the normal crafting.
    constexpr u32 ExplodesIfYouGetTooClose = 0x3E4CD914; // Explodes if you get too close!
    constexpr u32 WhenFullyGrownCropsCanBeHarvestedTo = 0xEAD0B3A7; // When fully grown, crops can be harvested to collect wheat.
    constexpr u32 ACommonWhiteAndYellowFlowerThatCan = 0x1CDA9744; // A common white and yellow flower that can be used to craft light gray dye.
    constexpr u32 ACommonYellowFlowerThatCanBeUsed = 0x6E24D1FC; // A common yellow flower that can be used to craft yellow dye. Can also be used to breed and lead rabb...
    constexpr u32 ABlockThatOutputsARedstoneSignalBased = 0xE95FBDBD; // A block that outputs a Redstone signal based on sunlight or lack of sunlight if inverted.
    constexpr u32 CanBeUsedAsDecoration = 0x5CEB143D; // Can be used as decoration.
    constexpr u32 FunctionsLikeAPressurePlateSendsARedstone = 0xD6F77DB6; // Functions like a Pressure Plate (sends a Redstone signal when powered) but can only be activated by ...
    constexpr u32 ASpecialTypeOfArmorThatCanBe = 0xD59E460E; // A special type of Armor that can be equipped to a horse. Provides 5.5{*ICON_ARMOR_01*}.
    constexpr u32 UseseToCreateVeryStrongToolsWeaponsOr = 0x1FCFAFCD; // Use these to create very strong tools, weapons or armor.
    constexpr u32 CollectedUsingAShovelCanBeUsedFor = 0x5437FAF1; // Collected using a shovel. Can be used for construction.
    constexpr u32 ASpecialTypeOfDirtThatDoesNotGrowGrass = 0x935970C7; // A special type of dirt that does not grow grass.
    constexpr u32 SimilarToDirtBlocksButVeryGoodFor = 0x8FB42134; // Similar to Dirt Blocks, but very good for growing mushrooms on.
    constexpr u32 UsedToHoldAndShootOutItemsIn = 0xC2FAFA1B; // Used to hold and shoot out items in a random order when given a Redstone charge.
    constexpr u32 TheseAnimalsCanBeTamedAndCannBe = 0x4F219CD8; // These animals can be tamed, and can then be ridden. They can have a chest attached.
    constexpr u32 IronDoorsCanOnlyBeOpenedByRedstone = 0xE4ACC401; // Iron doors can only be opened by Redstone, buttons or switches.
    constexpr u32 WoodenDoorsAreActivatedByUsingHittingmOr = 0x2AAF6F70; // Wooden doors are activated by using, hitting them or with Redstone.
    constexpr u32 ALargePlant = 0xFE1B89E7; // A large plant.
    constexpr u32 ThisBlockIsCreatedByDefeatOfDragon = 0x77A04F26; // This block is created by the defeat of the Dragon in The End.
    constexpr u32 UsedToHoldAndDropItemsOrPush = 0x9B0FE124; // Used to hold and drop items, or push items into another container, when given a Redstone charge.
    constexpr u32 UsedAsADyeToCreateBlackWool = 0x6F2DFA1A; // Used as a dye to create Black Wool.
    constexpr u32 UsedInEnchantingAndAsDyeToCreateBlueWool = 0x75FE8F43; // Used in enchanting and as dye to create Blue Wool.
    constexpr u32 UsedAsADyeToCreateBrownWool = 0xFB9441C3; // Used as a dye to create Brown Wool, as an ingredient in cookies, or to grow Cocoa Pods.
    constexpr u32 UsedAsADyeToCreateCyanWool = 0x80E27EB8; // Used as a dye to create Cyan Wool.
    constexpr u32 UsedAsADyeToCreateGrayWool = 0x7AB37FB0; // Used as a dye to create Gray Wool.
    constexpr u32 UsedAsADyeToCreateGreenWool = 0x77D75836; // Used as a dye to create Green Wool.
    constexpr u32 UsedAsADyeToCreateLightBlueWool = 0x422CC98D; // Used as a dye to create Light Blue Wool.
    constexpr u32 UsedAsADyeToCreateLightGray = 0x8940715E; // Used as a dye to create Light Gray Wool. \r\n(Note: Light Gray Dye can also be made by combining Gra...
    constexpr u32 UsedAsADyeToCreateLimeWool = 0x7A34CFB8; // Used as a dye to create Lime Wool.
    constexpr u32 UsedAsADyeToCreateMagentaWool = 0x98ECFA70; // Used as a dye to create Magenta Wool.
    constexpr u32 UsedAsADyeToCreateOrangeWool = 0xC5B9A09D; // Used as a dye to create Orange Wool.
    constexpr u32 UsedAsADyeToCreatePinkWool = 0x65099C29; // Used as a dye to create Pink Wool.
    constexpr u32 UsedAsADyeToCreatePurpleWool = 0xC0FC96AB; // Used as a dye to create Purple Wool.
    constexpr u32 UsedAsADyeToCreateRedWool = 0xFBA2A6EE; // Used as a dye to create Red Wool.
    constexpr u32 UsedAsADyeToCreateSilverWool = 0x6536297A; // Used as a dye to create Silver Wool.
    constexpr u32 UsedToInstantlyGrowCropsTreesTallGrass = 0xF31D46E2; // Used to instantly grow crops, trees, tall grass, huge mushrooms and flowers, and can be used in dye ...
    constexpr u32 UsedAsADyeToCreateYellowWool = 0x5A619CF1; // Used as a dye to create Yellow Wool.
    constexpr u32 DroppedRandomlyByChickensCanBeCraftedInto = 0x7E0AC927; // Dropped randomly by chickens. Can be crafted into food items.
    constexpr u32 AHostileCreatureFoundInOceanMonumentsA = 0x9D03BD44; // A hostile creature found in Ocean Monuments. A much stronger version of the Guardian.
    constexpr u32 CanBeTradedWithVillagers = 0x25A6420C; // Can be traded with villagers.
    constexpr u32 ACompactWayOfStoringEmeralds = 0x6B4789D5; // A compact way of storing Emeralds.
    constexpr u32 CanBeMinedWithAnIronPickaxeOr = 0x4020B9B4; // Can be mined with an Iron pickaxe or better to collect Emeralds.
    constexpr u32 UsedWithAnAnvilToEnchantWeaponsTools = 0x7BE6D91E; // Used with an Anvil to enchant weapons, tools or armor.
    constexpr u32 Restores2IconShank01RegeneratesHealthFor = 0x5CF7965C; // Restores 2{*ICON_SHANK_01*}, regenerates health for 30 seconds, and grants fire resistance and damag...
    constexpr u32 ThisAllowsPlayersToEnchantSwordsPickaxesAxes = 0x8742C055; // This allows players to enchant Swords, Pickaxes, Axes, Shovels, Bows, and Armor, using the player's ...
    constexpr u32 GeneratedWhenEnderDragonIsKilledThrowingAn = 0xED9F24FA; // Generated when the Ender Dragon is killed. Throwing an Ender Pearl into the portal will teleport you...
    constexpr u32 ThisCanBeActivatedUsingTwelveEyeOf = 0xD845F206; // This can be activated using twelve Eye of Ender, and will allow the player to travel to The End dime...
    constexpr u32 ADecorativeLightSourceFoundInEndCities = 0x6FC5FFF3; // A decorative light source found in End Cities. Can be crafted using Blaze Rods and Popped Chorus Fru...
    constexpr u32 DroppedByEndermenWhenyDieThrowingAnEnder = 0x82AAD14F; // Dropped by Endermen when they die. Throwing an Ender Pearl will teleport the player to wherever it l...
    constexpr u32 SimilarToAChestExceptThatItemsPlaced = 0x4BBCED6B; // Similar to a Chest except that items placed in an Ender Chest are available in every one of the play...
    constexpr u32 ThisIsALargeBlackDragonFoundInTheEnd = 0x660F831B; // This is a large black dragon found in The End.
    constexpr u32 WillAttackYouIfYouLookAtIt = 0x576863C8; // Will attack you if you look at it. Can also move blocks around.
    constexpr u32 ThereIsASmallChanceUsingAnEnder = 0x68E5C5C7; // There is a small chance using an Ender pearl will spawn one. They will attack you if you are nearby.
    constexpr u32 UsedToFormAnEndPortal = 0x4DC365AC; // Used to form an End Portal.
    constexpr u32 EvokersLiveInWoodlandMansionsTheyAttackWith = 0xA2978A87; // Evokers live in Woodland Mansions. They attack with Fangs, and summon Vexes.
    constexpr u32 WhenThrownItDropsExperienceOrbsWhichIncrease = 0xC511BB2C; // When thrown, it drops Experience Orbs which increase your experience points when collected.
    constexpr u32 WhenThrownWillShowDirectionToAnEnd = 0xF3CE4102; // When thrown, will show the direction to an End Portal. When twelve of these are placed in the End Po...
    constexpr u32 GroundThatHasBeenPreparedReadyToPlant = 0x25E10A65; // Ground that has been prepared ready to plant seeds.
    constexpr u32 CollectedByKillingAChickenCanBeCrafted = 0xF3341313; // Collected by killing a chicken. Can be crafted into an arrow.
    constexpr u32 UsedAsABarrierThatCannotBeJumped = 0x43457FD1; // Used as a barrier that cannot be jumped over. Counts as 1.5 blocks high for players, animals and mon...
    constexpr u32 SimilarToADoorButUsedPrimarilyWithFences = 0x8D16B979; // Similar to a door, but used primarily with fences.
    constexpr u32 UsedInPotionBrewingMainlyToCreatePotions = 0x83378EC0; // Used in potion brewing; mainly to create potions with a negative effect.
    constexpr u32 ATallFernThatCanSometimesDropSeeds = 0xF5DAFD9F; // A tall fern that can sometimes drop seeds.
    constexpr u32 IfYouReCreatingAWorldWithA = 0x8F88AE9A; // If you're creating a world with a random seed, this option looks for a world with a good mix of biom...
    constexpr u32 UsefulForSettingThingsOnFireOrFor = 0xAA52CC01; // Useful for setting things on fire, or for indiscriminately starting fires when fired from a Dispense...
    constexpr u32 WhenActivatedCreatesColorfulExplosionsTheColorEffect = 0x0A644378; // When activated, creates colorful explosions. The color, effect, shape and fade are determined by the...
    constexpr u32 UsedToDetermineColorEffectAndShapeOf = 0x4C040C0D; // Used to determine the color, effect and shape of a Firework.
    constexpr u32 Restores05IconShank01CanBe = 0x57322CB7; // Restores 0.5{*ICON_SHANK_01*}. Can be fed to an Ocelot to tame it.
    constexpr u32 Restores25IconShank01CreatedBy = 0x1864F990; // Restores 2.5{*ICON_SHANK_01*}. Created by cooking a raw fish in a furnace.
    constexpr u32 Restores05IconShank01HoweverIt = 0x1F16945C; // Restores 0.5{*ICON_SHANK_01*} however it is poisonous. Can also be used as an ingredient in brewing ...
    constexpr u32 Restores1IconShank01OrCanBeCanFedAnOcelotTame = 0x8918AE9D; // Restores 1{*ICON_SHANK_01*}, or can be cooked in a furnace. Can be fed to an Ocelot to tame it.
    constexpr u32 Restores3IconShank01CreatedByCookingSalmon = 0xE7AF7DDD; // Restores 3{*ICON_SHANK_01*}. Created by cooking a raw salmon in a furnace.
    constexpr u32 Restores1IconShank01OrCanBeCanFedAnOcelotTame_1 = 0x9ADFD818; // Restores 1{*ICON_SHANK_01*}, or can be cooked in a furnace. Can be fed to an Ocelot to tame it.
    constexpr u32 UsedToCatchFish = 0x667A4E57; // Used to catch fish.
    constexpr u32 CollectedByDiggingGravelCanBeUsedTo = 0x83B23593; // Collected by digging gravel. Can be used to craft a flint and steel.
    constexpr u32 UsedToCreateFireIgniteTntAndCreepers = 0x46397603; // Used to create fire, ignite TNT and creepers, and open a Nether portal once it has been built.
    constexpr u32 CanBeCraftedIntoADye = 0x4737B9EF; // Can be crafted into a dye.
    constexpr u32 UsedAsADecorationFlowersSaplingsCactiAnd = 0xB636176C; // Used as a decoration. Flowers, Saplings, Cacti and Mushrooms can be planted in it.
    constexpr u32 AllowsYouToSmeltOreCreateCharcoalAnd = 0x1435874A; // Allows you to smelt ore, create charcoal and glass, and cook fish and porkchops.
    constexpr u32 FiresFlamingBallsAtYouThatExplodeOn = 0x2E34B42B; // Fires flaming balls at you that explode on contact.
    constexpr u32 UsedInPotionBrewingDroppedByGhastsWheny = 0xADE9982E; // Used in potion brewing. Dropped by Ghasts when they die.
    constexpr u32 CreatedInAFurnaceBySmeltingSandCan = 0xF3940610; // Created in a furnace by smelting sand. Can be used for construction, but will break if you try to mi...
    constexpr u32 CanBeFilledWithWaterAndUsedAs = 0x5B174183; // Can be filled with water, and used as the starting ingredient for a potion in the Brewing Stand.
    constexpr u32 UsedToCreateBrighterLightThanTorchesMelts = 0x888B921A; // Used to create brighter light than torches. Melts snow/ice and can be used underwater.
    constexpr u32 ASpecialTypeOfArmorThatCanBe3 = 0x3E6173E2; // A special type of Armor that can be equipped to a horse. Provides 3.5{*ICON_ARMOR_01*}.
    constexpr u32 DroppedByZombiePigmenWhenyDieZombiePigmen = 0xD366D7E7; // Dropped by Zombie Pigmen when they die. Zombie Pigmen can be found in the Nether. Used as an ingredi...
    constexpr u32 Restores2IconShank01AndRegeneratesHealth = 0x00CD42E1; // Restores 2{*ICON_SHANK_01*}, and regenerates health for 4 seconds. Crafted from an Apple and Gold In...
    constexpr u32 ABlockOfDirtWithGrassGrowingOn = 0x504BE4AE; // A block of dirt with grass growing on top. Collected using a shovel. Can be used for construction.
    constexpr u32 CollectedUsingAShovelSometimesProducesFlintWhen = 0xBEFA9389; // Collected using a shovel. Sometimes produces flint when dug up. Is affected by gravity if there is n...
    constexpr u32 AHostileCreatureFoundNearUnderwaterTemplesWatch = 0xB34C27D1; // A hostile creature found near underwater temples. Watch out for its laser!
    constexpr u32 UsedForMakingLongStaircasesTwoSlabsPlaced = 0x333C0AF5; // Used for making long staircases. Two slabs placed on top of each other will create a normal-sized do...
    constexpr u32 CreatedBySmeltingClayInAFurnace = 0x38E3976F; // Created by smelting Clay in a furnace.
    constexpr u32 UsedToChopWoodRelatedBlocksFasterThan = 0x4D38CA25; // Used to chop wood-related blocks faster than by hand.
    constexpr u32 CanBeFedToHorsesDonkeysMulesAnd = 0x6AB5D8AA; // Can be fed to Horses, Donkeys, Mules, and Llamas to heal up to 10 Hearts. Speeds up the growth of fo...
    constexpr u32 BurnsForeverIfSetAlight = 0xE7B08BCD; // Burns forever if set alight.
    constexpr u32 SlowsMovementOfAnythingWalkingOverIt = 0xAEA7A978; // Slows the movement of anything walking over it.
    constexpr u32 NotUsed_2 = 0xBA4103DF; // NOT USED
    constexpr u32 GivesUser1IconArmor01WhenWorn_1 = 0xCEB3986D; // Gives the user 1{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser15IconArmor01WhenWorn_2 = 0x1348B454; // Gives the user 1.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser1IconArmor01WhenWorn_2 = 0x96B464F8; // Gives the user 1{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser1IconArmor01WhenWorn_3 = 0xACDE6D0A; // Gives the user 1{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser05IconArmor01WhenWorn_3 = 0xB114599B; // Gives the user 0.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 UsedToTillDirtAndGrassBlocksTo = 0x6166FAC8; // Used to till dirt and grass blocks to prepare for crops.
    constexpr u32 UsedToCatchItemsOrToTransferItems = 0x7D15A4FA; // Used to catch items or to transfer items into and out of containers.
    constexpr u32 TheseAnimalsCanBeTamedAndCannBeRidden = 0x3C0567A9; // These animals can be tamed, and can then be ridden.
    constexpr u32 AZombieThatDoesntBurnInSunlightIts = 0x0C1C90A7; // A zombie that doesn't burn in sunlight. Its attacks will make you hungry!
    constexpr u32 SlipperyWhenWalkedOnTurnsIntoWaterIf = 0x654BE4FD; // Slippery when walked on. Turns into water if above another block when destroyed. Melts if close enou...
    constexpr u32 ASolidUnmeltableBlockOfIceThatCan = 0x9AFC961A; // A solid unmeltable block of ice that can have objects placed on it.
    constexpr u32 IllusionersAreHostileTheyAttackWithABow = 0xA32B5302; // Illusioners are hostile. They attack with a bow, and use magic to confuse!
    constexpr u32 AShinyIngotWhichCanBeUsedTo = 0x73D55DD9; // A shiny ingot which can be used to craft tools made from this material. Created by smelting ore in a...
    constexpr u32 UsedAsABarrierSimilarToFences = 0xED02B8A4; // Used as a barrier, similar to fences.
    constexpr u32 ASpecialTypeOfArmorThatCanBe2 = 0x37AF95D0; // A special type of Armor that can be equipped to a horse. Provides 2.5{*ICON_ARMOR_01*}.
    constexpr u32 CreatedBySmeltingIronArmourAndToolsIn = 0x75DA2F45; // Created by smelting Iron armour and tools in a Furnace. Can be crafted into an Iron Ingot.
    constexpr u32 AppearsInVillagesToProtectmCanBeCreated = 0x3CD1B0F4; // Appears in Villages to protect them. Can be created using Iron Blocks and Pumpkins.
    constexpr u32 Restores05IconShank01WhenEaten = 0x557C5EE0; // Restores 0.5{*ICON_SHANK_01*} when eaten. Can also be crafted into Rose Red dye, or Beetroot Soup.
    constexpr u32 CanBePlantedInFarmlandToGrowBeetroot = 0x753A3BB3; // Can be planted in farmland to grow beetroot.
    constexpr u32 Restores3IconShank01WhenEaten = 0x2ADE8F66; // Restores 3{*ICON_SHANK_01*} when eaten.
    constexpr u32 UsedToTravelInWaterMoreQuicklyThan_1 = 0x1B9311E7; // Used to travel in water more quickly than swimming.
    constexpr u32 UsedToTravelInWaterMoreQuicklyThan_2 = 0xC2D7D60D; // Used to travel in water more quickly than swimming.
    constexpr u32 UsedToTravelInWaterMoreQuicklyThan_3 = 0x8C104A11; // Used to travel in water more quickly than swimming.
    constexpr u32 UsedToTravelInWaterMoreQuicklyThan_4 = 0x8D796B10; // Used to travel in water more quickly than swimming.
    constexpr u32 UsedToTravelInWaterMoreQuicklyThan_5 = 0x5061F0B5; // Used to travel in water more quickly than swimming.
    constexpr u32 EatingRestores2IconShank01AndMay = 0x75B20FC3; // Eating restores 2{*ICON_SHANK_01*}, and may teleport the player. Can be cooked in a Furnace.
    constexpr u32 CreatedByCookingChorusFruitInAFurnace = 0xFD12A3EA; // Created by cooking Chorus Fruit in a Furnace. Used to craft End Rods and Purpur blocks.
    constexpr u32 UsedInPotionBrewingObtainedByCapturingEnder = 0xF744E236; // Used in potion brewing. Obtained by capturing the Ender Dragon's acid breath in a Glass Bottle.
    constexpr u32 AllowsPlayerToGlideWhenWorn = 0xB80B655F; // Allows the player to glide when worn.
    constexpr u32 HealsEnderDragonAndCanBeUsedTo = 0xD396A19A; // Heals the Ender Dragon, and can be used to respawn it. Explodes when attacked.
    constexpr u32 APotionThatCanBeThrownAndApplies = 0xC459779F; // A potion that can be thrown, and applies an effect to the ground where it lands. Can be used to craf...
    constexpr u32 CreatedBySmeltingNetherrackInAFurnaceCan = 0xC4D5E6D9; // Created by smelting Netherrack in a furnace. Can be crafted into Nether Brick blocks.
    constexpr u32 AllowsPlayerToBlockReducingDamageTakenFrom = 0xE96C8BE7; // Allows the player to block, reducing damage taken from attacks.
    constexpr u32 GivesVictimAGlowingOutlineThatCanBe = 0xFF7B7200; // Gives the victim a glowing outline that can be seen through blocks.
    constexpr u32 APotionThatCanBeThrown = 0xA22445C1; // A potion that can be thrown.
    constexpr u32 APlayerOrMonsterHitWithThisArrow = 0x326B491B; // A player or monster hit with this arrow will deal more damage.
    constexpr u32 APlayerAnimalOrMonsterHitWithThis = 0x5AEA28C6; // A player, animal, or monster hit with this arrow will become immune to damage from fire, lava, and B...
    constexpr u32 AnArrowThatAppliesAPotionEffectBased = 0x2453270C; // An arrow that applies a potion effect based on what it is tipped with.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisBeHurtMoreThanUsual = 0x98A01983; // A player, animal, or monster hit with this arrow will be hurt more than usual.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisRecoverSomeHealth = 0xE95F67CD; // A player, animal, or monster hit with this arrow will recover some health.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisInvisible = 0xB58F337C; // A player, animal, or monster hit with this arrow will become invisible.
    constexpr u32 APlayerHitWithThisArrowWillJumpHigher = 0x569CC9E7; // A player hit with this arrow will jump higher.
    constexpr u32 APlayerHitWithThisArrowIsMore = 0xB2304FE4; // A player hit with this arrow is more likely to get better items from fishing.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisMoveSprintSlowerNotJump = 0x94FB9DF1; // A player, animal, or monster hit with this arrow will move and sprint slower, and not jump as far.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisMoveSprintFasterJumpFarther = 0x26657E73; // A player, animal, or monster hit with this arrow will move and sprint faster, and jump farther.
    constexpr u32 APlayerHitWithThisArrowWillBe = 0xC833BD8D; // A player hit with this arrow will be able to see in the dark.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisTakeAdditionalOverTime = 0x4B120591; // A player, animal, or monster hit with this arrow will take additional damage over time.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisRecoverSomeHealthOverTime = 0x9FA1491C; // A player, animal, or monster hit with this arrow will recover some health over time.
    constexpr u32 APlayerHitWithThisArrowWillBeBreathNormallyUnderwater = 0x3B39E3D0; // A player hit with this arrow will be able to breath normally underwater.
    constexpr u32 APlayerOrMonsterHitWithThisArrowLess = 0x7DC95056; // A player or monster hit with this arrow will deal less damage.
    constexpr u32 APlayerAnimalOrMonsterHitWithThisTakeOverTime = 0xC6F93C28; // A player, animal, or monster hit with this arrow will take damage over time.
    constexpr u32 SimilarToADisplayCaseThisWillDisplay = 0x4493EF7A; // Similar to a display case, this will display the item or block placed in it.
    constexpr u32 UsedToCreateBrighterLightThanTorchesMelts_1 = 0x0C9D5FB8; // Used to create brighter light than torches. Melts snow/ice and can be used underwater.
    constexpr u32 PlaysMusicDiscs = 0x8558691E; // Plays Music Discs.
    constexpr u32 UsedToClimbVertically = 0x806B05B0; // Used to climb vertically.
    constexpr u32 SetsFireToAnythingThatTouchesItCan = 0x2F2CD2B8; // Sets fire to anything that touches it. Can be collected in a bucket.
    constexpr u32 FoundInTheNetherSplitsIntoSmallerMagma = 0xA0138101; // Found in The Nether. Splits into smaller Magma Cubes when damaged.
    constexpr u32 UsedToLeashMobsToPlayerOrFencePosts = 0x729DE426; // Used to leash mobs to the player or Fence posts.
    constexpr u32 CollectedByKillingACowCanBeCrafted = 0xCB787D79; // Collected by killing a cow. Can be crafted into armor or used to make books.
    constexpr u32 ASpecialTypeOfArmorThatCanBeDyedAnd1 = 0x41A31661; // A special type of Armor that can be dyed and equipped to a horse. Provides 1.5{*ICON_ARMOR_01*}.
    constexpr u32 WhenBrokenSometimesDropsASaplingWhichCan = 0xDA15164A; // When broken, sometimes drops a sapling which can be replanted to grow into a tree.
    constexpr u32 NotUsed_3 = 0x74289A70; // NOT USED
    constexpr u32 GivesUser2IconArmor01WhenWorn = 0x36108302; // Gives the user 2{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser3IconArmor01WhenWorn_1 = 0x475471AB; // Gives the user 3{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser15IconArmor01WhenWorn_3 = 0x09C244BF; // Gives the user 1.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser25IconArmor01WhenWorn_2 = 0x0FA8857D; // Gives the user 2.5{*ICON_ARMOR_01*} when worn.
    constexpr u32 GivesUser1IconArmor01WhenWorn_4 = 0x0F1B63F4; // Gives the user 1{*ICON_ARMOR_01*} when worn.
    constexpr u32 UsedToSendAnElectricalChargeByBeingTurnedOnOrInOn = 0x1937507A; // Used to send an electrical charge by being turned on or off. Stays in the on or off state until pres...
    constexpr u32 ATallPurpleFlowerThatCanBeUsed = 0x6A2EC061; // A tall purple flower that can be used to craft magenta dye.
    constexpr u32 LlamasCanBeTamedAndRiddenByUsing = 0x72F974EF; // Llamas can be tamed and ridden. By using a lead, Llamas can be organised into long caravans and used...
    constexpr u32 ChoppedUsingAnAxeAndCanBeCrafted = 0x4D75AA3E; // Chopped using an axe, and can be crafted into planks or used as a fuel.
    constexpr u32 UsedInPotionBrewing = 0x5BB12FE2; // Used in potion brewing.
    constexpr u32 WillCreateAnImageOfAnAreaExplored = 0xADF9D986; // Will create an image of an area explored while held. This can be used for path-finding.
    constexpr u32 WhenUsedBecomesAMapOfPartOf = 0x8842D8BC; // When used becomes a map of the part of the world that you are in, and gets filled in as you explore.
    constexpr u32 CanBeCraftedFromMelonSlices = 0xFDF7A029; // Can be crafted from Melon Slices.
    constexpr u32 CanBePlantedToGrowMelons = 0xF9B335CC; // Can be planted to grow melons.
    constexpr u32 Restores1IconShank01_1 = 0x2F0A0A78; // Restores 1{*ICON_SHANK_01*}.
    constexpr u32 UsedToTransportYouAnAnimalOrA = 0xDF071B81; // Used to transport you, an animal, or a monster along rails.
    constexpr u32 UsedToExecuteCommandsOnMove = 0x529C2221; // Used to execute commands on the move!
    constexpr u32 ASpecialTypeOfMinecartThatFunctionsSimilarly = 0x66874BB6; // A special type of Minecart that functions similarly to a Hopper. It will collect items lying on trac...
    constexpr u32 ATypeOfMinecartThatActsAsA = 0xDD4B7B90; // A type of Minecart that acts as a moving TNT block.
    constexpr u32 UsedToTransportGoodsAlongRails = 0x3ED319BA; // Used to transport goods along rails.
    constexpr u32 WillMoveAlongRailsAndCanPushOther = 0xBB5D88CB; // Will move along rails and can push other minecarts when coal is put in it.
    constexpr u32 SpawnsMonstersIntoWorld = 0x004330C9; // Spawns monsters into the world.
    constexpr u32 WhenThrownCanSpawnACreatureOfType = 0x16B8B295; // When thrown can spawn a creature of the type indicated.
    constexpr u32 FoundInDungeonsCanBeUsedForConstruction = 0x50E46434; // Found in dungeons. Can be used for construction and decoration.
    constexpr u32 BornWhenAHorseAndADonkeyBreed = 0x317E6BC3; // Born when a Horse and a Donkey breed. These animals can be tamed, and can then be ridden and carry c...
    constexpr u32 CanBeCraftedWithABowlToMakeStew = 0x6EB533D6; // Can be crafted with a bowl to make stew.
    constexpr u32 CanBeUsedAsDecoration_1 = 0x5627CB20; // Can be used as decoration.
    constexpr u32 MakesMushroomStewWhenUsedWithABowl = 0xF541B352; // Makes mushroom stew when used with a bowl. Drops mushrooms and becomes a normal cow when sheared.
    constexpr u32 Restores3IconShank01 = 0xF87FB06B; // Restores 3{*ICON_SHANK_01*}.
    constexpr u32 Restores3IconShank01CreatedByCookingMutton = 0xCB2E65B5; // Restores 3{*ICON_SHANK_01*}. Created by cooking raw mutton in a furnace.
    constexpr u32 Restores1IconShank01OrCanBe_3 = 0x432B18A0; // Restores 1{*ICON_SHANK_01*}, or can be cooked in a furnace.
    constexpr u32 SimilarToGrassBlocksButVeryGoodFor = 0x6218A6EC; // Similar to Grass Blocks, but very good for growing mushrooms on.
    constexpr u32 UsedToNameMobsInWorld = 0xBB06F9B0; // Used to name mobs in the world.
    constexpr u32 CreatedByMiningNetherQuartzOreCanBe = 0x281CBC4C; // Created by mining Nether Quartz Ore. Can be crafted into a Block of Quartz.
    constexpr u32 CanBeMinedWithAPickaxeToCollect = 0xBF60AF5B; // Can be mined with a pickaxe to collect Nether Quartz.
    constexpr u32 UsedInPotionBrewingThisCanBeFound = 0x5B73F84F; // Used in potion brewing. This can be found naturally growing in Nether Fortresses. It can also be pla...
    constexpr u32 DroppedByWitherUsedInCraftingBeacons = 0xC21DEE99; // Dropped by the Wither, used in crafting Beacons.
    constexpr u32 UsedToBuildNetherFortressesImmuneToGhast = 0xD2B51C3B; // Used to build Nether Fortresses. Immune to Ghast's fireballs.
    constexpr u32 UsedInNetherFortresses = 0x7830FE09; // Used in Nether Fortresses.
    constexpr u32 FoundInNetherFortressesWillDropNetherWart = 0x51AA8FC3; // Found in Nether Fortresses. Will drop Nether Wart when broken.
    constexpr u32 PlaysANoteWhenTriggeredHitItTo = 0x0EF9D20B; // Plays a note when triggered. Hit it to change the pitch of the note. Placing this on top of differen...
    constexpr u32 CanOnlyBeMinedWithADiamondPickaxe = 0x8B931867; // Can only be mined with a diamond pickaxe. Is produced by the meeting of water and still lava, and is...
    constexpr u32 ARareBlueFlowerThatCanBeUsed = 0x03E7FB19; // A rare blue flower that can be used to craft light blue dye.
    constexpr u32 CanBeMinedWithAPickaxeToCollectCoal = 0xED8C0E54; // Can be mined with a pickaxe to collect coal.
    constexpr u32 CanBeMinedWithAnIronPickaxeOrIronDiamonds = 0x1F64B501; // Can be mined with an iron pickaxe or better to collect diamonds.
    constexpr u32 CanBeMinedWithAnIronPickaxeOrIronNSmeltedInA = 0x451CA025; // Can be mined with an iron pickaxe or better, then smelted in a furnace to produce gold ingots.
    constexpr u32 CanBeMinedWithAStonePickaxeOr = 0xD9247E57; // Can be mined with a stone pickaxe or better, then smelted in a furnace to produce iron ingots.
    constexpr u32 CanBeMinedWithAStonePickaxeOrCollectLapisLazuli = 0xAD0EEEFA; // Can be mined with a stone pickaxe or better to collect lapis lazuli.
    constexpr u32 CanBeMinedWithAnIronPickaxeOrIronRedstoneDust = 0x57C4C63D; // Can be mined with an iron pickaxe or better to collect redstone dust.
    constexpr u32 FoundInJunglesCanBeTamedUsingRaw = 0x4C0C6E55; // Found in Jungles. Can be tamed using Raw Fish. You will need to let the Ocelot approach you though; ...
    constexpr u32 UsedToCreateBooksMapsAndFireworks = 0xA5BBD614; // Used to create books, maps, and fireworks.
    constexpr u32 ParrotsAreColorfulBirdsThatInhabitJunglesThey = 0x109646D0; // Parrots are colorful birds that inhabit Jungles. They enjoy perching on shoulders and mimicking soun...
    constexpr u32 ATallGreenAndPinkFlowerThatCan = 0x6A49A77F; // A tall green and pink flower that can be used to craft pink dye.
    constexpr u32 RequiredToMineStoneRelatedBlocksAndOre = 0x8161B947; // Required to mine stone-related blocks and ore.
    constexpr u32 CanBeUsedAsDecoration_2 = 0xE2BB6816; // Can be used as decoration.
    constexpr u32 DropsPorkchopsWhenKilledCanBeRiddenBy = 0xFFD20CD4; // Drops porkchops when killed. Can be ridden by using a saddle.
    constexpr u32 InitiallyDocileButWillAttackInGroupsIf = 0xD2243BD2; // Initially docile, but will attack in groups if you attack one.
    constexpr u32 WhenPoweredUsingAButtonALeverA = 0x286CA0E5; // When powered (using a button, a lever, a pressure plate, a redstone torch, or redstone with any one ...
    constexpr u32 InitiallyDocileButAnAdultWillBecomeAggressive = 0xA657167E; // Initially docile, but an adult will become aggressive if you attack it or its cub.
    constexpr u32 ACommonRedFlowerThatCanBeUsed = 0xD92B6BAC; // A common red flower that can be used to craft red dye.
    constexpr u32 Restores4IconShank01CreatedByCookingPorkchop = 0x3351245E; // Restores 4{*ICON_SHANK_01*}. Created by cooking a raw porkchop in a furnace.
    constexpr u32 Restores15IconShank01OrCan_1 = 0x3A857AE3; // Restores 1.5{*ICON_SHANK_01*}, or can be cooked in a furnace.
    constexpr u32 StandingInPortalAllowsYouToPassBetween = 0x15861DBE; // Standing in the portal allows you to pass between the Overworld and the Nether.
    constexpr u32 Restores05IconShank01OrCan = 0x6FE336FB; // Restores 0.5{*ICON_SHANK_01*}, or can be cooked in a furnace. This can be planted in farmland.
    constexpr u32 Restores25IconShank01CreatedByPotato = 0xCF1F0015; // Restores 2.5{*ICON_SHANK_01*}. Created by cooking a potato in a furnace.
    constexpr u32 Restores1IconShank01EatingThisCan = 0xC8C7EDE9; // Restores 1{*ICON_SHANK_01*}. Eating this can cause you to become poisoned.
    constexpr u32 WhenUsedCanHaveVariousEffectsDependingOn = 0xBA18E901; // When used, can have various effects depending on what it is used on.
    constexpr u32 WhenPoweredAcceleratesMinecartsThatPassOverIt = 0x470018CA; // When powered, accelerates minecarts that pass over it. When unpowered, causes minecarts to stop on i...
    constexpr u32 APressureSensitivePadThatWillActivateWhen = 0x7F85C858; // A pressure sensitive pad that will activate when heavy mobs or the player step on it.
    constexpr u32 AMoreSensitivePressurePlateThatCanBe = 0xE761E240; // A more sensitive pressure plate that can be activated by almost any pressure applied.
    constexpr u32 RareDecorativeStoneThatCanBeFoundIn = 0x4D2DBBD6; // Rare decorative stone that can be found in ocean temples. Can be crafted from Prismarine shards.
    constexpr u32 ObtainedFromSeaLanternsOrByDefeatingGuardians = 0x47DB5008; // Obtained from Sea Lanterns or by defeating Guardians and Elder Guardians. Can be used in crafting Se...
    constexpr u32 ARarerFormOfPrismarineThatCanBe = 0xC9E0C23D; // A rarer form of Prismarine that can be found in ocean temples. Can be crafted with Prismarine shards...
    constexpr u32 DroppedByGuardiansAndElderGuardiansCanBe = 0xF7B20305; // Dropped by Guardians and Elder Guardians. Can be used in crafting Prismarine and Sea Lanterns.
    constexpr u32 CanBeWornAsAHelmetOrCrafted = 0x5AC0C206; // Can be worn as a helmet or crafted with a torch to create a Jack-O-Lantern. It is also the main ingr...
    constexpr u32 Restores4IconShank01 = 0x857DE8BD; // Restores 4{*ICON_SHANK_01*}.
    constexpr u32 CanBePlantedToGrowPumpkins = 0xF2923BF5; // Can be planted to grow pumpkins.
    constexpr u32 CanBeMinedWithAPickaxeOrCrafted = 0x6A21C8BA; // Can be mined with a pickaxe, or crafted using Popped Chorus Fruit.
    constexpr u32 CanBeMinedWithAPickaxeOrCraftedPurpurSlabs = 0x9D49631F; // Can be mined with a pickaxe, or crafted using Purpur Slabs.
    constexpr u32 UsedForMakingLongStaircasesTwoSlabsPlaced_1 = 0xF2044F51; // Used for making long staircases. Two slabs placed on top of each other will create a normal-sized do...
    constexpr u32 UsedForCompactStaircases = 0x0DDA0C93; // Used for compact staircases.
    constexpr u32 UsedAsADecoration = 0xA2565935; // Used as a decoration.
    constexpr u32 AHarmlessCreatureMayDropARabbitHide = 0x5CF61D14; // A harmless creature. May drop a rabbit hide or a rabbit's foot when killed.
    constexpr u32 Restores25IconShank01UsedTo = 0xA6480B9A; // Restores 2.5{*ICON_SHANK_01*}. Used to cook up some rabbit stew.
    constexpr u32 UsedAsAnIngredientForBrewingPotions = 0x09EA74D9; // Used as an ingredient for brewing potions.
    constexpr u32 UsedInCraftingLeather = 0x75867C83; // Used in crafting leather.
    constexpr u32 AHostileRabbitThatWillAttackYouIf = 0x1913C6EE; // A hostile rabbit that will attack you if you get too close! May drop a rabbit hide or a rabbit's foo...
    constexpr u32 Restores15IconShank01OrCan_2 = 0x2E4841C7; // Restores 1.5{*ICON_SHANK_01*}, or can be cooked in a furnace.
    constexpr u32 Restores5IconShank01CookedUpWith = 0xEE4EE58E; // Restores 5{*ICON_SHANK_01*}. Cooked up with some cooked rabbit, carrot, mushroom and potato.
    constexpr u32 UsedToGuideMinecarts = 0x0C6204EC; // Used to guide minecarts.
    constexpr u32 CollectedByGettingASkeletonToKillA = 0xD8DB7EFF; // Collected by getting a skeleton to kill a creeper. Can be played in a jukebox.
    constexpr u32 RedColoredSandstoneItIsNotInfluencedBy = 0xB6B8A4B2; // Red colored Sandstone. It is not influenced by gravity like normal Sand.
    constexpr u32 RedColoredSandstoneItIsNotInfluencedBy_1 = 0xFECCD9B4; // Red colored Sandstone. It is not influenced by gravity like normal Sand.
    constexpr u32 RedColoredSandstoneItIsNotInfluencedBy_2 = 0xA01A36F7; // Red colored Sandstone. It is not influenced by gravity like normal Sand.
    constexpr u32 UsedAsARedstonePowerSourceCanBe = 0x3972C9E4; // Used as a redstone power source. Can be crafted back into Redstone.
    constexpr u32 CanBePlacedOnGroundToCarryAn = 0x83B8379B; // Can be placed on the ground to carry an electrical charge. When brewed with a potion it will increas...
    constexpr u32 EmitsLightWhenPowered = 0x9F48EC4B; // Emits light when powered.
    constexpr u32 UsedInRedstoneCircuitsAsARepeaterA = 0xF8568A02; // Used in Redstone circuits as a repeater, a delayer, and/or a diode.
    constexpr u32 ConstantlySendsAnElectricalChargeOrCanBe = 0x2E847CE0; // Constantly sends an electrical charge, or can be used as a receiver/transmitter when connected to th...
    constexpr u32 CanBeCraftedToCreateSugar = 0x298FE4B7; // Can be crafted to create sugar.
    constexpr u32 ATallRedFlowerThatCanBeUsed = 0xB6FAC4D2; // A tall red flower that can be used to craft red dye.
    constexpr u32 Restores2IconShank01EatingThisCan = 0x75420D7F; // Restores 2{*ICON_SHANK_01*}. Eating this can cause you to be poisoned.
    constexpr u32 WhenUsedOnAPigItAllowsYou = 0xB6415569; // When used on a pig, it allows you to ride the pig. The pig can then be steered using a Carrot on a S...
    constexpr u32 CollectedUsingAShovelCanBeSmeltedInto = 0x2C05FE82; // Collected using a shovel. Can be smelted into glass using the furnace. Is affected by gravity if the...
    constexpr u32 ARedColoredSandThatCanBeFound = 0x115BCF8E; // A red colored sand that can be found in mesas. Can be smelted into glass using the furnace. Is affec...
    constexpr u32 UsedAsABuildingMaterialIsNotInfluenced = 0x6CDEE509; // Used as a building material. Is not influenced by gravity like normal Sand.
    constexpr u32 CanBePlantedAndWillEventuallyGrowInto = 0xBE37E0E4; // Can be planted and will eventually grow into a tree.
    constexpr u32 UnderwaterLightSourcesThatCanBeFoundIn = 0x7F32A3FC; // Underwater light sources that can be found in ocean temples. Can be crafted from Prismarine shards a...
    constexpr u32 UsedToObtainWoolFromSheepAndHarvest = 0x9B4E34AC; // Used to obtain wool from sheep and harvest leaf blocks.
    constexpr u32 DropsWoolWhenShearedIfItHasNot = 0x184D1C09; // Drops wool when sheared (if it has not already been sheared). Can be dyed to make its wool a differe...
    constexpr u32 UsedToDigDirtGrassSandGravelAnd = 0xA6873129; // Used to dig dirt, grass, sand, gravel and snow faster than by hand. Shovels are required to dig snow...
    constexpr u32 AHostileMobFoundInEndCitiesThey = 0xA4CA6434; // A hostile mob found in End Cities. They hide in their shells to blend in with Purpur Blocks around t...
    constexpr u32 SometimesDroppedByShulkersCanBeUsedTo = 0x541139C5; // Sometimes dropped by Shulkers. Can be used to craft a Shulker Box.
    constexpr u32 ShowsTextEnteredByYouOrOtherPlayers = 0xB6286B39; // Shows text entered by you or other players.
    constexpr u32 AttractsNearbyHiddenSilverfishWhenAttackedHidesIn = 0x5CFE4CB1; // Attracts nearby hidden Silverfish when attacked. Hides in stone blocks.
    constexpr u32 FiresArrowsAtYouDropsArrowsWhenKilled = 0x7D30125B; // Fires arrows at you. Drops arrows when killed.
    constexpr u32 ASkeletalHorseCreatedWhenLightningStrikes = 0x5844482F; // A skeletal horse created when lightning strikes!
    constexpr u32 MobHeadsCanBePlacedAsADecoration = 0x896AE85F; // Mob Heads can be placed as a decoration, or worn as a mask in the helmet slot.
    constexpr u32 UsedForMakingLongStaircasesTwoSlabsPlaced_2 = 0x829BF11E; // Used for making long staircases. Two slabs placed on top of each other will create a normal-sized do...
    constexpr u32 SplitsIntoSmallerSlimesWhenDamaged = 0x22387B34; // Splits into smaller Slimes when damaged.
    constexpr u32 CollectedByKillingASlimeCanBeUsed = 0x05DB70FF; // Collected by killing a slime. Can be used as an ingredient for brewing potions or crafted to make St...
    constexpr u32 ACompactWayToStoreSnowballs = 0x60A1A31F; // A compact way to store snowballs.
    constexpr u32 CollectedByDiggingSnowCanBeThrown = 0x6D300964; // Collected by digging snow. Can be thrown.
    constexpr u32 TheSnowGolemCanBeCreatedByPlayers = 0xDBD1B7DD; // The Snow Golem can be created by players using snow blocks and a pumpkin. They will throw snowballs ...
    constexpr u32 UsedInPotionBrewing_1 = 0xE080A7FB; // Used in potion brewing.
    constexpr u32 AttacksYouWhenYouAreCloseToIt = 0x4029D63B; // Attacks you when you are close to it. Can climb walls. Drops string when killed.
    constexpr u32 ThisIsAPoisonousFoodAndBrewingItem = 0xF6071CBD; // This is a poisonous food and brewing item. Dropped when a Spider or Cave Spider is killed by a playe...
    constexpr u32 CanAbsorbWaterNearbyTurningIntoAWet = 0x567096DA; // Can absorb water nearby, turning into a wet sponge in the process.
    constexpr u32 CanBeDriedInAFurnaceAllowingSponge = 0xF8EBF1CB; // Can be dried in a furnace, allowing the sponge to be reused.
    constexpr u32 DropsInkSacsWhenKilled = 0x8311C378; // Drops Ink Sacs when killed.
    constexpr u32 ColorfulBlocksCraftedByDyeingTerracotta = 0x38633DDA; // Colorful blocks crafted by dyeing Terracotta.
    constexpr u32 CraftedFromGlassAndADye = 0x4D31EA2F; // Crafted from glass and a dye.
    constexpr u32 CraftedFromStainedGlass = 0x7618912A; // Crafted from Stained Glass.
    constexpr u32 UsedForCompactStaircases_1 = 0x74F8956C; // Used for compact staircases.
    constexpr u32 UsedForCompactStaircases_2 = 0x2EDB944B; // Used for compact staircases.
    constexpr u32 AHighlyCustomizableFreeStandingDecorationCanBe = 0x661AAA05; // A highly customizable free-standing decoration. Can be crafted using dyes in various patterns.
    constexpr u32 UsedToCraftTorchesArrowsSignsLaddersFences = 0x3F88E88C; // Used to craft torches, arrows, signs, ladders, fences and as handles for tools and weapons.
    constexpr u32 WhenPoweredUsingAButtonALeverARetractsPullsBackBlockTouching = 0xE0BD9C05; // When powered (using a button, a lever, a pressure plate, a redstone torch, or redstone with any one ...
    constexpr u32 CanBeMinedWithAPickaxeToCollectCobblestone = 0x46782239; // Can be mined with a pickaxe to collect cobblestone.
    constexpr u32 CanBeMinedWithAPickaxeToCollectAndesite = 0xF2A753FB; // Can be mined with a pickaxe to collect andesite.
    constexpr u32 CanBeCraftedFromAndesiteForAPolishedLook = 0x47BE1614; // Can be crafted from andesite for a polished look.
    constexpr u32 MinedFromStoneUsingAPickaxeCanBe = 0x5EA547F7; // Mined from stone using a pickaxe. Can be used to construct a furnace or stone tools.
    constexpr u32 MadeFromStoneBlocksCommonlyFoundInStrongholds = 0x8FD75DCA; // Made from stone blocks. Commonly found in Strongholds.
    constexpr u32 CanBeMinedWithAPickaxeToCollectDiorite = 0x05E93DB6; // Can be mined with a pickaxe to collect diorite.
    constexpr u32 CanBeCraftedFromDioriteForAPolishedLook = 0x2A4CCCF1; // Can be crafted from diorite for a polished look.
    constexpr u32 CanBeMinedWithAPickaxeToCollectGranite = 0x91114554; // Can be mined with a pickaxe to collect granite.
    constexpr u32 CanBeCraftedFromGraniteForAPolishedLook = 0x25E3FDC3; // Can be crafted from granite for a polished look.
    constexpr u32 SpawnsASilverfishWhenDestroyedMayAlsoSpawn = 0x414A79D5; // Spawns a Silverfish when destroyed. May also spawn Silverfish if nearby to another Silverfish being ...
    constexpr u32 UsedForMakingLongStaircasesTwoSlabsPlaced_3 = 0xBF6B9045; // Used for making long staircases. Two slabs placed on top of each other will create a normal-sized do...
    constexpr u32 UsedForMakingLongStaircasesTwoSlabsPlaced_4 = 0x183331DA; // Used for making long staircases. Two slabs placed on top of each other will create a normal-sized do...
    constexpr u32 ArmedWithTippedArrowsCanAfflictYouWith = 0x3D28EFA9; // Armed with Tipped Arrows. Can afflict you with Slowness for 30 seconds.
    constexpr u32 CollectedByKillingASpiderCanBeCrafted = 0xC6844E97; // Collected by killing a spider. Can be crafted into a Bow or Fishing Rod, or placed on the ground to ...
    constexpr u32 UsedAsABuildingMaterial = 0xAC0C3BCC; // Used as a building material.
    constexpr u32 UsedInCakeRecipeAndAsAnIngredient = 0x14DD1B10; // Used in the cake recipe, and as an ingredient for brewing potions.
    constexpr u32 CollectedByKillingACreeperCanBeCrafted = 0xF7E6C72F; // Collected by killing a creeper. Can be crafted into TNT or used as an ingredient for brewing potions...
    constexpr u32 ATallYellowFlowerThatCanBeUsed = 0xB200BB7F; // A tall yellow flower that can be used to craft yellow dye.
    constexpr u32 DealsMoreDamageThanByHand = 0x5DE5CBCF; // Deals more damage than by hand.
    constexpr u32 SometimesProducesWheatSeedsWhenBroken = 0xD6BAC09C; // Sometimes produces wheat seeds when broken.
    constexpr u32 DoubleTallGrassThatCanSometimesDropSeeds = 0xF8386CCE; // Double tall grass that can sometimes drop seeds.
    constexpr u32 TransparentBlocksThatCanBeUsedAsAn = 0x2BE941D4; // Transparent blocks that can be used as an alternative to Glass Blocks.
    constexpr u32 Restores05IconShank01WhenEatenThisCanPlantedInFarmland = 0x7DD19A72; // Restores 0.5{*ICON_SHANK_01*} when eaten. This can be planted in farmland.
    constexpr u32 CraftedFromBoneMealOrFoundUndergroundIn = 0xADA86BA1; // Crafted from Bone Meal, or found underground in fossils. Can be used as decoration.
    constexpr u32 CraftedFromEndStoneCanBeUsedAsDecoration = 0x9DCE7F1B; // Crafted from End Stone. Can be used as decoration.
    constexpr u32 ATypeOfIceThatMeltsQuickly = 0xCE630EAC; // A type of ice that melts quickly.
    constexpr u32 ADecorativeBlockThatCanBeCreatedBy = 0x17243B3F; // A decorative block that can be created by using a shovel on a Grass Block.
    constexpr u32 CausesFireDamageWhenYouStandOnIt = 0x92B3D276; // Causes fire damage when you stand on it.
    constexpr u32 ADecorativeBlockCraftedFromNetherWart = 0xD37AA538; // A decorative block crafted from Nether Wart.
    constexpr u32 EmitsARedstoneSignalWhenAdjacentBlocksAre = 0xE51E7CD1; // Emits a redstone signal when adjacent blocks are updated.
    constexpr u32 CraftedFromNetherWartAndNetherBrickCan = 0xB443635B; // Crafted from Nether Wart and Nether Brick. Can be used as decoration.
    constexpr u32 UsedToCauseExplosionsActivatedAfterPlacingBy = 0xBBB4736C; // Used to cause explosions. Activated after placing by igniting with Flint and Steel item, or with an ...
    constexpr u32 CanBeDugWithAShovelToCreateSnowballs = 0xAF5216FB; // Can be dug with a shovel to create snowballs.
    constexpr u32 UsedToCreateLightTorchesAlsoMeltSnow = 0xB920BD80; // Used to create light. Torches also melt snow and ice.
    constexpr u32 PreventsHolderFromDyingButBreaksInProcess = 0x03B5E68A; // Prevents the holder from dying, but breaks in the process. Dropped by Evokers.
    constexpr u32 ActivatedByUsingHittingmOrWithRedstoneThey = 0x7564004B; // Activated by using, hitting them or with redstone. They function as normal doors, but are a one by o...
    constexpr u32 IronTrapdoorsCanOnlyBeOpenedByRedstone = 0x158A4A1E; // Iron trapdoors can only be opened by Redstone, buttons or switches.
    constexpr u32 ActivatesAConnectedTripwireHookWhenAnEntity = 0xF4B93DF4; // Activates a connected Tripwire Hook when an entity passes through it.
    constexpr u32 IsActivatedWhenAnEntityPassesThroughA = 0xADEE68EE; // Is activated when an entity passes through a connected Tripwire.
    constexpr u32 ASmallOrangeFlowerThatCanBeUsed = 0xBA461B69; // A small orange flower that can be used to craft orange dye.
    constexpr u32 ASmallPinkFlowerThatCanBeUsed = 0xF6E94C7D; // A small pink flower that can be used to craft pink dye.
    constexpr u32 ASmallRedFlowerThatCanBeUsed = 0x3C6AF79A; // A small red flower that can be used to craft red dye.
    constexpr u32 ASmallWhiteFlowerThatCanBeUsed_1 = 0x80ACBF76; // A small white flower that can be used to craft light gray dye.
    constexpr u32 VexesAreGhostlyEntitiesThatAreSummonedBy = 0x41B99559; // Vexes are ghostly entities that are summoned by Evokers. They are capable of flying, and can pass th...
    constexpr u32 FoundInVillagesVillagersWillOfferToSell = 0x046769EC; // Found in villages, villagers will offer to sell items to the player depending on their profession.
    constexpr u32 VindicatorsAreHostileAndArmedWithAnAxe = 0x3AE301AF; // Vindicators are hostile and armed with an Axe.
    constexpr u32 GrowsOverTimeWhenPlacedCanBeCollected = 0xEC14A206; // Grows over time when placed. Can be collected using shears. Can be climbed like a ladder.
    constexpr u32 AHighlyCustomizableDecorationAttachedToABlock = 0x5D7483F7; // A highly customizable decoration attached to a block. Can be crafted using dyes in various patterns.
    constexpr u32 ExtinguishesFireAndHelpsCropsGrowCanBe = 0xA10AD34F; // Extinguishes fire and helps crops grow. Can be collected in a bucket.
    constexpr u32 FloatsOnWaterAndCanBeWalkedOn = 0xD5B7623F; // Floats on water, and can be walked on.
    constexpr u32 SlowsMovementWhenWalkingThroughItCanBe = 0xA24B73BA; // Slows movement when walking through it. Can be destroyed using shears to collect string.
    constexpr u32 ProvidesARedstoneChargeTheChargeWillBe = 0x3AD250FC; // Provides a Redstone charge. The charge will be stronger if more items are on the plate. Requires mor...
    constexpr u32 ProvidesARedstoneChargeTheChargeWillBe_1 = 0x6CAF3109; // Provides a Redstone charge. The charge will be stronger if more items are on the plate.
    constexpr u32 HarvestedFromCropsCanBeUsedToCraft = 0x9CB06D4D; // Harvested from crops. Can be used to craft food items.
    constexpr u32 CanBePlantedInFarmlandToGrowCrops = 0x999D8B6E; // Can be planted in farmland to grow crops. Make sure there's enough light for the seeds to grow!
    constexpr u32 ABlockTypeFoundInTheEndIt = 0xE33E02DE; // A block type found in The End. It has a very high blast resistance, and so is useful for building wi...
    constexpr u32 FoundInSwampsAttacksByThrowingPotionsAnd = 0x0E6AF0FB; // Found in swamps. Attacks by throwing Potions, and drops Potions when killed.
    constexpr u32 CanBeCreatedUsingWitherSkullsAndSoul = 0x3162B64F; // Can be created using Wither Skulls and Soul Sand. Fires exploding skulls at you.
    constexpr u32 ArmedWithASwordCanAfflictYouWith = 0x462290D9; // Armed with a sword. Can afflict you with Wither, which drains your health.
    constexpr u32 DocileUntilAttackedWhenyWillAttackYouBack = 0xDC964968; // Docile until attacked, when they will attack you back. Can be tamed using bones, which causes the wo...
    constexpr u32 UsedAsABuildingMaterialAndCanBe = 0x1C842361; // Used as a building material and can be crafted into many things. Can be crafted from any form of woo...
    constexpr u32 UsedForMakingLongStaircasesTwoSlabsPlaced_5 = 0x2CF50BD5; // Used for making long staircases. Two slabs placed on top of each other will create a normal-sized do...
    constexpr u32 CollectedFromSheepAndCanBeColoredWith = 0x09C006F1; // Collected from sheep, and can be colored with dyes.
    constexpr u32 UsedAsABuildingMaterialAndCanBeColoredWithDyesThisRecipe = 0xCC953094; // Used as a building material and can be colored with dyes. This recipe is not recommended because Woo...
    constexpr u32 ABookThatCanBeWrittenIn = 0xB8AD8833; // A Book that can be written in.
    constexpr u32 ABookSignedByAuthorCannotBeWrittenIn = 0xEAC3004C; // A book signed by the author (cannot be written in).
    constexpr u32 CollectedByMiningGlowstoneCanBeCraftedTo = 0x2C633DEF; // Collected by mining Glowstone. Can be crafted to make Glowstone blocks again or brewed with a potion...
    constexpr u32 AttacksYouWhenYouAreCloseToIt_1 = 0x45497554; // Attacks you when you are close to it.
    constexpr u32 AnUndeadHorseCannotBeTamed = 0x6231F2C0; // An undead horse. Cannot be tamed!
    constexpr u32 AVillagerThatHasBeenZombifiedIsreACure = 0x5DCF8BDD; // A Villager that has been zombified! Is there a cure?
    constexpr u32 YourStorageDeviceHasBeenRemovedPleaseSelect = 0xD9C3D2F5; // Your storage device has been removed.  Please select a new one.
    constexpr u32 LoadingFailed = 0xDDDDCA08; // Loading failed
    constexpr u32 InThisModeEnemiesSpawnInEnvironmentBut = 0xA8163536; // In this mode, enemies spawn in the environment, but will do less damage to the player than in the No...
    constexpr u32 InThisModeEnemiesWillSpawnInEnvironment = 0xBA3AA06F; // In this mode, enemies will spawn in the environment, and will do a great deal of damage to the playe...
    constexpr u32 InThisModeEnemiesSpawnInEnvironmentAnd = 0x22B6267B; // In this mode, enemies spawn in the environment and will do a standard amount of damage to the player...
    constexpr u32 InThisModePlayerRegainsHealthOverTime = 0xCF90DE35; // In this mode, the player regains health over time, and there are no enemies in the environment.
    constexpr u32 Easy = 0xB558EFD9; // Easy
    constexpr u32 Hard = 0xF70F3270; // Hard
    constexpr u32 Normal = 0x5D131124; // Normal
    constexpr u32 Peaceful = 0x4E52B99A; // Peaceful
    constexpr u32 DisableAutosave = 0xA5AC55D1; // Disable Autosave
    constexpr u32 DisableExhaustion = 0x8BE63389; // Disable Exhaustion
    constexpr u32 DisableAutosaveAutosave = 0x0D4F1CB3; // Disable autosave
    constexpr u32 DisconnectedByServer = 0x10F4B2D5; // Disconnected by the server
    constexpr u32 YouCannotJoinThisGameAsYouHave = 0x00CF3F70; // You cannot join this game as you have previously been kicked by the host.
    constexpr u32 YouCannotJoinThisGameAsPlayerYou = 0xCE44990B; // You cannot join this game as the player you are trying to join is running a newer version of the gam...
    constexpr u32 YouWereKickedFromGameForFlying = 0xAD3E1729; // You were kicked from the game for flying
    constexpr u32 YouWereKickedFromGame = 0xF3A95051; // You were kicked from the game
    constexpr u32 ConnectionAttemptTookTooLong = 0x434F7B7F; // Connection attempt took too long
    constexpr u32 YouCannotJoinThisGameAsYouAre = 0x56604944; // You cannot join this game as you are not friends with anybody in the game.
    constexpr u32 NoSuitableGameCanBeFoundToJoin = 0xEC3B3DA6; // No suitable game can be found to join. Try creating a game for others to join instead.
    constexpr u32 TheServerIsFull = 0xB86BE603; // The server is full
    constexpr u32 YouCannotJoinThisGameAsPlayerYouAnOlder = 0xB59CADA7; // You cannot join this game as the player you are trying to join is running an older version of the ga...
    constexpr u32 TheHostHasExitedGame = 0x5B106D79; // The host has exited the game.
    constexpr u32 Dispenser = 0xE398F425; // Dispenser
    constexpr u32 YouHaveAlreadyInstalledThisItem = 0xCBA57CF3; // You have already installed this item!
    constexpr u32 ItemAlreadyInstalled = 0x9DA04A9E; // Item Already Installed
    constexpr u32 DMsp = 0xE1D1B963; // %d MSP
    constexpr u32 AvatarItems = 0xACEF9B0B; // Avatar Items
    constexpr u32 BundlePacks = 0x500DC372; // Bundle Packs
    constexpr u32 Gamerpics = 0x20147BF9; // Gamerpics
    constexpr u32 MashUpPacks = 0x73639B6C; // Mash-Up Packs
    constexpr u32 SkinPacks = 0xE6CE8669; // Skin Packs
    constexpr u32 TexturePacks = 0xF6194EB1; // Texture Packs
    constexpr u32 Themes = 0x7683B27E; // Themes
    constexpr u32 Free = 0x79B959DE; // Free
    constexpr u32 DownloadFullVersion = 0x0BACAA64; // Download Full Version
    constexpr u32 DownloadTrialVersion = 0x27BE83E5; // Download Trial Version
    constexpr u32 ThisWorldUsesAMashUpPackOr = 0x5AB46118; // This world uses a mash-up pack or texture pack you don't have!\r\nWould you like to install the mash...
    constexpr u32 TexturePackNotPresent = 0x1E8EE39F; // Texture Pack Not Present
    constexpr u32 UnlockFullVersion = 0x6BB60CA6; // Unlock Full Version
    constexpr u32 Dnf = 0xF62114B0; // DNF
    constexpr u32 Done = 0x6D2A309C; // Done
    constexpr u32 Donkey = 0x47859436; // Donkey
    constexpr u32 DontResetNether = 0x9405ECF0; // Don't Reset Nether
    constexpr u32 DontResetTheEnd = 0x9DCD2F11; // Don't Reset The End
    constexpr u32 DownloadableContentOffers = 0x65154DB0; // Downloadable Content Offers
    constexpr u32 MinecraftStore = 0xE6987A73; // Minecraft Store
    constexpr u32 Armor_1 = 0xABD1187F; // Armor
    constexpr u32 Item = 0x47C65CD1; // Item
    constexpr u32 EditSignMessage = 0x0056C538; // Edit sign message:
    constexpr u32 Absorption = 0x824126CD; // Absorption
    constexpr u32 Blindness = 0x8FA1BCB2; // Blindness
    constexpr u32 Nausea = 0x3D3BE8CE; // Nausea
    constexpr u32 Strength = 0x8708EDCA; // Strength
    constexpr u32 MiningFatigue = 0xF483C9EB; // Mining Fatigue
    constexpr u32 Haste = 0x7DF665F9; // Haste
    constexpr u32 NoEffects = 0x735F5E49; // No Effects
    constexpr u32 FireResistance = 0x18A0F8BF; // Fire Resistance
    constexpr u32 Glowing = 0x52E542DF; // Glowing
    constexpr u32 InstantDamage = 0x21220FEA; // Instant Damage
    constexpr u32 InstantHealth = 0x327028E4; // Instant Health
    constexpr u32 HealthBoost = 0xE7478E85; // Health Boost
    constexpr u32 Hunger = 0x79345CBF; // Hunger
    constexpr u32 Invisibility = 0x77869FC5; // Invisibility
    constexpr u32 JumpBoost = 0x0912C386; // Jump Boost
    constexpr u32 Levitation = 0x13F37BE3; // Levitation
    constexpr u32 Luck_1 = 0x474605CD; // Luck
    constexpr u32 Slowness = 0x25D65B68; // Slowness
    constexpr u32 Speed_1 = 0xA549AE42; // Speed
    constexpr u32 NightVision = 0x671094DC; // Night Vision
    constexpr u32 Poison = 0x54F76D78; // Poison
    constexpr u32 Regeneration = 0xB28E79A5; // Regeneration
    constexpr u32 Resistance = 0x91395347; // Resistance
    constexpr u32 Saturation = 0xE132CFD0; // Saturation
    constexpr u32 BadLuck = 0xA35CC356; // Bad Luck
    constexpr u32 WaterBreathing = 0x37C990C9; // Water Breathing
    constexpr u32 Weakness = 0xD4431B9F; // Weakness
    constexpr u32 Wither = 0x0132DCC1; // Wither
    constexpr u32 ElderGuardian = 0xF5FCCE7A; // Elder Guardian
    constexpr u32 CanTeleport = 0x77569663; // Can Teleport
    constexpr u32 Enchant = 0xF4BD500F; // Enchant
    constexpr u32 CostLapisLazuli = 0x0F5706AB; // {*COST*} Lapis Lazuli
    constexpr u32 _1LapisLazuli = 0x8D500014; // 1 Lapis Lazuli
    constexpr u32 CostEnchantmentLevels = 0x2D47653A; // {*COST*} Enchantment Levels
    constexpr u32 _1EnchantmentLevel = 0x3ACD0B7D; // 1 Enchantment Level
    constexpr u32 LevelRequirementLevel = 0xC9389B86; // Level Requirement: {*LEVEL*}
    constexpr u32 Power = 0xD7F074AF; // Power
    constexpr u32 Flame = 0x0EA75E04; // Flame
    constexpr u32 Infinity = 0xD251EC6A; // Infinity
    constexpr u32 Punch = 0x86D14A8D; // Punch
    constexpr u32 CurseOfBinding = 0x7B5DBCD8; // Curse of Binding
    constexpr u32 CurseOfVanishing = 0xC8D93E3A; // Curse of Vanishing
    constexpr u32 Sharpness = 0xCA0651FF; // Sharpness
    constexpr u32 BaneOfArthropods = 0x0C99DAC4; // Bane of Arthropods
    constexpr u32 Smite = 0xBD9225A1; // Smite
    constexpr u32 DepthStrider = 0xD41BAEBF; // Depth Strider
    constexpr u32 Efficiency = 0x7C8A12EF; // Efficiency
    constexpr u32 Unbreaking = 0xF4AF0AC3; // Unbreaking
    constexpr u32 FireAspect = 0x96021422; // Fire Aspect
    constexpr u32 Lure = 0xFC584B8E; // Lure
    constexpr u32 FrostWalker = 0x933DFA4F; // Frost Walker
    constexpr u32 Knockback = 0xC3755A5B; // Knockback
    constexpr u32 I = 0x66E0206A; // I
    constexpr u32 X = 0x9E0C28EA; // X
    constexpr u32 Ii = 0x40DDA601; // II
    constexpr u32 Iii = 0x1ADB2B98; // III
    constexpr u32 Iv = 0x24EC8477; // IV
    constexpr u32 V = 0xFEEA0A0E; // V
    constexpr u32 Vi = 0xD8E78FA5; // VI
    constexpr u32 Vii = 0xB2E5153C; // VII
    constexpr u32 Viii = 0x5CCEC78B; // VIII
    constexpr u32 Ix = 0x36CC4D22; // IX
    constexpr u32 Looting = 0x797D9C28; // Looting
    constexpr u32 Fortune = 0xDA6036A5; // Fortune
    constexpr u32 LuckOfSea = 0x8E00390D; // Luck of the Sea
    constexpr u32 Mending = 0x3BCC2150; // Mending
    constexpr u32 Respiration = 0x3349D040; // Respiration
    constexpr u32 Protection = 0xF84A0F07; // Protection
    constexpr u32 BlastProtection = 0x7FF9AA23; // Blast Protection
    constexpr u32 FeatherFalling = 0xF470F5F1; // Feather Falling
    constexpr u32 FireProtection = 0xE1AA8A26; // Fire Protection
    constexpr u32 ProjectileProtection = 0xCF623683; // Projectile Protection
    constexpr u32 Thorns = 0x88507D2E; // Thorns
    constexpr u32 SilkTouch = 0x68376DD4; // Silk Touch
    constexpr u32 AquaAffinity = 0x212CD6AE; // Aqua Affinity
    constexpr u32 EndGateway = 0x376886D4; // End Gateway
    constexpr u32 EnderDragon_1 = 0x5157A755; // Ender Dragon
    constexpr u32 Enderman = 0x801001D6; // Enderman
    constexpr u32 Endermite = 0xE774D679; // Endermite
    constexpr u32 ANetworkErrorHasOccurred = 0xAAB2B6DD; // A network error has occurred.
    constexpr u32 NetworkError = 0x386C3A1A; // Network Error
    constexpr u32 ConsoleSupportsUserGeneratedContentRNR = 0x8FF423F1; // Minecraft: Nintendo Switch Edition supports User Generated Content.\r\n    \r\nYou can share content...
    constexpr u32 Evoker = 0xD9AA9869; // Evoker
    constexpr u32 ExitGame = 0x2686C8E5; // Exit Game
    constexpr u32 ExitWithoutSaving = 0x4940E70D; // Exit without saving
    constexpr u32 ExitAndSave = 0x7BF1723B; // Exit and save
    constexpr u32 ExitingGame = 0x3E0B4895; // Exiting the game
    constexpr u32 FailedToCreateGame = 0x08DC300E; // Failed to create game
    constexpr u32 YourStorageDeviceIsUnavailableOrHasAn = 0xB4796B91; // Your storage device is unavailable or has an error. Please select a new storage device.
    constexpr u32 YourStorageDeviceIsUnavailableOrHasAnError = 0x20C8A8CF; // Your storage device is unavailable or has an error
    constexpr u32 SaveFailed = 0x9F82CF02; // Save failed
    constexpr u32 ConsoleHasFailedToLoadAndCannotContinue = 0x6B8F91F7; // "Minecraft: Nintendo Switch Edition" has failed to load, and cannot continue.
    constexpr u32 LoadingError = 0x1A9D7DBA; // Loading Error
    constexpr u32 FavoriteSkins = 0x70A431BD; // Favorite Skins
    constexpr u32 FavoriteMii = 0x9917E6E4; // Favorite Mii
    constexpr u32 Features = 0x7914B2CB; // Features
    constexpr u32 FindBalancedSeed = 0xCF25AE14; // Find Balanced Seed
    constexpr u32 FireSpreads = 0x01DE3701; // Fire Spreads
    constexpr u32 AddFade = 0x529A620A; // Add Fade
    constexpr u32 AddPower = 0x3A0766FB; // Add Power
    constexpr u32 Color = 0xD0D94A48; // Color
    constexpr u32 Effect = 0x7A3F69FA; // Effect
    constexpr u32 Shape = 0xDCCA69BA; // Shape
    constexpr u32 SelectStar = 0x80AC0CE1; // Select Star
    constexpr u32 FireworkRocket = 0x71979E36; // Firework Rocket
    constexpr u32 FireworkStar = 0x12DAE0F3; // Firework Star
    constexpr u32 Black = 0xF1EB98EB; // Black
    constexpr u32 Blue = 0xAF6DF37A; // Blue
    constexpr u32 Brown = 0x67658A12; // Brown
    constexpr u32 Custom = 0x09D0E79F; // Custom
    constexpr u32 Cyan = 0x3BCFE831; // Cyan
    constexpr u32 FadeTo = 0x96054F9E; // Fade to
    constexpr u32 Twinkle = 0xD6830160; // Twinkle
    constexpr u32 Gray = 0x90AE4189; // Gray
    constexpr u32 Green = 0x1B73CCE7; // Green
    constexpr u32 LightBlue = 0xB8B10C9B; // Light Blue
    constexpr u32 Lime = 0x703560C1; // Lime
    constexpr u32 Magenta = 0x0E6CD911; // Magenta
    constexpr u32 Orange = 0xF2E7EFD4; // Orange
    constexpr u32 Pink = 0x32A3BD20; // Pink
    constexpr u32 Purple = 0xE0BEAC12; // Purple
    constexpr u32 Red = 0x4A428E5F; // Red
    constexpr u32 LightGray = 0xB851C033; // Light Gray
    constexpr u32 Trail = 0x90065996; // Trail
    constexpr u32 UnknownShape = 0x47BC9784; // Unknown Shape
    constexpr u32 SmallBall = 0x16B0A11B; // Small Ball
    constexpr u32 LargeBall = 0xF0AE26B2; // Large Ball
    constexpr u32 StarShaped = 0xCAABAC49; // Star-shaped
    constexpr u32 CreeperShaped = 0xA4A931E0; // Creeper-shaped
    constexpr u32 Burst = 0xAEBA8ABF; // Burst
    constexpr u32 White = 0x266E23A3; // White
    constexpr u32 Yellow = 0x82EC8DD8; // Yellow
    constexpr u32 TheFireworksDisplayedAreFictionalUseOfFireworks = 0xD3C3DC8F; // The fireworks displayed are fictional. Use of fireworks should be done in compliance with the law an...
    constexpr u32 FlowerPot = 0x37864CC2; // Flower Pot
    constexpr u32 FlyingViewRolling = 0x212BF23F; // Flying View Rolling
    constexpr u32 Friends = 0xDAB3C895; // Friends
    constexpr u32 Fuel = 0x9F31C0EE; // Fuel
    constexpr u32 Furnace = 0x1B49A944; // Furnace
    constexpr u32 SSGame = 0x1224BF95; // %s's Game
    constexpr u32 UnknownHostGame = 0xE250F5CA; // Unknown host game
    constexpr u32 YourGameModeHasBeenChanged = 0xD9F1FAB3; // Your game mode has been changed
    constexpr u32 GameOptions = 0xF2F331D5; // Game Options
    constexpr u32 GameModeAdventure = 0xF9915358; // Game Mode: Adventure
    constexpr u32 GameModeCreative = 0x12D696DD; // Game Mode: Creative
    constexpr u32 GameModeSurvival = 0x9BA782A6; // Game Mode: Survival
    constexpr u32 WhenEnabledFriendsOfPeopleOnYourFriends = 0x7B994768; // When enabled, friends of people on your Friends List can join the game.
    constexpr u32 WhenEnabledAChestContainingSomeUsefulItems = 0xC61E984D; // When enabled, a chest containing some useful items will be created near the player spawn point.
    constexpr u32 CustomizeSeed = 0x5A06BE1A; // Customize Seed
    constexpr u32 ConfigureSomeOfSettingsUsedToGenerateBiomes = 0x814065BC; // Configure some of the settings used to generate biomes for the current seed.
    constexpr u32 WhenDisabledTimeOfDayWillNotChange = 0x80E6EA53; // When disabled, the time of day will not change.
    constexpr u32 TurnOffConstantAutomaticSavingOfWorldIf = 0xD06DA129; // Turn off the constant, automatic saving of the world. If you later choose to save it could take a lo...
    constexpr u32 WhenEnabledFireMaySpreadToNearbyFlammable = 0xF2E6DBCB; // When enabled, fire may spread to nearby flammable blocks.
    constexpr u32 WhenEnabledHostCanToggleirAbilityToFly = 0x8F41ADB5; // When enabled, the host can toggle their ability to fly, disable exhaustion, and make themselves invi...
    constexpr u32 SelectALargerWorldSizeToIncreaseAmount = 0xA8359EAD; // Select a larger world size to increase the amount of the world that you can explore. Larger worlds c...
    constexpr u32 WhenEnabledOuter32TilesAroundWorldEdge = 0xCF9E315E; // When enabled, the outer 32 tiles around the world edge will be overwritten by newly generated tiles ...
    constexpr u32 WhenEnabledOnlyInvitedPlayersCanJoin = 0x0F7151D3; // When enabled, only invited players can join.
    constexpr u32 WhenEnabledPlayersWillKeepirInventoryWhenyDie = 0xE0163D88; // When enabled, players will keep their inventory when they die.
    constexpr u32 WhenDisabledPreventsMonstersAndAnimalsFromChanging = 0x544AD58E; // When disabled, prevents monsters and animals from changing blocks (for example, Creeper explosions w...
    constexpr u32 WhenDisabledMonstersAndAnimalsWillNotDrop = 0x03D32989; // When disabled, monsters and animals will not drop loot (for example, Creepers won't drop gunpowder).
    constexpr u32 WhenDisabledMobsWillNotSpawnNaturally = 0xCF045AFA; // When disabled, mobs will not spawn naturally.
    constexpr u32 WhenDisabledPlayersWillNotRegenerateHealthNaturally = 0x33B6226B; // When disabled, players will not regenerate health naturally.
    constexpr u32 WhenEnabledGameWillBeAnOnlineGame = 0x1A93E279; // When enabled, the game will be an online game.
    constexpr u32 WhenEnabledPlayersCanInflictDamageOnOther = 0x2DF040B0; // When enabled, players can inflict damage on other players. This option only affects Survival and Adv...
    constexpr u32 WhenEnabledNetherWorldWillBeReGenerated = 0xA112A17C; // When enabled, the Nether world will be re-generated. This is useful if you have an older save where ...
    constexpr u32 EnterASeedToGenerateSameTerrainAgain = 0xA6874A79; // Enter a seed to generate the same terrain again. Leave blank for a random world.
    constexpr u32 WhenEnabledStructuresSuchAsVillagesAndStrongholds = 0x30F1CB60; // When enabled, structures such as Villages and Strongholds will generate in the world.
    constexpr u32 WhenEnabledACompletelyFlatWorldWillBe = 0xC36B9DE0; // When enabled, a completely flat world will be generated in the Overworld and in the Nether. {*DISABL...
    constexpr u32 WhenDisabledBlocksWillNotDropItemsWhen = 0xAF1FCA77; // When disabled, blocks will not drop items when destroyed (for example, Stone blocks won't drop Cobbl...
    constexpr u32 WhenEnabledTntWillExplodeWhenActivated = 0xC85A085B; // When enabled, TNT will explode when activated.
    constexpr u32 WhenDisabledPlayersJoiningGameCannotBuildOr = 0x2BDBDDBA; // When disabled, players joining the game cannot build or mine until authorised.
    constexpr u32 WhenEnabledTheEndWorldWillBeRecreated = 0xCB6D8DE1; // When enabled, The End world will be recreated with new End features, including End Gateways, End Cit...
    constexpr u32 WhenDisabledWeatherWillNotChange = 0x2BD798A9; // When disabled, the weather will not change.
    constexpr u32 SelectAWorldSizeToVaryAmountOf = 0x7BD1534E; // Select a world size to vary the amount of the world that you can explore.
    constexpr u32 GamerpicsPacks = 0x9CCDE239; // Gamerpics Packs
    constexpr u32 GenerateStructures = 0x9C2F3DBE; // Generate Structures
    constexpr u32 AnErrorOccurredExitingToMainMenu = 0x10DAB382; // An error occurred. Exiting to the main menu.
    constexpr u32 Ghast = 0x71DF0C85; // Ghast
    constexpr u32 Graphics = 0xC2B7BF99; // Graphics
    constexpr u32 Armor_2 = 0xF187DB6D; // Armor
    constexpr u32 BuildingBlocks = 0x0FBC6E08; // Building Blocks
    constexpr u32 Decorations = 0xAC698282; // Decorations
    constexpr u32 Food = 0xEF31F329; // Food
    constexpr u32 Materials = 0x448C117B; // Materials
    constexpr u32 Mechanisms = 0x89F72B83; // Mechanisms
    constexpr u32 Miscellaneous = 0xBC0FD661; // Miscellaneous
    constexpr u32 Brewing = 0x7AF670DB; // Brewing
    constexpr u32 Brewing_1 = 0x50D06098; // Brewing
    constexpr u32 RedstoneTransportation = 0x060380CB; // Redstone & Transportation
    constexpr u32 Structures = 0xE6A4F105; // Structures
    constexpr u32 ToolsAndWeapons = 0xA00B4CF0; // Tools and Weapons
    constexpr u32 ToolsWeaponsArmor = 0xAD2EBC52; // Tools, Weapons & Armor
    constexpr u32 Transport = 0x415962D0; // Transport
    constexpr u32 Weapons = 0xC727A11A; // Weapons
    constexpr u32 Guardian = 0x7FAA806F; // Guardian
    constexpr u32 GuestMii = 0x9DBA0DB5; // Guest Mii
    constexpr u32 AGuestPlayerHasSignedOutCausingAll = 0x4EEC6392; // A guest player has signed out causing all guest players to be removed from the game.
    constexpr u32 GuestSignedOut = 0xDAD07967; // Guest signed out
    constexpr u32 HelpOptions = 0x2B1E9F0E; // Help & Options
    constexpr u32 Hints = 0x3B5C8F8C; // Hints
    constexpr u32 Horse_1 = 0xEE23D9B7; // Horse
    constexpr u32 ThisOptionDisablesAchievementsForThisWorldWhile = 0xBF244113; // This option disables achievements for this world while playing, and if loading it again after saving...
    constexpr u32 HostOptions = 0x888510B3; // Host Options
    constexpr u32 HostPrivileges = 0x7873433F; // Host Privileges
    constexpr u32 HowToPlay = 0x15F695FB; // How To Play
    constexpr u32 T3HowToPlayAnvilEtwBB = 0xFCF1D650; // {*T3*}HOW TO PLAY : ANVIL{*ETW*}{*B*}{*B*}\r\nExperience Levels can be used to repair, enchant or re...
    constexpr u32 T3HowToPlayBanningLevelsEtwB = 0x39EEB9B3; // {*T3*}HOW TO PLAY : BANNING LEVELS{*ETW*}{*B*}{*B*}\r\nIf you find offensive content within a level ...
    constexpr u32 T3HowToPlayBannersEtwBB = 0xE146E1C3; // {*T3*}HOW TO PLAY : BANNERS{*ETW*}{*B*}{*B*}\r\nBanners are highly customizable decorations that can...
    constexpr u32 T3HowToPlayBasicsEtwBB = 0x8758A585; // {*T3*}HOW TO PLAY : BASICS{*ETW*}{*B*}{*B*}\r\nMinecraft is a game about placing blocks to build any...
    constexpr u32 T3HowToPlayBeaconsEtwBB = 0x23733DBB; // {*T3*}HOW TO PLAY : BEACONS{*ETW*}{*B*}{*B*}\r\nActive Beacons project a bright beam of light into t...
    constexpr u32 T3HowToPlayBreedingAnimalsEtwB = 0x730761ED; // {*T3*}HOW TO PLAY : BREEDING ANIMALS{*ETW*}{*B*}{*B*}\r\nThe animals in Minecraft can breed, and wil...
    constexpr u32 T3HowToPlayBrewingEtwBB = 0x186EB58E; // {*T3*}HOW TO PLAY : BREWING{*ETW*}{*B*}{*B*}\r\nBrewing potions requires a Brewing Stand, which can ...
    constexpr u32 T3HowToPlayChestEtwBB = 0x2913D7CD; // {*T3*}HOW TO PLAY : CHEST{*ETW*}{*B*}{*B*}\r\nOnce you have crafted a Chest, you can place it in the...
    constexpr u32 T3HowToPlayCraftingTableEtwB = 0xB6AB3C0F; // {*T3*}HOW TO PLAY : CRAFTING TABLE{*ETW*}{*B*}{*B*}\r\nYou can craft larger items using a Crafting T...
    constexpr u32 T3HowToPlayCraftingEtwBB = 0x58EF7C86; // {*T3*}HOW TO PLAY : CRAFTING{*ETW*}{*B*}{*B*}\r\nIn the Crafting interface, you can combine items fr...
    constexpr u32 RNT3HowToPlayCreativeMode = 0xDDF4FAF7; // \r\n      {*T3*}HOW TO PLAY : CREATIVE MODE{*ETW*}{*B*}{*B*}\r\n      The creative mode interface al...
    constexpr u32 T3HowToPlayDispenserEtwBB = 0xC6F80B3D; // {*T3*}HOW TO PLAY : DISPENSER{*ETW*}{*B*}{*B*}\r\nA Dispenser is used to shoot out items. You will n...
    constexpr u32 T3HowToPlayDroppersEtwBB = 0xAA5BD119; // {*T3*}HOW TO PLAY : DROPPERS{*ETW*}{*B*}{*B*}\r\nWhen powered by Redstone, Droppers will drop a sing...
    constexpr u32 T3HowToPlayElytraEtwBB = 0xE91B67DB; // {*T3*}HOW TO PLAY : ELYTRA{*ETW*}{*B*}{*B*}\r\nElytra are an item that can be equipped to allow glid...
    constexpr u32 T3HowToPlayEnchantingEtwBB = 0x5ECE0EED; // {*T3*}HOW TO PLAY : ENCHANTING{*ETW*}{*B*}{*B*}\r\nThe Experience Points collected by picking up Exp...
    constexpr u32 T3HowToPlayEndCitiesEtwB = 0x93EAC97A; // {*T3*}HOW TO PLAY : END CITIES{*ETW*}{*B*}{*B*}\r\nAfter killing the Ender Dragon, an End Gateway Po...
    constexpr u32 T3HowToPlayEnderChestEtwB = 0xE160391D; // {*T3*}HOW TO PLAY : ENDER CHEST {*ETW*}{*B*}{*B*}\r\nAll Ender Chests in a world are linked. Items p...
    constexpr u32 T3HowToPlayFarmingAnimalsEtwB = 0x59F9A3A9; // {*T3*}HOW TO PLAY : FARMING ANIMALS{*ETW*}{*B*}{*B*}\r\nIf you want to keep your animals in one plac...
    constexpr u32 T3HowToPlayFireworksEtwBB = 0xDD5BBBBE; // {*T3*}HOW TO PLAY : FIREWORKS{*ETW*}{*B*}{*B*}\r\nFireworks are single-use decorative items that can...
    constexpr u32 T3HowToPlayFurnaceEtwBB = 0xC6EBF0EC; // {*T3*}HOW TO PLAY : FURNACE{*ETW*}{*B*}{*B*}\r\nA Furnace allows you to change items by firing them....
    constexpr u32 T3HowToPlayHoppersEtwBB = 0xD3C04577; // {*T3*}HOW TO PLAY : HOPPERS{*ETW*}{*B*}{*B*}\r\nHoppers are used to insert or remove items from cont...
    constexpr u32 T3HowToPlayHorsesEtwBB = 0x2FF78FFC; // {*T3*}HOW TO PLAY : HORSES{*ETW*}{*B*}{*B*}\r\nHorses and Donkeys are found mainly in open plains an...
    constexpr u32 T3HowToPlayHostAndPlayerOptions = 0x8C55BD04; // {*T3*}HOW TO PLAY : HOST AND PLAYER OPTIONS{*ETW*}{*B*}{*B*}\r\n\r\n{*T1*}Game Options{*ETW*}{*B*}\r...
    constexpr u32 T3HowToPlayHudEtwBB = 0x8941A6AD; // {*T3*}HOW TO PLAY : HUD{*ETW*}{*B*}{*B*}\r\nThe HUD shows information about your status; your health...
    constexpr u32 T3HowToPlayInventoryEtwBB = 0x8E8B1966; // {*T3*}HOW TO PLAY : INVENTORY{*ETW*}{*B*}{*B*}\r\nPress {*CONTROLLER_ACTION_INVENTORY*} to view your...
    constexpr u32 T3HowToPlayLargeChestEtwB = 0xBC353D00; // {*T3*}HOW TO PLAY : LARGE CHEST{*ETW*}{*B*}{*B*}\r\nTwo chests placed next to each other will be com...
    constexpr u32 Anvil = 0x55175D0C; // Anvil
    constexpr u32 BanningLevels = 0x8702F8AF; // Banning Levels
    constexpr u32 Banners = 0xC48A1DCF; // Banners
    constexpr u32 Basics = 0x4E09B239; // Basics
    constexpr u32 Beacons = 0x74C4B1E7; // Beacons
    constexpr u32 BreedingAnimals = 0x68B19531; // Breeding Animals
    constexpr u32 Brewing_2 = 0x95EA9872; // Brewing
    constexpr u32 Chests = 0x9BFE8C42; // Chests
    constexpr u32 Crafting_1 = 0xF8FE2A8A; // Crafting
    constexpr u32 CreativeMode = 0x5D603CEB; // Creative Mode
    constexpr u32 Dispenser_1 = 0xDC9BF801; // Dispenser
    constexpr u32 Droppers = 0xD554B135; // Droppers
    constexpr u32 Elytra = 0x3FE78B47; // Elytra
    constexpr u32 Enchantment = 0x6C8ABC81; // Enchantment
    constexpr u32 EndCities = 0x670457B6; // End Cities
    constexpr u32 FarmingAnimals = 0xC5E8DA45; // Farming Animals
    constexpr u32 Fireworks = 0x0B9C0E92; // Fireworks
    constexpr u32 Furnace_1 = 0xAE9EC2E0; // Furnace
    constexpr u32 Hoppers = 0x97D17F3B; // Hoppers
    constexpr u32 Horses = 0x0B54D580; // Horses
    constexpr u32 HostAndPlayerOptions = 0xF3D9C148; // Host and Player Options
    constexpr u32 Hud = 0xFE7EBCC1; // HUD
    constexpr u32 Inventory_1 = 0xA89BCC3A; // Inventory
    constexpr u32 BattleMiniGame = 0x665939C3; // Battle Mini Game
    constexpr u32 TumbleMiniGame = 0xF451CA88; // Tumble Mini Game
    constexpr u32 GlideMiniGame_1 = 0x1A5444F1; // Glide Mini Game
    constexpr u32 Multiplayer = 0xA1BFE39A; // Multiplayer
    constexpr u32 NetherPortal = 0x07FF49BC; // Nether Portal
    constexpr u32 SharingScreenshots = 0x1E3380AF; // Sharing Screenshots
    constexpr u32 TheEnd_2 = 0x90785456; // The End
    constexpr u32 Trading = 0xCCD04093; // Trading
    constexpr u32 WhatSNew = 0x0AD78575; // What's New
    constexpr u32 T3HowToPlayBattleMiniGameEtw = 0xCEF2334F; // {*T3*}HOW TO PLAY : BATTLE MINI GAME{*ETW*}{*B*}{*B*}\r\nBattle is a frantic last-man-standing fight...
    constexpr u32 T3HowToPlayTumbleMiniGameEtw = 0x5CEAC414; // {*T3*}HOW TO PLAY : TUMBLE MINI GAME{*ETW*}{*B*}{*B*}\r\nTumble is a fast paced last-man-standing mi...
    constexpr u32 T3HowToPlayGlideMiniGameEtw = 0x82ED3E7D; // {*T3*}HOW TO PLAY : GLIDE MINI GAME{*ETW*}{*B*}{*B*}\r\nGlide is a fast paced Elytra Mini Game. Ther...
    constexpr u32 RNT3HowToPlayMultiplayerEtw = 0x0433E4C6; // \r\n      {*T3*}HOW TO PLAY : MULTIPLAYER{*ETW*}{*B*}{*B*}\r\n      Minecraft on the Nintendo Switch...
    constexpr u32 T3HowToPlayNetherPortalEtwB = 0xAD1E1A90; // {*T3*}HOW TO PLAY : NETHER PORTAL{*ETW*}{*B*}{*B*}\r\nA Nether Portal allows players to travel betwe...
    constexpr u32 NextPage = 0xA3AB7B4B; // Next Page
    constexpr u32 PreviousPage = 0x0403E4E5; // Previous Page
    constexpr u32 T3HowToPlaySharingScreenshotsEtwB = 0xC8C6C413; // {*T3*}HOW TO PLAY : SHARING SCREENSHOTS{*ETW*}{*B*}{*B*}\r\nYou can capture a screenshot from your g...
    constexpr u32 T3HowToPlayTheEndEtwB = 0xC81B96AA; // {*T3*}HOW TO PLAY : THE END{*ETW*}{*B*}{*B*}\r\nThe End is another dimension which can be reached th...
    constexpr u32 T3HowToPlayTradingEtwBB = 0xDD493E2F; // {*T3*}HOW TO PLAY : TRADING{*ETW*}{*B*}{*B*}\r\nIt is possible to trade items with villagers. Each v...
    constexpr u32 T3ChangesAndAdditionsEtwBRN = 0x018D8EA9; // {*T3*}Changes and Additions{*ETW*}{*B*}\r\n{*B*}- Added The Incredibles Skin Pack. Grab your super s...
    constexpr u32 Husk = 0xD84778B9; // Husk
    constexpr u32 Illusioner = 0xDFC3051C; // Illusioner
    constexpr u32 InGameUserSMii = 0x2C94B968; // In-Game user's Mii
    constexpr u32 InGameTooltips = 0xFE9791A3; // In-Game Tooltips
    constexpr u32 IncreaseWorldSize = 0x0F8D57F7; // Increase World Size
    constexpr u32 OverwriteWorldEdges = 0x949B0F24; // Overwrite World Edges
    constexpr u32 Ingredient = 0x7D7816A1; // Ingredient
    constexpr u32 Ingredients = 0xCB14BD42; // Ingredients
    constexpr u32 ThereIsNotEnoughFreeSpaceToCreate = 0x89199462; // There is not enough free space to create save data. By choosing to proceed, all saving has been disa...
    constexpr u32 Inventory_2 = 0x14630B9E; // Inventory
    constexpr u32 InvertFlyingControls = 0xBEE1560E; // Invert Flying Controls
    constexpr u32 InvertLook = 0xA1531E06; // Invert Look
    constexpr u32 Invisible = 0x9E0A027D; // Invisible
    constexpr u32 InviteOnly = 0x2733A4B6; // Invite Only
    constexpr u32 IronGolem = 0xA63E1B7A; // Iron Golem
    constexpr u32 Air = 0x6208583C; // Air
    constexpr u32 Apple = 0xAD094656; // Apple
    constexpr u32 GoldenApple = 0x2BCD6309; // Golden Apple
    constexpr u32 ArmorStand_1 = 0x78DD7F8E; // Armor Stand
    constexpr u32 Arrow = 0xA8328907; // Arrow
    constexpr u32 Banner = 0x2C090B72; // Banner
    constexpr u32 BlackBanner = 0x44ED367A; // Black Banner
    constexpr u32 BlueBanner = 0x0EC06B4B; // Blue Banner
    constexpr u32 BlackBordure = 0x0FD3FD79; // Black Bordure
    constexpr u32 BlueBordure = 0x664877B8; // Blue Bordure
    constexpr u32 BrownBordure = 0xCECE9100; // Brown Bordure
    constexpr u32 CyanBordure = 0x2D719C73; // Cyan Bordure
    constexpr u32 GrayBordure = 0x5AD1B42B; // Gray Bordure
    constexpr u32 GreenBordure = 0x10122895; // Green Bordure
    constexpr u32 LightBlueBordure = 0xF9C37ABE; // Light Blue Bordure
    constexpr u32 LimeBordure = 0x9C956183; // Lime Bordure
    constexpr u32 MagentaBordure = 0x675695A3; // Magenta Bordure
    constexpr u32 OrangeBordure = 0x6BBD7216; // Orange Bordure
    constexpr u32 PinkBordure = 0xB8DCF442; // Pink Bordure
    constexpr u32 PurpleBordure = 0xFF9BC930; // Purple Bordure
    constexpr u32 RedBordure = 0x75435D6D; // Red Bordure
    constexpr u32 LightGrayBordure = 0xBEAE3411; // Light Gray Bordure
    constexpr u32 WhiteBordure = 0x81453F71; // White Bordure
    constexpr u32 YellowBordure = 0x09AB357A; // Yellow Bordure
    constexpr u32 BlackFieldMasoned = 0x41EFD36F; // Black Field Masoned
    constexpr u32 BlueFieldMasoned = 0x0BFF879E; // Blue Field Masoned
    constexpr u32 BrownFieldMasoned = 0x1B67AC96; // Brown Field Masoned
    constexpr u32 CyanFieldMasoned = 0x3850E995; // Cyan Field Masoned
    constexpr u32 GrayFieldMasoned = 0x71E530AD; // Gray Field Masoned
    constexpr u32 GreenFieldMasoned = 0x367CB323; // Green Field Masoned
    constexpr u32 LightBlueFieldMasoned = 0xEC88D7E8; // Light Blue Field Masoned
    constexpr u32 LimeFieldMasoned = 0x015B5F25; // Lime Field Masoned
    constexpr u32 MagentaFieldMasoned = 0x3BCF2615; // Magenta Field Masoned
    constexpr u32 OrangeFieldMasoned = 0xCFC61AB0; // Orange Field Masoned
    constexpr u32 PinkFieldMasoned = 0x7F35AF44; // Pink Field Masoned
    constexpr u32 PurpleFieldMasoned = 0x70DA3A76; // Purple Field Masoned
    constexpr u32 RedFieldMasoned = 0x95CE94DB; // Red Field Masoned
    constexpr u32 LightGrayFieldMasoned = 0x4B9B71D7; // Light Gray Field Masoned
    constexpr u32 WhiteFieldMasoned = 0x6DEB3FA7; // White Field Masoned
    constexpr u32 YellowFieldMasoned = 0xCACE927C; // Yellow Field Masoned
    constexpr u32 BrownBanner = 0x1CFA436B; // Brown Banner
    constexpr u32 BlackRoundel = 0xDF692FD7; // Black Roundel
    constexpr u32 BlueRoundel = 0xCD7F4D16; // Blue Roundel
    constexpr u32 BrownRoundel = 0x808FAB9E; // Brown Roundel
    constexpr u32 CyanRoundel = 0x40AB1C7D; // Cyan Roundel
    constexpr u32 GrayRoundel = 0x6A458465; // Gray Roundel
    constexpr u32 GreenRoundel = 0xA300C85B; // Green Roundel
    constexpr u32 LightBlueRoundel = 0x2EF9DEB0; // Light Blue Roundel
    constexpr u32 LimeRoundel = 0xE5FA0C1D; // Lime Roundel
    constexpr u32 MagentaRoundel = 0x955F2F7D; // Magenta Roundel
    constexpr u32 OrangeRoundel = 0x731FE2B8; // Orange Roundel
    constexpr u32 PinkRoundel = 0xD47B76DC; // Pink Roundel
    constexpr u32 PurpleRoundel = 0x5FFDA08E; // Purple Roundel
    constexpr u32 RedRoundel = 0xD1372D03; // Red Roundel
    constexpr u32 LightGrayRoundel = 0x9280CB1F; // Light Gray Roundel
    constexpr u32 WhiteRoundel = 0x2331DE8F; // White Roundel
    constexpr u32 YellowRoundel = 0x09B3BF64; // Yellow Roundel
    constexpr u32 BlackCreeperCharge = 0xEDF2C0C3; // Black Creeper Charge
    constexpr u32 BlueCreeperCharge = 0x5BDD3C82; // Blue Creeper Charge
    constexpr u32 BrownCreeperCharge = 0x5700ED0A; // Brown Creeper Charge
    constexpr u32 CyanCreeperCharge = 0x89F64969; // Cyan Creeper Charge
    constexpr u32 GrayCreeperCharge = 0x24A51EF1; // Gray Creeper Charge
    constexpr u32 GreenCreeperCharge = 0x21BFD7EF; // Green Creeper Charge
    constexpr u32 LightBlueCreeperCharge = 0xCCF5A0A4; // Light Blue Creeper Charge
    constexpr u32 LimeCreeperCharge = 0x67B214A9; // Lime Creeper Charge
    constexpr u32 MagentaCreeperCharge = 0x2C493F49; // Magenta Creeper Charge
    constexpr u32 OrangeCreeperCharge = 0x8EA8E8EC; // Orange Creeper Charge
    constexpr u32 PinkCreeperCharge = 0x036361C8; // Pink Creeper Charge
    constexpr u32 PurpleCreeperCharge = 0x8767C71A; // Purple Creeper Charge
    constexpr u32 RedCreeperCharge = 0xF9C45117; // Red Creeper Charge
    constexpr u32 LightGrayCreeperCharge = 0x41E3AACB; // Light Gray Creeper Charge
    constexpr u32 WhiteCreeperCharge = 0x3AA898BB; // White Creeper Charge
    constexpr u32 YellowCreeperCharge = 0x408885F0; // Yellow Creeper Charge
    constexpr u32 BlackSaltire = 0xE3917033; // Black Saltire
    constexpr u32 BlueSaltire = 0x21050C52; // Blue Saltire
    constexpr u32 BrownSaltire = 0x095D46FA; // Brown Saltire
    constexpr u32 CyanSaltire = 0xDF64FA79; // Cyan Saltire
    constexpr u32 GraySaltire = 0x5082A5A1; // Gray Saltire
    constexpr u32 GreenSaltire = 0xC3848B7F; // Green Saltire
    constexpr u32 LightBlueSaltire = 0xD5BC93D4; // Light Blue Saltire
    constexpr u32 LimeSaltire = 0x1C481E19; // Lime Saltire
    constexpr u32 MagentaSaltire = 0x24A298D9; // Magenta Saltire
    constexpr u32 OrangeSaltire = 0xA51279BC; // Orange Saltire
    constexpr u32 PinkSaltire = 0x23246418; // Pink Saltire
    constexpr u32 PurpleSaltire = 0x7952BF0A; // Purple Saltire
    constexpr u32 RedSaltire = 0x2D7E9367; // Red Saltire
    constexpr u32 LightGraySaltire = 0xD59FA1DB; // Light Gray Saltire
    constexpr u32 WhiteSaltire = 0x6912246B; // White Saltire
    constexpr u32 YellowSaltire = 0x5DC647A0; // Yellow Saltire
    constexpr u32 BlackBordureIndented = 0x8F886177; // Black Bordure Indented
    constexpr u32 BlueBordureIndented = 0x9F83B1B6; // Blue Bordure Indented
    constexpr u32 BrownBordureIndented = 0x6F4FF93E; // Brown Bordure Indented
    constexpr u32 CyanBordureIndented = 0xFB58A41D; // Cyan Bordure Indented
    constexpr u32 GrayBordureIndented = 0x674BC585; // Gray Bordure Indented
    constexpr u32 GreenBordureIndented = 0x92F86A7B; // Green Bordure Indented
    constexpr u32 LightBlueBordureIndented = 0xA64982D0; // Light Blue Bordure Indented
    constexpr u32 LimeBordureIndented = 0xCCE0C4BD; // Lime Bordure Indented
    constexpr u32 MagentaBordureIndented = 0x4FEEAA1D; // Magenta Bordure Indented
    constexpr u32 OrangeBordureIndented = 0x8B3FD5D8; // Orange Bordure Indented
    constexpr u32 PinkBordureIndented = 0xE520F77C; // Pink Bordure Indented
    constexpr u32 PurpleBordureIndented = 0xB54F6EAE; // Purple Bordure Indented
    constexpr u32 RedBordureIndented = 0x13734423; // Red Bordure Indented
    constexpr u32 LightGrayBordureIndented = 0xBA12DD3F; // Light Gray Bordure Indented
    constexpr u32 WhiteBordureIndented = 0x63BD04AF; // White Bordure Indented
    constexpr u32 YellowBordureIndented = 0xBDA0EF04; // Yellow Bordure Indented
    constexpr u32 CyanBanner = 0xEDF02648; // Cyan Banner
    constexpr u32 BlackPerBendSinister = 0x75DE696E; // Black Per Bend Sinister
    constexpr u32 BluePerBendSinister = 0x3BB54A17; // Blue Per Bend Sinister
    constexpr u32 BrownPerBendSinister = 0x4F3F5497; // Brown Per Bend Sinister
    constexpr u32 CyanPerBendSinister = 0x9F511B8C; // Cyan Per Bend Sinister
    constexpr u32 GrayPerBendSinister = 0xC1463AA4; // Gray Per Bend Sinister
    constexpr u32 GreenPerBendSinister = 0x77EF6162; // Green Per Bend Sinister
    constexpr u32 LightBluePerBendSinister = 0x0D3207D9; // Light Blue Per Bend Sinister
    constexpr u32 LimePerBendSinister = 0xCEC87B6C; // Lime Per Bend Sinister
    constexpr u32 MagentaPerBendSinister = 0xEDB33EE4; // Magenta Per Bend Sinister
    constexpr u32 OrangePerBendSinister = 0xD6A7F2E9; // Orange Per Bend Sinister
    constexpr u32 PinkPerBendSinister = 0xCA14ABFD; // Pink Per Bend Sinister
    constexpr u32 PurplePerBendSinister = 0xD53F2C1F; // Purple Per Bend Sinister
    constexpr u32 RedPerBendSinister = 0x01B46B1A; // Red Per Bend Sinister
    constexpr u32 LightGrayPerBendSinister = 0x3718FD4E; // Light Gray Per Bend Sinister
    constexpr u32 WhitePerBendSinister = 0x87F9EAF6; // White Per Bend Sinister
    constexpr u32 YellowPerBendSinister = 0x37347D65; // Yellow Per Bend Sinister
    constexpr u32 BlackPerBend = 0x3DF7F9DD; // Black Per Bend
    constexpr u32 BluePerBend = 0xEBD5F6BC; // Blue Per Bend
    constexpr u32 BrownPerBend = 0x8E6CBAE4; // Brown Per Bend
    constexpr u32 CyanPerBend = 0x0F589AB7; // Cyan Per Bend
    constexpr u32 GrayPerBend = 0x7B2416AF; // Gray Per Bend
    constexpr u32 GreenPerBend = 0x5F38A9B1; // Green Per Bend
    constexpr u32 LightBluePerBend = 0x101D935A; // Light Blue Per Bend
    constexpr u32 LimePerBend = 0x409DA247; // Lime Per Bend
    constexpr u32 MagentaPerBend = 0x961A3987; // Magenta Per Bend
    constexpr u32 OrangePerBend = 0xABE8D052; // Orange Per Bend
    constexpr u32 PinkPerBend = 0xED4F4C46; // Pink Per Bend
    constexpr u32 PurplePerBend = 0x7A79BD74; // Purple Per Bend
    constexpr u32 RedPerBend = 0xE029DBC9; // Red Per Bend
    constexpr u32 LightGrayPerBend = 0xEDB33295; // Light Gray Per Bend
    constexpr u32 WhitePerBend = 0x5FCFA555; // White Per Bend
    constexpr u32 YellowPerBend = 0x7DB47B7E; // Yellow Per Bend
    constexpr u32 BlackPerBendInverted = 0x19D22BBC; // Black Per Bend Inverted
    constexpr u32 BluePerBendInverted = 0x74FB0595; // Blue Per Bend Inverted
    constexpr u32 BrownPerBendInverted = 0xCE424885; // Brown Per Bend Inverted
    constexpr u32 CyanPerBendInverted = 0xA603710E; // Cyan Per Bend Inverted
    constexpr u32 GrayPerBendInverted = 0x0B549B86; // Gray Per Bend Inverted
    constexpr u32 GreenPerBendInverted = 0x63703AD0; // Green Per Bend Inverted
    constexpr u32 LightBluePerBendInverted = 0x0FA2A66B; // Light Blue Per Bend Inverted
    constexpr u32 LimePerBendInverted = 0x67742AEE; // Lime Per Bend Inverted
    constexpr u32 MagentaPerBendInverted = 0x53F19D76; // Magenta Per Bend Inverted
    constexpr u32 OrangePerBendInverted = 0x6E42DA2B; // Orange Per Bend Inverted
    constexpr u32 PinkPerBendInverted = 0xCEFB9CDF; // Pink Per Bend Inverted
    constexpr u32 PurplePerBendInverted = 0x6BA346BD; // Purple Per Bend Inverted
    constexpr u32 RedPerBendInverted = 0xD28F3A68; // Red Per Bend Inverted
    constexpr u32 LightGrayPerBendInverted = 0x48C974EC; // Light Gray Per Bend Inverted
    constexpr u32 WhitePerBendInverted = 0x30563AC4; // White Per Bend Inverted
    constexpr u32 YellowPerBendInverted = 0x2729BFC7; // Yellow Per Bend Inverted
    constexpr u32 BlackPerBendSinisterInverted = 0x1D17B99F; // Black Per Bend Sinister Inverted
    constexpr u32 BluePerBendSinisterInverted = 0xFC26E82E; // Blue Per Bend Sinister Inverted
    constexpr u32 BrownPerBendSinisterInverted = 0x131DA606; // Brown Per Bend Sinister Inverted
    constexpr u32 CyanPerBendSinisterInverted = 0xB960B5A5; // Cyan Per Bend Sinister Inverted
    constexpr u32 GrayPerBendSinisterInverted = 0x898581DD; // Gray Per Bend Sinister Inverted
    constexpr u32 GreenPerBendSinisterInverted = 0xF4A77533; // Green Per Bend Sinister Inverted
    constexpr u32 LightBluePerBendSinisterInverted = 0x3CB77758; // Light Blue Per Bend Sinister Inverted
    constexpr u32 LimePerBendSinisterInverted = 0xCAD170D5; // Lime Per Bend Sinister Inverted
    constexpr u32 MagentaPerBendSinisterInverted = 0x3A544A65; // Magenta Per Bend Sinister Inverted
    constexpr u32 OrangePerBendSinisterInverted = 0xDD1F3D00; // Orange Per Bend Sinister Inverted
    constexpr u32 PinkPerBendSinisterInverted = 0x88E09D54; // Pink Per Bend Sinister Inverted
    constexpr u32 PurplePerBendSinisterInverted = 0x92DAC966; // Purple Per Bend Sinister Inverted
    constexpr u32 RedPerBendSinisterInverted = 0x58C338EB; // Red Per Bend Sinister Inverted
    constexpr u32 LightGrayPerBendSinisterInverted = 0x53931467; // Light Gray Per Bend Sinister Inverted
    constexpr u32 WhitePerBendSinisterInverted = 0xEDFB6397; // White Per Bend Sinister Inverted
    constexpr u32 YellowPerBendSinisterInverted = 0x73C1DCEC; // Yellow Per Bend Sinister Inverted
    constexpr u32 BlackFlowerCharge = 0xDAD35680; // Black Flower Charge
    constexpr u32 BlueFlowerCharge = 0xC42AFF89; // Blue Flower Charge
    constexpr u32 BrownFlowerCharge = 0xE7413949; // Brown Flower Charge
    constexpr u32 CyanFlowerCharge = 0x6CD7C112; // Cyan Flower Charge
    constexpr u32 GrayFlowerCharge = 0x9CB2F4DA; // Gray Flower Charge
    constexpr u32 GreenFlowerCharge = 0x014D5B6C; // Green Flower Charge
    constexpr u32 LightBlueFlowerCharge = 0x2C796417; // Light Blue Flower Charge
    constexpr u32 LimeFlowerCharge = 0x26792382; // Lime Flower Charge
    constexpr u32 MagentaFlowerCharge = 0xC94EC25A; // Magenta Flower Charge
    constexpr u32 OrangeFlowerCharge = 0xE957DEB7; // Orange Flower Charge
    constexpr u32 PinkFlowerCharge = 0x21F1D5D3; // Pink Flower Charge
    constexpr u32 PurpleFlowerCharge = 0xD213D291; // Purple Flower Charge
    constexpr u32 RedFlowerCharge = 0xBFB7ADB4; // Red Flower Charge
    constexpr u32 LightGrayFlowerCharge = 0xF2085AD0; // Light Gray Flower Charge
    constexpr u32 WhiteFlowerCharge = 0x2F16A7E8; // White Flower Charge
    constexpr u32 YellowFlowerCharge = 0x12F5D30B; // Yellow Flower Charge
    constexpr u32 BlackGradient = 0xEACFC9E3; // Black Gradient
    constexpr u32 BlueGradient = 0x3F2ACD22; // Blue Gradient
    constexpr u32 BrownGradient = 0x52A0C1AA; // Brown Gradient
    constexpr u32 CyanGradient = 0x80E31989; // Cyan Gradient
    constexpr u32 GrayGradient = 0x5CAD7411; // Gray Gradient
    constexpr u32 GreenGradient = 0x69DC798F; // Green Gradient
    constexpr u32 LightBlueGradient = 0xFABC55C4; // Light Blue Gradient
    constexpr u32 LimeGradient = 0x5E9EE4C9; // Lime Gradient
    constexpr u32 MagentaGradient = 0x4B28FAE9; // Magenta Gradient
    constexpr u32 OrangeGradient = 0x7756300C; // Orange Gradient
    constexpr u32 PinkGradient = 0x3B6BB6E8; // Pink Gradient
    constexpr u32 PurpleGradient = 0xD848C5BA; // Purple Gradient
    constexpr u32 RedGradient = 0x80E75C37; // Red Gradient
    constexpr u32 LightGrayGradient = 0xF629AC6B; // Light Gray Gradient
    constexpr u32 BlackBaseGradient = 0x09046D09; // Black Base Gradient
    constexpr u32 BlueBaseGradient = 0x694FF6A8; // Blue Base Gradient
    constexpr u32 BrownBaseGradient = 0x2DA7F750; // Brown Base Gradient
    constexpr u32 CyanBaseGradient = 0xA9633FA3; // Cyan Base Gradient
    constexpr u32 GrayBaseGradient = 0x6DAF17BB; // Gray Base Gradient
    constexpr u32 GreenBaseGradient = 0x911A0945; // Green Base Gradient
    constexpr u32 LightBlueBaseGradient = 0xC234264E; // Light Blue Base Gradient
    constexpr u32 LimeBaseGradient = 0xA524C293; // Lime Base Gradient
    constexpr u32 MagentaBaseGradient = 0xCC72A493; // Magenta Base Gradient
    constexpr u32 OrangeBaseGradient = 0xB8F20686; // Orange Base Gradient
    constexpr u32 PinkBaseGradient = 0xEA4474B2; // Pink Base Gradient
    constexpr u32 PurpleBaseGradient = 0xAA9B0D80; // Purple Base Gradient
    constexpr u32 RedBaseGradient = 0x6A4DF4DD; // Red Base Gradient
    constexpr u32 LightGrayBaseGradient = 0xA7ABFA81; // Light Gray Base Gradient
    constexpr u32 WhiteBaseGradient = 0xBE562F81; // White Base Gradient
    constexpr u32 YellowBaseGradient = 0xE194DE8A; // Yellow Base Gradient
    constexpr u32 WhiteGradient = 0x13312EDB; // White Gradient
    constexpr u32 YellowGradient = 0xCF3CE010; // Yellow Gradient
    constexpr u32 GrayBanner = 0x14B8E590; // Gray Banner
    constexpr u32 GreenBanner = 0x4F351346; // Green Banner
    constexpr u32 BlackPerFess = 0x730E95E7; // Black Per Fess
    constexpr u32 BluePerFess = 0x3D4136C6; // Blue Per Fess
    constexpr u32 BlackPerFessInverted = 0xC3953E47; // Black Per Fess Inverted
    constexpr u32 BluePerFessInverted = 0x3EF49C26; // Blue Per Fess Inverted
    constexpr u32 BrownPerFessInverted = 0x931BBB8E; // Brown Per Fess Inverted
    constexpr u32 CyanPerFessInverted = 0x0CFD164D; // Cyan Per Fess Inverted
    constexpr u32 GrayPerFessInverted = 0xA2816215; // Gray Per Fess Inverted
    constexpr u32 GreenPerFessInverted = 0xF11A9B2B; // Green Per Fess Inverted
    constexpr u32 LightBluePerFessInverted = 0x458A9760; // Light Blue Per Fess Inverted
    constexpr u32 LimePerFessInverted = 0x26EB7C8D; // Lime Per Fess Inverted
    constexpr u32 MagentaPerFessInverted = 0xF4B55ECD; // Magenta Per Fess Inverted
    constexpr u32 OrangePerFessInverted = 0xA6EE0F48; // Orange Per Fess Inverted
    constexpr u32 PinkPerFessInverted = 0xC05B96EC; // Pink Per Fess Inverted
    constexpr u32 PurplePerFessInverted = 0xEFF4C1FE; // Purple Per Fess Inverted
    constexpr u32 RedPerFessInverted = 0x375E2293; // Red Per Fess Inverted
    constexpr u32 LightGrayPerFessInverted = 0x5BD3F06F; // Light Gray Per Fess Inverted
    constexpr u32 WhitePerFessInverted = 0xD3DB3C3F; // White Per Fess Inverted
    constexpr u32 YellowPerFessInverted = 0x2530A714; // Yellow Per Fess Inverted
    constexpr u32 BrownPerFess = 0x974FD7AE; // Brown Per Fess
    constexpr u32 CyanPerFess = 0x4B28016D; // Cyan Per Fess
    constexpr u32 GrayPerFess = 0x9F90C835; // Gray Per Fess
    constexpr u32 GreenPerFess = 0xB439124B; // Green Per Fess
    constexpr u32 LightBluePerFess = 0xF4D6AB00; // Light Blue Per Fess
    constexpr u32 LimePerFess = 0x651667AD; // Lime Per Fess
    constexpr u32 MagentaPerFess = 0xB5944C6D; // Magenta Per Fess
    constexpr u32 OrangePerFess = 0xEC2088E8; // Orange Per Fess
    constexpr u32 PinkPerFess = 0x3FA2070C; // Pink Per Fess
    constexpr u32 PurplePerFess = 0x9D5AF31E; // Purple Per Fess
    constexpr u32 RedPerFess = 0xD93D10B3; // Red Per Fess
    constexpr u32 LightGrayPerFess = 0x4060138F; // Light Gray Per Fess
    constexpr u32 WhitePerFess = 0x5C85B7DF; // White Per Fess
    constexpr u32 YellowPerFess = 0x106A33B4; // Yellow Per Fess
    constexpr u32 BlackPerPale = 0x65BF7473; // Black Per Pale
    constexpr u32 BluePerPale = 0x80024F12; // Blue Per Pale
    constexpr u32 BrownPerPale = 0x5F57FA3A; // Brown Per Pale
    constexpr u32 CyanPerPale = 0x3E623D39; // Cyan Per Pale
    constexpr u32 GrayPerPale = 0x02FD7861; // Gray Per Pale
    constexpr u32 GreenPerPale = 0xD350C1BF; // Green Per Pale
    constexpr u32 LightBluePerPale = 0x534E9714; // Light Blue Per Pale
    constexpr u32 LimePerPale = 0xA4FE48D9; // Lime Per Pale
    constexpr u32 MagentaPerPale = 0x9B58A419; // Magenta Per Pale
    constexpr u32 OrangePerPale = 0xD5337C7C; // Orange Per Pale
    constexpr u32 PinkPerPale = 0xD59F36D8; // Pink Per Pale
    constexpr u32 PurplePerPale = 0xAEFB40CA; // Purple Per Pale
    constexpr u32 RedPerPale = 0xCB637EA7; // Red Per Pale
    constexpr u32 BlackPerPaleInverted = 0x8FAF4654; // Black Per Pale Inverted
    constexpr u32 BluePerPaleInverted = 0x9EABEB1D; // Blue Per Pale Inverted
    constexpr u32 BrownPerPaleInverted = 0x90C0045D; // Brown Per Pale Inverted
    constexpr u32 CyanPerPaleInverted = 0xAC5D8766; // Cyan Per Pale Inverted
    constexpr u32 GrayPerPaleInverted = 0x577F2E0E; // Gray Per Pale Inverted
    constexpr u32 GreenPerPaleInverted = 0x70EFC918; // Green Per Pale Inverted
    constexpr u32 LightBluePerPaleInverted = 0xC7D46363; // Light Blue Per Pale Inverted
    constexpr u32 LimePerPaleInverted = 0x19E70EB6; // Lime Per Pale Inverted
    constexpr u32 MagentaPerPaleInverted = 0xF23AED0E; // Magenta Per Pale Inverted
    constexpr u32 OrangePerPaleInverted = 0xA0A75183; // Orange Per Pale Inverted
    constexpr u32 PinkPerPaleInverted = 0xD432A667; // Pink Per Pale Inverted
    constexpr u32 PurplePerPaleInverted = 0xA9471745; // Purple Per Pale Inverted
    constexpr u32 RedPerPaleInverted = 0xDAE63CA0; // Red Per Pale Inverted
    constexpr u32 LightGrayPerPaleInverted = 0x12A4E4A4; // Light Gray Per Pale Inverted
    constexpr u32 WhitePerPaleInverted = 0x5E02ADFC; // White Per Pale Inverted
    constexpr u32 YellowPerPaleInverted = 0x0355A37F; // Yellow Per Pale Inverted
    constexpr u32 LightGrayPerPale = 0x025B649B; // Light Gray Per Pale
    constexpr u32 WhitePerPale = 0x78DE5AAB; // White Per Pale
    constexpr u32 YellowPerPale = 0x8A820A60; // Yellow Per Pale
    constexpr u32 LightBlueBanner = 0x229F6475; // Light Blue Banner
    constexpr u32 LimeBanner = 0x68E443A8; // Lime Banner
    constexpr u32 MagentaBanner = 0x2D8936F0; // Magenta Banner
    constexpr u32 BlackThing = 0x804ABAE5; // Black Thing
    constexpr u32 BlueThing = 0x54012854; // Blue Thing
    constexpr u32 BrownThing = 0xEA1E5D4C; // Brown Thing
    constexpr u32 CyanThing = 0xBF9B6E3F; // Cyan Thing
    constexpr u32 GrayThing = 0x9710F347; // Gray Thing
    constexpr u32 GreenThing = 0xB66B6709; // Green Thing
    constexpr u32 LightBlueThing = 0xD71E94C2; // Light Blue Thing
    constexpr u32 LimeThing = 0x0CFD605F; // Lime Thing
    constexpr u32 MagentaThing = 0x5B1388CF; // Magenta Thing
    constexpr u32 OrangeThing = 0xFA0BDF7A; // Orange Thing
    constexpr u32 PinkThing = 0x52D7B87E; // Pink Thing
    constexpr u32 PurpleThing = 0xBCEEA1AC; // Purple Thing
    constexpr u32 RedThing = 0x76568691; // Red Thing
    constexpr u32 LightGrayThing = 0xE3FC65BD; // Light Gray Thing
    constexpr u32 WhiteThing = 0xB1602D9D; // White Thing
    constexpr u32 YellowThing = 0xE4B96046; // Yellow Thing
    constexpr u32 OrangeBanner = 0x5DFD4C85; // Orange Banner
    constexpr u32 PinkBanner = 0x790B8991; // Pink Banner
    constexpr u32 PurpleBanner = 0x41B3F8E3; // Purple Banner
    constexpr u32 RedBanner = 0x3BF1162E; // Red Banner
    constexpr u32 BlackLozenge = 0xC8260EB9; // Black Lozenge
    constexpr u32 BlueLozenge = 0xE68B5678; // Blue Lozenge
    constexpr u32 BrownLozenge = 0x5D67BA40; // Brown Lozenge
    constexpr u32 CyanLozenge = 0x81756A33; // Cyan Lozenge
    constexpr u32 GrayLozenge = 0x310C8BEB; // Gray Lozenge
    constexpr u32 GreenLozenge = 0x538802D5; // Green Lozenge
    constexpr u32 LightBlueLozenge = 0x970EC4FE; // Light Blue Lozenge
    constexpr u32 LimeLozenge = 0x1F52A943; // Lime Lozenge
    constexpr u32 MagentaLozenge = 0x50FD7FE3; // Magenta Lozenge
    constexpr u32 OrangeLozenge = 0x991D28D6; // Orange Lozenge
    constexpr u32 PinkLozenge = 0x0CE0C202; // Pink Lozenge
    constexpr u32 PurpleLozenge = 0xAF3289F0; // Purple Lozenge
    constexpr u32 RedLozenge = 0x967585AD; // Red Lozenge
    constexpr u32 LightGrayLozenge = 0x15D292D1; // Light Gray Lozenge
    constexpr u32 WhiteLozenge = 0x635BF8B1; // White Lozenge
    constexpr u32 YellowLozenge = 0x60CF943A; // Yellow Lozenge
    constexpr u32 LightGrayBanner = 0xFB092C3A; // Light Gray Banner
    constexpr u32 BlackSkullCharge = 0x715E58C8; // Black Skull Charge
    constexpr u32 BlueSkullCharge = 0x7EF4B8A1; // Blue Skull Charge
    constexpr u32 BrownSkullCharge = 0xE77ABA11; // Brown Skull Charge
    constexpr u32 CyanSkullCharge = 0xD79D8D5A; // Cyan Skull Charge
    constexpr u32 GraySkullCharge = 0x5590C372; // Gray Skull Charge
    constexpr u32 GreenSkullCharge = 0x6EA75AC4; // Green Skull Charge
    constexpr u32 LightBlueSkullCharge = 0x6F02BE3F; // Light Blue Skull Charge
    constexpr u32 LimeSkullCharge = 0x388EC61A; // Lime Skull Charge
    constexpr u32 MagentaSkullCharge = 0x50E86DA2; // Magenta Skull Charge
    constexpr u32 OrangeSkullCharge = 0x282AFDFF; // Orange Skull Charge
    constexpr u32 PinkSkullCharge = 0x4E7D6EEB; // Pink Skull Charge
    constexpr u32 PurpleSkullCharge = 0xBD1F6329; // Purple Skull Charge
    constexpr u32 RedSkullCharge = 0xBAB72D9C; // Red Skull Charge
    constexpr u32 LightGraySkullCharge = 0x4E409FF8; // Light Gray Skull Charge
    constexpr u32 WhiteSkullCharge = 0x485BE550; // White Skull Charge
    constexpr u32 YellowSkullCharge = 0xD11E30F3; // Yellow Skull Charge
    constexpr u32 BlackPaly = 0xF4955B9F; // Black Paly
    constexpr u32 BluePaly = 0x4D2F3A2E; // Blue Paly
    constexpr u32 BrownPaly = 0xEA9B4806; // Brown Paly
    constexpr u32 CyanPaly = 0x0A6907A5; // Cyan Paly
    constexpr u32 GrayPaly = 0xDA8DD3DD; // Gray Paly
    constexpr u32 GreenPaly = 0xCC251733; // Green Paly
    constexpr u32 LightBluePaly = 0x05075958; // Light Blue Paly
    constexpr u32 LimePaly = 0x1BD9C2D5; // Lime Paly
    constexpr u32 MagentaPaly = 0x4C8A0C65; // Magenta Paly
    constexpr u32 OrangePaly = 0x62DAAF00; // Orange Paly
    constexpr u32 PinkPaly = 0xD9E8EF54; // Pink Paly
    constexpr u32 PurplePaly = 0x18963B66; // Purple Paly
    constexpr u32 RedPaly = 0x9ECABAEB; // Red Paly
    constexpr u32 LightGrayPaly = 0xD94E8667; // Light Gray Paly
    constexpr u32 WhitePaly = 0xC5790597; // White Paly
    constexpr u32 YellowPaly = 0xF97D4EEC; // Yellow Paly
    constexpr u32 BlackBaseDexterCanton = 0xEBB64268; // Black Base Dexter Canton
    constexpr u32 BlueBaseDexterCanton = 0x02AAACC1; // Blue Base Dexter Canton
    constexpr u32 BrownBaseDexterCanton = 0x60956F31; // Brown Base Dexter Canton
    constexpr u32 CyanBaseDexterCanton = 0x1B7530FA; // Cyan Base Dexter Canton
    constexpr u32 GrayBaseDexterCanton = 0xDBC12092; // Gray Base Dexter Canton
    constexpr u32 GreenBaseDexterCanton = 0xEA3C78E4; // Green Base Dexter Canton
    constexpr u32 LightBlueBaseDexterCanton = 0xC4718EDF; // Light Blue Base Dexter Canton
    constexpr u32 LimeBaseDexterCanton = 0xA762663A; // Lime Base Dexter Canton
    constexpr u32 MagentaBaseDexterCanton = 0xCBE21042; // Magenta Base Dexter Canton
    constexpr u32 OrangeBaseDexterCanton = 0x484EBC1F; // Orange Base Dexter Canton
    constexpr u32 PinkBaseDexterCanton = 0xBFD1580B; // Pink Base Dexter Canton
    constexpr u32 PurpleBaseDexterCanton = 0x2E1A1BC9; // Purple Base Dexter Canton
    constexpr u32 RedBaseDexterCanton = 0x380AF1BC; // Red Base Dexter Canton
    constexpr u32 LightGrayBaseDexterCanton = 0x01941218; // Light Gray Base Dexter Canton
    constexpr u32 WhiteBaseDexterCanton = 0xEDAFCB70; // White Base Dexter Canton
    constexpr u32 YellowBaseDexterCanton = 0x9F771693; // Yellow Base Dexter Canton
    constexpr u32 BlackBaseSinisterCanton = 0x999E5B0B; // Black Base Sinister Canton
    constexpr u32 BlueBaseSinisterCanton = 0xF3FAB71A; // Blue Base Sinister Canton
    constexpr u32 BrownBaseSinisterCanton = 0x0DDB17B2; // Brown Base Sinister Canton
    constexpr u32 CyanBaseSinisterCanton = 0x97B968D1; // Cyan Base Sinister Canton
    constexpr u32 GrayBaseSinisterCanton = 0xC2D8FA29; // Gray Base Sinister Canton
    constexpr u32 GreenBaseSinisterCanton = 0x26163E07; // Green Base Sinister Canton
    constexpr u32 LightBlueBaseSinisterCanton = 0x42FEDA4C; // Light Blue Base Sinister Canton
    constexpr u32 LimeBaseSinisterCanton = 0x74E3D3E1; // Lime Base Sinister Canton
    constexpr u32 MagentaBaseSinisterCanton = 0xC939DDB1; // Magenta Base Sinister Canton
    constexpr u32 OrangeBaseSinisterCanton = 0xF01E7E74; // Orange Base Sinister Canton
    constexpr u32 PinkBaseSinisterCanton = 0x39D27940; // Pink Base Sinister Canton
    constexpr u32 PurpleBaseSinisterCanton = 0x69D5F132; // Purple Base Sinister Canton
    constexpr u32 RedBaseSinisterCanton = 0x8204F8FF; // Red Base Sinister Canton
    constexpr u32 LightGrayBaseSinisterCanton = 0x9133DBD3; // Light Gray Base Sinister Canton
    constexpr u32 WhiteBaseSinisterCanton = 0x1D715543; // White Base Sinister Canton
    constexpr u32 YellowBaseSinisterCanton = 0xF9EB1E78; // Yellow Base Sinister Canton
    constexpr u32 BlackChiefDexterCanton = 0xBFEECD84; // Black Chief Dexter Canton
    constexpr u32 BlueChiefDexterCanton = 0xEC355BAD; // Blue Chief Dexter Canton
    constexpr u32 BrownChiefDexterCanton = 0x8652914D; // Brown Chief Dexter Canton
    constexpr u32 CyanChiefDexterCanton = 0x32572176; // Cyan Chief Dexter Canton
    constexpr u32 GrayChiefDexterCanton = 0x098A3B7E; // Gray Chief Dexter Canton
    constexpr u32 GreenChiefDexterCanton = 0x7C478E28; // Green Chief Dexter Canton
    constexpr u32 LightBlueChiefDexterCanton = 0x5B826B53; // Light Blue Chief Dexter Canton
    constexpr u32 LimeChiefDexterCanton = 0x17006866; // Lime Chief Dexter Canton
    constexpr u32 MagentaChiefDexterCanton = 0xB6031ADE; // Magenta Chief Dexter Canton
    constexpr u32 OrangeChiefDexterCanton = 0x62735193; // Orange Chief Dexter Canton
    constexpr u32 PinkChiefDexterCanton = 0x501C1877; // Pink Chief Dexter Canton
    constexpr u32 PurpleChiefDexterCanton = 0xE84D2075; // Purple Chief Dexter Canton
    constexpr u32 RedChiefDexterCanton = 0xBA0D3C30; // Red Chief Dexter Canton
    constexpr u32 LightGrayChiefDexterCanton = 0x0B6FCBF4; // Light Gray Chief Dexter Canton
    constexpr u32 WhiteChiefDexterCanton = 0xFF06A3EC; // White Chief Dexter Canton
    constexpr u32 YellowChiefDexterCanton = 0x46658F2F; // Yellow Chief Dexter Canton
    constexpr u32 BlackChiefSinisterCanton = 0x5F64E217; // Black Chief Sinister Canton
    constexpr u32 BlueChiefSinisterCanton = 0x07DB0DD6; // Blue Chief Sinister Canton
    constexpr u32 BrownChiefSinisterCanton = 0x2A5005DE; // Brown Chief Sinister Canton
    constexpr u32 CyanChiefSinisterCanton = 0x4ED38C3D; // Cyan Chief Sinister Canton
    constexpr u32 GrayChiefSinisterCanton = 0xD0E05625; // Gray Chief Sinister Canton
    constexpr u32 GreenChiefSinisterCanton = 0x78F4739B; // Green Chief Sinister Canton
    constexpr u32 LightBlueChiefSinisterCanton = 0xFDEAF2F0; // Light Blue Chief Sinister Canton
    constexpr u32 LimeChiefSinisterCanton = 0x2055CCDD; // Lime Chief Sinister Canton
    constexpr u32 MagentaChiefSinisterCanton = 0x67DE20BD; // Magenta Chief Sinister Canton
    constexpr u32 OrangeChiefSinisterCanton = 0xF729DB78; // Orange Chief Sinister Canton
    constexpr u32 PinkChiefSinisterCanton = 0x389BDF9C; // Pink Chief Sinister Canton
    constexpr u32 PurpleChiefSinisterCanton = 0x882FF74E; // Purple Chief Sinister Canton
    constexpr u32 RedChiefSinisterCanton = 0x7600A743; // Red Chief Sinister Canton
    constexpr u32 LightGrayChiefSinisterCanton = 0x32F498DF; // Light Gray Chief Sinister Canton
    constexpr u32 WhiteChiefSinisterCanton = 0xC40579CF; // White Chief Sinister Canton
    constexpr u32 YellowChiefSinisterCanton = 0x8DBDB824; // Yellow Chief Sinister Canton
    constexpr u32 BlackCross = 0x5494FCE2; // Black Cross
    constexpr u32 BlueCross = 0x329CE9DB; // Blue Cross
    constexpr u32 BrownCross = 0xDB922E8B; // Brown Cross
    constexpr u32 CyanCross = 0x3C7AAB20; // Cyan Cross
    constexpr u32 GrayCross = 0x14451D28; // Gray Cross
    constexpr u32 GreenCross = 0x1B38A50E; // Green Cross
    constexpr u32 LightBlueCross = 0x8D26B1B5; // Light Blue Cross
    constexpr u32 LimeCross = 0x2EBA2330; // Lime Cross
    constexpr u32 MagentaCross = 0xACA09158; // Magenta Cross
    constexpr u32 OrangeCross = 0x41A5A205; // Orange Cross
    constexpr u32 PinkCross = 0xBEE41CC1; // Pink Cross
    constexpr u32 PurpleCross = 0x16A2C523; // Purple Cross
    constexpr u32 RedCross = 0x3A542DB6; // Red Cross
    constexpr u32 LightGrayCross = 0xABE06D02; // Light Gray Cross
    constexpr u32 WhiteCross = 0x4D94DE0A; // White Cross
    constexpr u32 YellowCross = 0x36047F59; // Yellow Cross
    constexpr u32 BlackBaseFess = 0xC430697C; // Black Base Fess
    constexpr u32 BlueBaseFess = 0x1A061DD5; // Blue Base Fess
    constexpr u32 BrownBaseFess = 0x7B1AEF45; // Brown Base Fess
    constexpr u32 CyanBaseFess = 0x774D9A4E; // Cyan Base Fess
    constexpr u32 GrayBaseFess = 0x5CE223C6; // Gray Base Fess
    constexpr u32 GreenBaseFess = 0xAC6F5790; // Green Base Fess
    constexpr u32 LightBlueBaseFess = 0x18D0852B; // Light Blue Base Fess
    constexpr u32 LimeBaseFess = 0xB901B32E; // Lime Base Fess
    constexpr u32 MagentaBaseFess = 0x5EB1A436; // Magenta Base Fess
    constexpr u32 OrangeBaseFess = 0x329A796B; // Orange Base Fess
    constexpr u32 PinkBaseFess = 0x2089251F; // Pink Base Fess
    constexpr u32 PurpleBaseFess = 0x0C15E6FD; // Purple Base Fess
    constexpr u32 RedBaseFess = 0xD6167228; // Red Base Fess
    constexpr u32 LightGrayBaseFess = 0xF331A82C; // Light Gray Base Fess
    constexpr u32 WhiteBaseFess = 0xA80ED184; // White Base Fess
    constexpr u32 YellowBaseFess = 0x7B99FA07; // Yellow Base Fess
    constexpr u32 BlackPale = 0x24BBAF80; // Black Pale
    constexpr u32 BluePale = 0x6B0B7089; // Blue Pale
    constexpr u32 BrownPale = 0x31299249; // Brown Pale
    constexpr u32 CyanPale = 0x13B83212; // Cyan Pale
    constexpr u32 GrayPale = 0x439365DA; // Gray Pale
    constexpr u32 GreenPale = 0x4B35B46C; // Green Pale
    constexpr u32 LightBluePale = 0xA573DD17; // Light Blue Pale
    constexpr u32 LimePale = 0xCD599482; // Lime Pale
    constexpr u32 MagentaPale = 0x2BA3AB5A; // Magenta Pale
    constexpr u32 OrangePale = 0xA60E5FB7; // Orange Pale
    constexpr u32 PinkPale = 0xC8D246D3; // Pink Pale
    constexpr u32 PurplePale = 0x8ECA5391; // Purple Pale
    constexpr u32 RedPale = 0x8DDC76B4; // Red Pale
    constexpr u32 LightGrayPale = 0xAEBEDBD0; // Light Gray Pale
    constexpr u32 WhitePale = 0x78FF00E8; // White Pale
    constexpr u32 YellowPale = 0xCFAC540B; // Yellow Pale
    constexpr u32 BlackBendSinister = 0xA40CB57A; // Black Bend Sinister
    constexpr u32 BlueBendSinister = 0xC88BDA23; // Blue Bend Sinister
    constexpr u32 BrownBendSinister = 0x17D90BA3; // Brown Bend Sinister
    constexpr u32 CyanBendSinister = 0xFFA8FA98; // Cyan Bend Sinister
    constexpr u32 GrayBendSinister = 0xFABD1010; // Gray Bend Sinister
    constexpr u32 GreenBendSinister = 0xD3F49296; // Green Bend Sinister
    constexpr u32 LightBlueBendSinister = 0xCCCE986D; // Light Blue Bend Sinister
    constexpr u32 LimeBendSinister = 0x0F1AD418; // Lime Bend Sinister
    constexpr u32 MagentaBendSinister = 0x73AB4F50; // Magenta Bend Sinister
    constexpr u32 OrangeBendSinister = 0xE4400BFD; // Orange Bend Sinister
    constexpr u32 PinkBendSinister = 0x23AE6889; // Pink Bend Sinister
    constexpr u32 PurpleBendSinister = 0xDE45CD8B; // Purple Bend Sinister
    constexpr u32 RedBendSinister = 0xF7743C4E; // Red Bend Sinister
    constexpr u32 LightGrayBendSinister = 0xE7EF585A; // Light Gray Bend Sinister
    constexpr u32 WhiteBendSinister = 0xED8806C2; // White Bend Sinister
    constexpr u32 YellowBendSinister = 0x97FE52D1; // Yellow Bend Sinister
    constexpr u32 BlackBend = 0xF5BA6569; // Black Bend
    constexpr u32 BlueBend = 0x65289488; // Blue Bend
    constexpr u32 BrownBend = 0x04444730; // Brown Bend
    constexpr u32 CyanBend = 0xBB5B6603; // Cyan Bend
    constexpr u32 GrayBend = 0x29A9651B; // Gray Bend
    constexpr u32 GreenBend = 0xB843FD25; // Green Bend
    constexpr u32 LightBlueBend = 0x81DE2CAE; // Light Blue Bend
    constexpr u32 LimeBend = 0xA23A94F3; // Lime Bend
    constexpr u32 MagentaBend = 0x169C2B73; // Magenta Bend
    constexpr u32 OrangeBend = 0xCECC4E66; // Orange Bend
    constexpr u32 PinkBend = 0xCFFD8A12; // Pink Bend
    constexpr u32 PurpleBend = 0x0190DA60; // Purple Bend
    constexpr u32 RedBend = 0x0E0DF33D; // Red Bend
    constexpr u32 LightGrayBend = 0x772C94E1; // Light Gray Bend
    constexpr u32 WhiteBend = 0xBFEE7BE1; // White Bend
    constexpr u32 YellowBend = 0x9D76396A; // Yellow Bend
    constexpr u32 BlackPaleDexter = 0xA5244D60; // Black Pale Dexter
    constexpr u32 BluePaleDexter = 0x3CDB6E69; // Blue Pale Dexter
    constexpr u32 BrownPaleDexter = 0xDA0DE3A9; // Brown Pale Dexter
    constexpr u32 CyanPaleDexter = 0xFA6A83F2; // Cyan Pale Dexter
    constexpr u32 GrayPaleDexter = 0x156943BA; // Gray Pale Dexter
    constexpr u32 GreenPaleDexter = 0x5AC7324C; // Green Pale Dexter
    constexpr u32 LightBluePaleDexter = 0x81E6AD77; // Light Blue Pale Dexter
    constexpr u32 LimePaleDexter = 0x742D95E2; // Lime Pale Dexter
    constexpr u32 MagentaPaleDexter = 0xA0E7FD3A; // Magenta Pale Dexter
    constexpr u32 OrangePaleDexter = 0x22306997; // Orange Pale Dexter
    constexpr u32 PinkPaleDexter = 0xC5A42133; // Pink Pale Dexter
    constexpr u32 PurplePaleDexter = 0x6470C371; // Purple Pale Dexter
    constexpr u32 RedPaleDexter = 0x24C4EA14; // Red Pale Dexter
    constexpr u32 LightGrayPaleDexter = 0xF3FF3730; // Light Gray Pale Dexter
    constexpr u32 WhitePaleDexter = 0x87534A48; // White Pale Dexter
    constexpr u32 YellowPaleDexter = 0x3FE8ABEB; // Yellow Pale Dexter
    constexpr u32 BlackFess = 0x26B6B68E; // Black Fess
    constexpr u32 BlueFess = 0xFA5BE0B7; // Blue Fess
    constexpr u32 BrownFess = 0xE77DB037; // Brown Fess
    constexpr u32 CyanFess = 0x1F56962C; // Cyan Fess
    constexpr u32 GrayFess = 0x15128444; // Gray Fess
    constexpr u32 GreenFess = 0x6EF04B82; // Green Fess
    constexpr u32 LightBlueFess = 0xCCB7E1F9; // Light Blue Fess
    constexpr u32 LimeFess = 0x3771390C; // Lime Fess
    constexpr u32 MagentaFess = 0x64590784; // Magenta Fess
    constexpr u32 OrangeFess = 0xC7B94B89; // Orange Fess
    constexpr u32 PinkFess = 0x479FBD9D; // Pink Fess
    constexpr u32 PurpleFess = 0xFCBDAC3F; // Purple Fess
    constexpr u32 RedFess = 0xF84C7C3A; // Red Fess
    constexpr u32 LightGrayFess = 0x7637B0EE; // Light Gray Fess
    constexpr u32 WhiteFess = 0x45C9EE16; // White Fess
    constexpr u32 YellowFess = 0x2EED5F85; // Yellow Fess
    constexpr u32 BlackPaleSinister = 0x9C32E3D3; // Black Pale Sinister
    constexpr u32 BluePaleSinister = 0x561D62F2; // Blue Pale Sinister
    constexpr u32 BrownPaleSinister = 0xAAA7DD9A; // Brown Pale Sinister
    constexpr u32 CyanPaleSinister = 0x2959C519; // Cyan Pale Sinister
    constexpr u32 GrayPaleSinister = 0xDA55C0C1; // Gray Pale Sinister
    constexpr u32 GreenPaleSinister = 0xF3A4A89F; // Green Pale Sinister
    constexpr u32 LightBluePaleSinister = 0x57EB3FF4; // Light Blue Pale Sinister
    constexpr u32 LimePaleSinister = 0x927619B9; // Lime Pale Sinister
    constexpr u32 MagentaPaleSinister = 0xF0E7A5F9; // Magenta Pale Sinister
    constexpr u32 OrangePaleSinister = 0x71F1925C; // Orange Pale Sinister
    constexpr u32 PinkPaleSinister = 0x6D192EB8; // Pink Pale Sinister
    constexpr u32 PurplePaleSinister = 0xE2486AAA; // Purple Pale Sinister
    constexpr u32 RedPaleSinister = 0xA3817507; // Red Pale Sinister
    constexpr u32 LightGrayPaleSinister = 0x8FA75B7B; // Light Gray Pale Sinister
    constexpr u32 WhitePaleSinister = 0xBD86B48B; // White Pale Sinister
    constexpr u32 YellowPaleSinister = 0xECD204C0; // Yellow Pale Sinister
    constexpr u32 BlackChiefFess = 0xEDEA39D0; // Black Chief Fess
    constexpr u32 BlueChiefFess = 0xEAB3EB79; // Blue Chief Fess
    constexpr u32 BrownChiefFess = 0x5C4395D9; // Brown Chief Fess
    constexpr u32 CyanChiefFess = 0x58761A82; // Cyan Chief Fess
    constexpr u32 GrayChiefFess = 0x1EE1D36A; // Gray Chief Fess
    constexpr u32 GreenChiefFess = 0xD56C96DC; // Green Chief Fess
    constexpr u32 LightBlueChiefFess = 0xDF9B5727; // Light Blue Chief Fess
    constexpr u32 LimeChiefFess = 0x477A2D52; // Lime Chief Fess
    constexpr u32 MagentaChiefFess = 0x9F35968A; // Magenta Chief Fess
    constexpr u32 OrangeChiefFess = 0x69D61427; // Orange Chief Fess
    constexpr u32 PinkChiefFess = 0x303A48C3; // Pink Chief Fess
    constexpr u32 PurpleChiefFess = 0x8AF77D61; // Purple Chief Fess
    constexpr u32 RedChiefFess = 0x7DC4CB24; // Red Chief Fess
    constexpr u32 LightGrayChiefFess = 0x03198F80; // Light Gray Chief Fess
    constexpr u32 WhiteChiefFess = 0x97487A78; // White Chief Fess
    constexpr u32 YellowChiefFess = 0xD9C2035B; // Yellow Chief Fess
    constexpr u32 BlackChevron = 0x343735CB; // Black Chevron
    constexpr u32 BlueChevron = 0x10304D5A; // Blue Chevron
    constexpr u32 BrownChevron = 0xA873F272; // Brown Chevron
    constexpr u32 CyanChevron = 0xB3EEFF11; // Cyan Chevron
    constexpr u32 GrayChevron = 0x328C2069; // Gray Chevron
    constexpr u32 GreenChevron = 0x220E39C7; // Green Chevron
    constexpr u32 LightBlueChevron = 0xF036E60C; // Light Blue Chevron
    constexpr u32 LimeChevron = 0x13507421; // Lime Chevron
    constexpr u32 MagentaChevron = 0x6FC11B71; // Magenta Chevron
    constexpr u32 OrangeChevron = 0xC6B1A3B4; // Orange Chevron
    constexpr u32 PinkChevron = 0xA9859F80; // Pink Chevron
    constexpr u32 PurpleChevron = 0x93078F72; // Purple Chevron
    constexpr u32 RedChevron = 0xFFA6FDBF; // Red Chevron
    constexpr u32 LightGrayChevron = 0x32A6F113; // Light Gray Chevron
    constexpr u32 WhiteChevron = 0x19695103; // White Chevron
    constexpr u32 YellowChevron = 0xDCEE3FB8; // Yellow Chevron
    constexpr u32 BlackInvertedChevron = 0x0D7A998F; // Black Inverted Chevron
    constexpr u32 BlueInvertedChevron = 0x97F618BE; // Blue Inverted Chevron
    constexpr u32 BrownInvertedChevron = 0x6A66B136; // Brown Inverted Chevron
    constexpr u32 CyanInvertedChevron = 0xDBA437B5; // Cyan Inverted Chevron
    constexpr u32 GrayInvertedChevron = 0xEB79B6CD; // Gray Inverted Chevron
    constexpr u32 GreenInvertedChevron = 0x93B0A243; // Green Inverted Chevron
    constexpr u32 LightBlueInvertedChevron = 0xC0F91B08; // Light Blue Inverted Chevron
    constexpr u32 LimeInvertedChevron = 0x79B2B0C5; // Lime Inverted Chevron
    constexpr u32 MagentaInvertedChevron = 0x29F28835; // Magenta Inverted Chevron
    constexpr u32 OrangeInvertedChevron = 0x74F6CE50; // Orange Inverted Chevron
    constexpr u32 PinkInvertedChevron = 0xCDCE38E4; // Pink Inverted Chevron
    constexpr u32 PurpleInvertedChevron = 0xD3B23496; // Purple Inverted Chevron
    constexpr u32 RedInvertedChevron = 0x0E0619FB; // Red Inverted Chevron
    constexpr u32 LightGrayInvertedChevron = 0x27F72A77; // Light Gray Inverted Chevron
    constexpr u32 WhiteInvertedChevron = 0x0AFD7F47; // White Inverted Chevron
    constexpr u32 YellowInvertedChevron = 0xD2E4F21C; // Yellow Inverted Chevron
    constexpr u32 BlackBaseIndented = 0x65063600; // Black Base Indented
    constexpr u32 BlueBaseIndented = 0xFC4FF309; // Blue Base Indented
    constexpr u32 BrownBaseIndented = 0x717418C9; // Brown Base Indented
    constexpr u32 CyanBaseIndented = 0xA4FCB492; // Cyan Base Indented
    constexpr u32 GrayBaseIndented = 0xD4D7E85A; // Gray Base Indented
    constexpr u32 GreenBaseIndented = 0x8B803AEC; // Green Base Indented
    constexpr u32 LightBlueBaseIndented = 0x0D78B397; // Light Blue Base Indented
    constexpr u32 LimeBaseIndented = 0x5E9E1702; // Lime Base Indented
    constexpr u32 MagentaBaseIndented = 0xE5B019DA; // Magenta Base Indented
    constexpr u32 OrangeBaseIndented = 0x95B88A37; // Orange Base Indented
    constexpr u32 PinkBaseIndented = 0x5A16C953; // Pink Base Indented
    constexpr u32 PurpleBaseIndented = 0x7E747E11; // Purple Base Indented
    constexpr u32 RedBaseIndented = 0x5A339534; // Red Base Indented
    constexpr u32 LightGrayBaseIndented = 0x9E690650; // Light Gray Base Indented
    constexpr u32 WhiteBaseIndented = 0xB9498768; // White Base Indented
    constexpr u32 YellowBaseIndented = 0xBF567E8B; // Yellow Base Indented
    constexpr u32 BlackChiefIndented = 0x014741BC; // Black Chief Indented
    constexpr u32 BlueChiefIndented = 0xCBC8AB95; // Blue Chief Indented
    constexpr u32 BrownChiefIndented = 0xB5B75E85; // Brown Chief Indented
    constexpr u32 CyanChiefIndented = 0xFCD1170E; // Cyan Chief Indented
    constexpr u32 GrayChiefIndented = 0x62224186; // Gray Chief Indented
    constexpr u32 GreenChiefIndented = 0x4AE550D0; // Green Chief Indented
    constexpr u32 LightBlueChiefIndented = 0xAEE47C6B; // Light Blue Chief Indented
    constexpr u32 LimeChiefIndented = 0xBE41D0EE; // Lime Chief Indented
    constexpr u32 MagentaChiefIndented = 0x4B221376; // Magenta Chief Indented
    constexpr u32 OrangeChiefIndented = 0x55C4E02B; // Orange Chief Indented
    constexpr u32 PinkChiefIndented = 0x25C942DF; // Pink Chief Indented
    constexpr u32 PurpleChiefIndented = 0x53254CBD; // Purple Chief Indented
    constexpr u32 RedChiefIndented = 0xC93EF068; // Red Chief Indented
    constexpr u32 LightGrayChiefIndented = 0x304B7AEC; // Light Gray Chief Indented
    constexpr u32 WhiteChiefIndented = 0x17CB50C4; // White Chief Indented
    constexpr u32 YellowChiefIndented = 0x0EABC5C7; // Yellow Chief Indented
    constexpr u32 WhiteBanner = 0xA2BEF6D2; // White Banner
    constexpr u32 YellowBanner = 0x2A85BBC9; // Yellow Banner
    constexpr u32 Bed = 0xB7D6748D; // Bed
    constexpr u32 Steak = 0x19A67FAC; // Steak
    constexpr u32 RawBeef = 0xC3CC77A1; // Raw Beef
    constexpr u32 Beetroot = 0x91197BBE; // Beetroot
    constexpr u32 BeetrootSeeds = 0x3589479D; // Beetroot Seeds
    constexpr u32 BeetrootSoup = 0xC53BA968; // Beetroot Soup
    constexpr u32 BlazePowder = 0xE1A5D3AA; // Blaze Powder
    constexpr u32 BlazeRod = 0x192E1B08; // Blaze Rod
    constexpr u32 AcaciaBoat = 0xF6970BD9; // Acacia Boat
    constexpr u32 BirchBoat = 0xA7D1CA03; // Birch Boat
    constexpr u32 DarkOakBoat = 0x7163AE7F; // Dark Oak Boat
    constexpr u32 JungleBoat = 0xC9D7558E; // Jungle Boat
    constexpr u32 OakBoat = 0xAE5F01A4; // Oak Boat
    constexpr u32 SpruceBoat = 0x3885C7FB; // Spruce Boat
    constexpr u32 Bone = 0x286EEF88; // Bone
    constexpr u32 Book = 0x386A5707; // Book
    constexpr u32 BookAndQuill = 0xB8CC5A69; // Book and Quill
    constexpr u32 ChainBoots = 0x8F829B69; // Chain Boots
    constexpr u32 LeatherBoots = 0x92747ED8; // Leather Boots
    constexpr u32 DiamondBoots = 0xB9220110; // Diamond Boots
    constexpr u32 GoldenBoots = 0x477CBE1C; // Golden Boots
    constexpr u32 IronBoots = 0xA5E04FEE; // Iron Boots
    constexpr u32 Bow = 0xC4ED317C; // Bow
    constexpr u32 Bowl = 0x511A0CB0; // Bowl
    constexpr u32 Bread = 0x13080F36; // Bread
    constexpr u32 BrewingStand_1 = 0xD39FF6D7; // Brewing Stand
    constexpr u32 Brick = 0x2A042EFF; // Brick
    constexpr u32 Bucket = 0x9DC947C0; // Bucket
    constexpr u32 LavaBucket = 0x5051B83D; // Lava Bucket
    constexpr u32 MilkBucket = 0x731B0964; // Milk Bucket
    constexpr u32 WaterBucket = 0x1F8D4802; // Water Bucket
    constexpr u32 Cake = 0xD18FC712; // Cake
    constexpr u32 CanBreak = 0xCE0B3B55; // Can break:
    constexpr u32 CanPlace = 0xFF74A101; // Can place:
    constexpr u32 GoldenCarrot = 0x1D3AA083; // Golden Carrot
    constexpr u32 CarrotOnAStick = 0xBC506E36; // Carrot on a Stick
    constexpr u32 Cauldron = 0x05A1BA3A; // Cauldron
    constexpr u32 Charcoal = 0xF0997BAF; // Charcoal
    constexpr u32 ChainChestplate = 0x0128EB51; // Chain Chestplate
    constexpr u32 LeatherTunic = 0xEABFA580; // Leather Tunic
    constexpr u32 DiamondChestplate = 0x85B2A528; // Diamond Chestplate
    constexpr u32 GoldenChestplate = 0x33571E94; // Golden Chestplate
    constexpr u32 IronChestplate = 0x9BA57A56; // Iron Chestplate
    constexpr u32 CookedChicken = 0x351CC791; // Cooked Chicken
    constexpr u32 RawChicken = 0x9870D3A4; // Raw Chicken
    constexpr u32 ChorusFruit = 0x526BFFFD; // Chorus Fruit
    constexpr u32 PoppedChorusFruit = 0x9A7DB1F4; // Popped Chorus Fruit
    constexpr u32 Clay = 0xAFE880D1; // Clay
    constexpr u32 Clock = 0x95F3EA2E; // Clock
    constexpr u32 Coal = 0x1EC60CB7; // Coal
    constexpr u32 RedstoneComparator = 0x65DEB0FC; // Redstone Comparator
    constexpr u32 Compass = 0x2CE963FE; // Compass
    constexpr u32 Cookie = 0xDB053C72; // Cookie
    constexpr u32 Diamond = 0xBDD7B85A; // Diamond
    constexpr u32 DiamondHorseArmor = 0xA25CC4B2; // Diamond Horse Armor
    constexpr u32 RedstoneRepeater = 0xB97B9D5D; // Redstone Repeater
    constexpr u32 AcaciaDoor = 0xF59508EC; // Acacia Door
    constexpr u32 BirchDoor = 0x915B72F6; // Birch Door
    constexpr u32 DarkOakDoor = 0x7BF6657D; // Dark Oak Door
    constexpr u32 IronDoor = 0x672F3ACD; // Iron Door
    constexpr u32 JungleDoor = 0x52AF79BB; // Jungle Door
    constexpr u32 OakDoor = 0x3C9F77B1; // Oak Door
    constexpr u32 SpruceDoor = 0xB9F7283E; // Spruce Door
    constexpr u32 DragonSBreath = 0xB0FB4038; // Dragon's Breath
    constexpr u32 DyePowder = 0x86F48C5A; // Dye Powder
    constexpr u32 InkSac = 0xBD5568E2; // Ink Sac
    constexpr u32 LapisLazuli = 0x421475DB; // Lapis Lazuli
    constexpr u32 CocoaBeans = 0x44529A8B; // Cocoa Beans
    constexpr u32 CyanDye = 0x4BF23720; // Cyan Dye
    constexpr u32 GrayDye = 0x23BCA928; // Gray Dye
    constexpr u32 CactusGreen = 0x83F9110E; // Cactus Green
    constexpr u32 LightBlueDye = 0x42FCCD5A; // Light Blue Dye
    constexpr u32 LimeDye = 0x3E31AF30; // Lime Dye
    constexpr u32 MagentaDye = 0x8BFBBD58; // Magenta Dye
    constexpr u32 OrangeDye = 0xC409EE05; // Orange Dye
    constexpr u32 PinkDye = 0xCE5BA8C1; // Pink Dye
    constexpr u32 PurpleDye = 0x99071123; // Purple Dye
    constexpr u32 RoseRed = 0x54A5D9B6; // Rose Red
    constexpr u32 LightGrayDye = 0x2E44B902; // Light Gray Dye
    constexpr u32 BoneMeal = 0xB6554A0A; // Bone Meal
    constexpr u32 DandelionYellow = 0xB868CB59; // Dandelion Yellow
    constexpr u32 Egg = 0x3E2514CB; // Egg
    constexpr u32 Elytra_1 = 0x2D5098D1; // Elytra
    constexpr u32 Emerald = 0xF681DDF0; // Emerald
    constexpr u32 EnchantedBook = 0x46BDF852; // Enchanted Book
    constexpr u32 EndCrystal = 0x2D0D34E4; // End Crystal
    constexpr u32 EnderPearl = 0x871E9983; // Ender Pearl
    constexpr u32 BottleOEnchanting = 0x8EAA3E30; // Bottle o' Enchanting
    constexpr u32 EyeOfEnder = 0x78FC32FE; // Eye of Ender
    constexpr u32 Feather = 0x292C6E2F; // Feather
    constexpr u32 FermentedSpiderEye = 0xD22FCFCC; // Fermented Spider Eye
    constexpr u32 OceanExplorerMap = 0x9AC0E2BE; // Ocean Explorer Map
    constexpr u32 WoodlandExplorerMap = 0x09F84BEE; // Woodland Explorer Map
    constexpr u32 FireCharge = 0x96584E3D; // Fire Charge
    constexpr u32 FireChargeCharcoal = 0x44D7620C; // Fire Charge (Charcoal)
    constexpr u32 FireChargeCoal = 0x7B7CBFA4; // Fire Charge (Coal)
    constexpr u32 FlightDuration = 0xA774ACD3; // Flight Duration:
    constexpr u32 Clownfish = 0x08E55CEB; // Clownfish
    constexpr u32 CookedFish = 0x3632573C; // Cooked Fish
    constexpr u32 Pufferfish = 0x60C4EC20; // Pufferfish
    constexpr u32 RawFish = 0x0B7484B1; // Raw Fish
    constexpr u32 CookedSalmon = 0x44A3F851; // Cooked Salmon
    constexpr u32 RawSalmon = 0x5619AFE4; // Raw Salmon
    constexpr u32 FishingRod = 0xB70D1CE4; // Fishing Rod
    constexpr u32 Flint = 0x81ADB08F; // Flint
    constexpr u32 FlintAndSteel = 0x2C3E9157; // Flint and Steel
    constexpr u32 GhastTear = 0x8645F2D2; // Ghast Tear
    constexpr u32 GlassBottle = 0xF3DDA58F; // Glass Bottle
    constexpr u32 GoldHorseArmor = 0xF08EF44E; // Gold Horse Armor
    constexpr u32 GoldNugget = 0x1159B28B; // Gold Nugget
    constexpr u32 DiamondAxe = 0x962A37C2; // Diamond Axe
    constexpr u32 GoldenAxe = 0xA0C4155E; // Golden Axe
    constexpr u32 IronAxe = 0xC55D95AC; // Iron Axe
    constexpr u32 StoneAxe = 0x38C2FBED; // Stone Axe
    constexpr u32 WoodenAxe = 0x27EAFCDD; // Wooden Axe
    constexpr u32 ChainHelmet = 0x07003B21; // Chain Helmet
    constexpr u32 LeatherCap = 0xF761EBF0; // Leather Cap
    constexpr u32 DiamondHelmet = 0x01A29BF8; // Diamond Helmet
    constexpr u32 GoldenHelmet = 0x1A817DE4; // Golden Helmet
    constexpr u32 IronHelmet = 0x0D8ED8C6; // Iron Helmet
    constexpr u32 DiamondHoe = 0x582861AF; // Diamond Hoe
    constexpr u32 GoldenHoe = 0x0F2C415B; // Golden Hoe
    constexpr u32 IronHoe = 0x38F079D9; // Iron Hoe
    constexpr u32 StoneHoe = 0x73E73890; // Stone Hoe
    constexpr u32 WoodenHoe = 0xF5FAAAB8; // Wooden Hoe
    constexpr u32 GoldIngot = 0x9FE09B52; // Gold Ingot
    constexpr u32 IronIngot = 0xDC2934D0; // Iron Ingot
    constexpr u32 IronHorseArmor = 0x8548CB0C; // Iron Horse Armor
    constexpr u32 IronNugget = 0x50584559; // Iron Nugget
    constexpr u32 ItemFrame = 0x84E900D6; // Item Frame
    constexpr u32 Lead = 0x04F7491A; // Lead
    constexpr u32 Leather = 0x820577E5; // Leather
    constexpr u32 LeatherHorseArmor = 0xDCD90E2D; // Leather Horse Armor
    constexpr u32 ChainLeggings = 0xE094E69E; // Chain Leggings
    constexpr u32 LeatherPants = 0x25CD26DF; // Leather Pants
    constexpr u32 DiamondLeggings = 0x5EB32717; // Diamond Leggings
    constexpr u32 GoldenLeggings = 0x72AC9BE3; // Golden Leggings
    constexpr u32 IronLeggings = 0xAF113111; // Iron Leggings
    constexpr u32 LingeringPotion = 0x23A08711; // Lingering Potion
    constexpr u32 MagmaCream = 0xFDE0B80E; // Magma Cream
    constexpr u32 Map = 0x9717333A; // Map
    constexpr u32 EmptyMap = 0x7A1AE5A0; // Empty Map
    constexpr u32 MelonSeeds = 0xD8CDD100; // Melon Seeds
    constexpr u32 MelonSlice = 0x4EA15B54; // Melon Slice
    constexpr u32 Minecart_1 = 0x152F5A1D; // Minecart
    constexpr u32 MinecartWithChest = 0xC80DEDCB; // Minecart with Chest
    constexpr u32 MinecartWithCommandBlock = 0x49F2472D; // Minecart with Command Block
    constexpr u32 MinecartWithFurnace = 0x5F6E4CAA; // Minecart with Furnace
    constexpr u32 MinecartWithHopper = 0x1850EC5A; // Minecart with Hopper
    constexpr u32 MinecartWithTnt = 0x1FFA9ECC; // Minecart with TNT
    constexpr u32 SpawnCreature = 0x9FA6F429; // Spawn {*CREATURE*}
    constexpr u32 MushroomStew = 0xB78038C0; // Mushroom Stew
    constexpr u32 CookedMutton = 0xCDF084A9; // Cooked Mutton
    constexpr u32 RawMutton = 0x1179020C; // Raw Mutton
    constexpr u32 NameTag = 0x5DA61B4C; // Name Tag
    constexpr u32 NetherQuartz = 0x6111CA70; // Nether Quartz
    constexpr u32 NetherWart = 0xFB353413; // Nether Wart
    constexpr u32 NetherBrick = 0x9B878367; // Nether Brick
    constexpr u32 Painting = 0xE458B944; // Painting
    constexpr u32 Paper = 0xA3D0CA58; // Paper
    constexpr u32 DiamondPickaxe = 0xAC444B30; // Diamond Pickaxe
    constexpr u32 GoldenPickaxe = 0x2F70F5BC; // Golden Pickaxe
    constexpr u32 IronPickaxe = 0x36997A0E; // Iron Pickaxe
    constexpr u32 StonePickaxe = 0xF89E69FF; // Stone Pickaxe
    constexpr u32 WoodenPickaxe = 0xC9D273FF; // Wooden Pickaxe
    constexpr u32 CookedPorkchop = 0xFB217762; // Cooked Porkchop
    constexpr u32 RawPorkchop = 0xC673F9BF; // Raw Porkchop
    constexpr u32 BakedPotato = 0x09BBF079; // Baked Potato
    constexpr u32 PoisonousPotato = 0xDCA4BC35; // Poisonous Potato
    constexpr u32 Potion = 0x0AE6088D; // Potion
    constexpr u32 PrismarineCrystals = 0xC57D6644; // Prismarine Crystals
    constexpr u32 PrismarineShard = 0x989DD9E9; // Prismarine Shard
    constexpr u32 PumpkinPie = 0x8405AC61; // Pumpkin Pie
    constexpr u32 PumpkinSeeds = 0x2CB8FA49; // Pumpkin Seeds
    constexpr u32 CookedRabbit = 0x35471BB6; // Cooked Rabbit
    constexpr u32 RabbitSFoot = 0x37D2E0C5; // Rabbit's Foot
    constexpr u32 RabbitHide = 0x4DB9218F; // Rabbit Hide
    constexpr u32 RawRabbit = 0xDB0F972B; // Raw Rabbit
    constexpr u32 RabbitStew = 0x355B08D2; // Rabbit Stew
    constexpr u32 MusicDisc = 0xD4B0C693; // Music Disc
    constexpr u32 C41813 = 0xC04578A7; // C418 - 13
    constexpr u32 C418Cat = 0xB4B22E0C; // C418 - cat
    constexpr u32 C418Blocks = 0x92253055; // C418 - blocks
    constexpr u32 C418Chirp = 0xB4B7037A; // C418 - chirp
    constexpr u32 C418Far = 0x088245C3; // C418 - far
    constexpr u32 C418Mall = 0xAF7708A8; // C418 - mall
    constexpr u32 C418Mellohi = 0x7DE96171; // C418 - mellohi
    constexpr u32 C418Stal = 0xD6E3ADD6; // C418 - stal
    constexpr u32 C418Strad = 0xDF75129F; // C418 - strad
    constexpr u32 C418Ward = 0x7A19C56F; // C418 - ward
    constexpr u32 C41811 = 0x9F3EF366; // C418 - 11
    constexpr u32 C418Wait = 0x51B5A3DD; // C418 - wait
    constexpr u32 Redstone = 0xF1B7B73E; // Redstone
    constexpr u32 SugarCanes = 0x15F282BB; // Sugar Canes
    constexpr u32 RottenFlesh = 0xA59AE4F3; // Rotten Flesh
    constexpr u32 Saddle = 0xF47ACEC5; // Saddle
    constexpr u32 Shears = 0x0A1C6B20; // Shears
    constexpr u32 DiamondShovel = 0xDA4B428E; // Diamond Shovel
    constexpr u32 GoldenShovel = 0x86B15AA2; // Golden Shovel
    constexpr u32 IronShovel = 0xDFC89300; // Iron Shovel
    constexpr u32 StoneShovel = 0x98CE2F71; // Stone Shovel
    constexpr u32 WoodenShovel = 0x0C9B0DA1; // Wooden Shovel
    constexpr u32 ShulkerShell = 0x1B250339; // Shulker Shell
    constexpr u32 Sign = 0x6B184025; // Sign
    constexpr u32 Skull = 0xCDE48093; // Skull
    constexpr u32 Head = 0xB66359ED; // Head
    constexpr u32 CreeperHead = 0xD874C67A; // Creeper Head
    constexpr u32 DragonHead = 0xC2F59BF5; // Dragon Head
    constexpr u32 SSHead = 0xAB409597; // %s's Head
    constexpr u32 SkeletonSkull = 0x4E95D915; // Skeleton Skull
    constexpr u32 WitherSkeletonSkull = 0x23622CE1; // Wither Skeleton Skull
    constexpr u32 ZombieHead = 0x1F94474A; // Zombie Head
    constexpr u32 Slimeball = 0xE3459F13; // Slimeball
    constexpr u32 Snowball = 0x4866FD48; // Snowball
    constexpr u32 GlisteringMelon = 0x83DF6357; // Glistering Melon
    constexpr u32 SpectralArrow = 0x0558958E; // Spectral Arrow
    constexpr u32 SpiderEye = 0xFF928931; // Spider Eye
    constexpr u32 SplashPotion = 0x3DAD6FDF; // Splash Potion
    constexpr u32 Stick = 0x69E992B0; // Stick
    constexpr u32 String = 0xBAEE193B; // String
    constexpr u32 Sugar = 0x3155229C; // Sugar
    constexpr u32 Gunpowder = 0x4BF44373; // Gunpowder
    constexpr u32 DiamondSword = 0x9BB209E8; // Diamond Sword
    constexpr u32 GoldenSword = 0x8D0147D4; // Golden Sword
    constexpr u32 IronSword = 0xC9109296; // Iron Sword
    constexpr u32 StoneSword = 0x4CC45537; // Stone Sword
    constexpr u32 WoodenSword = 0xA8AD4777; // Wooden Sword
    constexpr u32 TippedArrow = 0x20746E7C; // Tipped Arrow
    constexpr u32 TotemOfUndying = 0xB4DA2886; // Totem of Undying
    constexpr u32 Unbreakable = 0x5641AA40; // Unbreakable
    constexpr u32 WaterBottle = 0xDEC4B008; // Water Bottle
    constexpr u32 Wheat = 0xF272C9A1; // Wheat
    constexpr u32 Seeds = 0x95C975B2; // Seeds
    constexpr u32 WrittenBook = 0x512D288F; // Written Book
    constexpr u32 GlowstoneDust = 0xD8D0E583; // Glowstone Dust
    constexpr u32 Items = 0xA2009D52; // Items
    constexpr u32 JoinGame = 0x5483E75F; // Join Game
    constexpr u32 Join = 0xA1B54CBE; // Join
    constexpr u32 Host = 0x566A7B93; // (Host)
    constexpr u32 KeepInventory = 0x07A2D3B2; // Keep Inventory
    constexpr u32 EnterANameForYourSavegame = 0x433D006F; // Enter a name for your savegame
    constexpr u32 NameSave = 0x8E9DC022; // Name the save
    constexpr u32 KickPlayer = 0x4C8183DA; // Kick Player
    constexpr u32 ForPlayersThatAreNotOnSameNintendo = 0x1350B613; // For players that are not on the same Nintendo Switch console as the host player, selecting this opti...
    constexpr u32 Difficulty = 0xB55C15D6; // Difficulty:
    constexpr u32 FireSpreads_1 = 0xC412C970; // Fire Spreads:
    constexpr u32 GameType = 0x586B2084; // Game Type:
    constexpr u32 PlayerLabels = 0x8CA04F68; // Player labels:
    constexpr u32 LevelType = 0xB0408364; // Level Type:
    constexpr u32 Pvp = 0x550744A3; // PvP:
    constexpr u32 Structures_1 = 0xA79E83BB; // Structures:
    constexpr u32 Tnt = 0xD6B53F5B; // TNT:
    constexpr u32 TrustPlayers = 0x0927DB69; // Trust Players:
    constexpr u32 ChineseSimplified = 0x4F5B792B; // Chinese (Simplified)
    constexpr u32 ChineseTraditional = 0xBEACA054; // Chinese (Traditional)
    constexpr u32 Czech = 0xC10555A0; // Czech
    constexpr u32 Danish = 0x5CB9CC96; // Danish
    constexpr u32 Dutch = 0xD1E5AF59; // Dutch
    constexpr u32 English = 0x85CABB8D; // English
    constexpr u32 Finnish = 0x28DCB7AC; // Finnish
    constexpr u32 French = 0xB524803B; // French
    constexpr u32 German = 0xA7BED7AD; // German
    constexpr u32 Greek = 0x771D52D1; // Greek
    constexpr u32 Italian = 0x1C9D5CE9; // Italian
    constexpr u32 Japanese = 0xFD7B9B78; // Japanese
    constexpr u32 Korean = 0x8DC52CD3; // Korean
    constexpr u32 Norwegian = 0xA5B37607; // Norwegian
    constexpr u32 Polish = 0x4200940E; // Polish
    constexpr u32 Portuguese = 0x8C335342; // Portuguese
    constexpr u32 PortugueseBrazil = 0x9BF34E3B; // Portuguese (Brazil)
    constexpr u32 PortuguesePortugal = 0xAF947AA3; // Portuguese (Portugal)
    constexpr u32 Russian = 0x21828946; // Russian
    constexpr u32 Slovak = 0x79921D8B; // Slovak
    constexpr u32 Spanish = 0x44690CE1; // Spanish
    constexpr u32 SpanishLatinAmerica = 0x1C0C8A3F; // Spanish (Latin America)
    constexpr u32 SpanishSpain = 0x927530AB; // Spanish (Spain)
    constexpr u32 Swedish = 0x67A18848; // Swedish
    constexpr u32 SystemLanguage = 0x4A55D76A; // System Language
    constexpr u32 Turkish = 0x6CEB5A95; // Turkish
    constexpr u32 Languages = 0x1EF2B27C; // Languages
    constexpr u32 Large = 0x34A11679; // Large
    constexpr u32 MagmaCube = 0x9E8D900F; // Magma Cube
    constexpr u32 Layers = 0x7EDA4F74; // Layers
    constexpr u32 Entries = 0x254B61C0; // Entries: 
    constexpr u32 FarmingEasy = 0x2A285BBB; // Farming Easy
    constexpr u32 FarmingHard = 0x17517772; // Farming Hard
    constexpr u32 FarmingNormal = 0x896D8EE6; // Farming Normal
    constexpr u32 FarmingPeaceful = 0x0170B0D8; // Farming Peaceful
    constexpr u32 Filter = 0x5589E932; // Filter: 
    constexpr u32 Friends_1 = 0x1BCDEB3C; // Friends
    constexpr u32 MyScore = 0x81F49D21; // My Score
    constexpr u32 Overall = 0xDFF993FA; // Overall
    constexpr u32 Gamertag = 0x143EE56C; // Gamertag
    constexpr u32 KillsEasy = 0x56A47B1A; // Kills Easy
    constexpr u32 KillsHard = 0xBC14F8D3; // Kills Hard
    constexpr u32 KillsNormal = 0x4E067C37; // Kills Normal
    constexpr u32 PleaseWait = 0xF14F12E4; // Please wait
    constexpr u32 MiningBlocksEasy = 0x93926FE4; // Mining Blocks Easy
    constexpr u32 MiningBlocksHard = 0xB203D3DD; // Mining Blocks Hard
    constexpr u32 MiningBlocksNormal = 0x7E732429; // Mining Blocks Normal
    constexpr u32 MiningBlocksPeaceful = 0x40CDC147; // Mining Blocks Peaceful
    constexpr u32 NoResults = 0x19FBBD01; // No results
    constexpr u32 Rank = 0x1A9067DC; // Rank
    constexpr u32 TravelingEasy = 0x5F8F0BF7; // Traveling Easy
    constexpr u32 TravelingHard = 0xA506ABEE; // Traveling Hard
    constexpr u32 TravelingNormal = 0x6771BAEA; // Traveling Normal
    constexpr u32 TravelingPeaceful = 0x42511FF4; // Traveling Peaceful
    constexpr u32 Leaderboards = 0x15087AD6; // Leaderboards
    constexpr u32 LeftHanded = 0x864419FA; // Left Handed
    constexpr u32 Normal_1 = 0x1494C206; // Normal
    constexpr u32 Superflat = 0xF37D7BEB; // Superflat
    constexpr u32 AwkwardLingeringPotion = 0x5B0327A9; // Awkward Lingering Potion
    constexpr u32 LingeringUncraftablePotion = 0xC5127F79; // Lingering Uncraftable Potion
    constexpr u32 LingeringPotionOfFireResistance = 0xAAAA85D8; // Lingering Potion of Fire Resistance
    constexpr u32 LingeringPotionOfHarming = 0x2A15225A; // Lingering Potion of Harming
    constexpr u32 LingeringPotionOfHealing = 0x017D26A4; // Lingering Potion of Healing
    constexpr u32 LingeringPotionOfInvisibility = 0x67E1CA95; // Lingering Potion of Invisibility
    constexpr u32 LingeringPotionOfLeaping = 0x135F499C; // Lingering Potion of Leaping
    constexpr u32 LingeringPotionOfLevitation = 0x0D4D5F93; // Lingering Potion of Levitation
    constexpr u32 LingeringPotionOfLuck = 0x3B80873D; // Lingering Potion of Luck
    constexpr u32 MundaneLingeringPotion = 0x26AEACDC; // Mundane Lingering Potion
    constexpr u32 LingeringPotionOfNightVision = 0xD646308B; // Lingering Potion of Night Vision
    constexpr u32 LingeringPotionOfPoison = 0x88569108; // Lingering Potion of Poison
    constexpr u32 LingeringPotionOfRegeneration = 0x310BE8D5; // Lingering Potion of Regeneration
    constexpr u32 LingeringPotionOfSlowness = 0xA4129E78; // Lingering Potion of Slowness
    constexpr u32 LingeringPotionOfStrength = 0x20073079; // Lingering Potion of Strength
    constexpr u32 LingeringPotionOfSwiftness = 0xF447F588; // Lingering Potion of Swiftness
    constexpr u32 ThickLingeringPotion = 0x423AC4B1; // Thick Lingering Potion
    constexpr u32 LingeringWaterBottle = 0x28FF8661; // Lingering Water Bottle
    constexpr u32 LingeringPotionOfWaterBreathing = 0x6154418E; // Lingering Potion of Water Breathing
    constexpr u32 LingeringPotionOfWeakness = 0xA66F350F; // Lingering Potion of Weakness
    constexpr u32 LingeringPotionOfDecay = 0x287B5BF1; // Lingering Potion of Decay
    constexpr u32 Llama = 0xC5D9DA21; // Llama
    constexpr u32 Load = 0x7BE5C322; // Load
    constexpr u32 LoadSavedWorld = 0x5799AAF5; // Load Saved World
    constexpr u32 Load_1 = 0xE63A8ECA; // Load
    constexpr u32 LocalNetworkGame = 0x316060F1; // Local Network Game
    constexpr u32 MapPacks = 0xB512343D; // Map Packs
    constexpr u32 MashUpPack = 0x74A1EDE8; // Mash-up Pack
    constexpr u32 TheMaximumNumberOfArmorStandsInA = 0x8ECD701E; // The maximum number of Armor Stands in a world has been reached.
    constexpr u32 TheMaximumNumberOfBannersInAWorld = 0xFDF65C18; // The maximum number of Banners in a world has been reached.
    constexpr u32 CantUseSpawnEggAtMomentTheMaximum = 0xFAB1DEB6; // Can't use Spawn Egg at the moment. The maximum number of Bats in a world has been reached.
    constexpr u32 TheMaximumNumberOfBeaconsInAWorld = 0xEF12CC40; // The maximum number of Beacons in a world has been reached.
    constexpr u32 TheMaximumNumberOfBoatsInAWorld = 0xB2145884; // The maximum number of Boats in a world has been reached.
    constexpr u32 ThisAnimalCantEnterLoveModeTheMaximum = 0x99326383; // This animal can't enter Love Mode. The maximum number of breeding Chickens has been reached.
    constexpr u32 CantUseSpawnEggAtMomentTheMaximumChickens = 0x82460728; // Can't use Spawn Egg at the moment. The maximum number of Chickens in a world has been reached.
    constexpr u32 TheMaximumNumberOfEnderCrystalsInA = 0xC952E8B9; // The maximum number of Ender Crystals in a world has been reached.
    constexpr u32 CantUseSpawnEggAtMomentTheMaximumEnemies = 0xA82B5A66; // Can't use Spawn Egg at the moment. The maximum number of enemies in a world has been reached.
    constexpr u32 AllFavoriteSlotsAreOccupiedWouldYouLike = 0x935A46D2; // All Favorite slots are occupied. Would you like to manage them now?
    constexpr u32 Favorites = 0x397A0127; // Favorites
    constexpr u32 TheMaximumNumberOfPaintingsItemFramesIn = 0x1EE681BA; // The maximum number of Paintings/Item Frames in a world has been reached.
    constexpr u32 ThisAnimalCantEnterLoveModeTheMaximumHorses = 0x5A488B21; // This animal can't enter Love Mode. The maximum number of breeding Horses has been reached.
    constexpr u32 TheMaximumNumberOfMinecartsInAWorld = 0xB604AAFF; // The maximum number of Minecarts in a world has been reached.
    constexpr u32 CantUseSpawnEggAtMomentTheMaximumMooshrooms = 0x3E35B6E8; // Can't use Spawn Egg at the moment. The maximum number of Mooshrooms has been reached.
    constexpr u32 ThisAnimalCantEnterLoveModeTheMaximumMooshrooms = 0x00FE5875; // This animal can't enter Love Mode. The maximum number of breeding Mooshrooms has been reached.
    constexpr u32 ThisAnimalCantEnterLoveModeTheMaximumAnimalsExcludingWolvesAndMooshrooms = 0xB399BD15; // This animal can't enter Love Mode. The maximum number of breeding animals, excluding Wolves, Chicken...
    constexpr u32 CantUseSpawnEggAtMomentTheMaximumAnimalsExcludingWolvesChickensAnd = 0x9F8BFFAE; // Can't use Spawn Egg at the moment. The maximum number of animals, excluding Wolves, Bats, Chickens a...
    constexpr u32 TheMaximumNumberOfMobHeadsInA = 0x52C54B32; // The maximum number of Mob Heads in a world has been reached.
    constexpr u32 CantUseSpawnEggAtMomentTheMaximumSquid = 0x1E0D17D0; // Can't use Spawn Egg at the moment. The maximum number of Squid in a world has been reached.
    constexpr u32 CantUseSpawnEggAtMomentTheMaximumVillagers = 0x16972FBF; // Can't use Spawn Egg at the moment. The maximum number of villagers in a world has been reached.
    constexpr u32 ThisAnimalCantEnterLoveModeTheMaximumWolves = 0xEC344E3D; // This animal can't enter Love Mode. The maximum number of breeding Wolves has been reached.
    constexpr u32 CantUseSpawnEggAtMomentTheMaximumWolves = 0x70EDC806; // Can't use Spawn Egg at the moment. The maximum number of Wolves in a world has been reached.
    constexpr u32 GoldDigger = 0x03AD6CD5; // Gold Digger
    constexpr u32 SilverDigger = 0xDA364E83; // Silver Digger
    constexpr u32 BronzeDigger = 0x2493FAEE; // Bronze Digger
    constexpr u32 BestFed = 0x69158380; // Best Fed
    constexpr u32 Wholewheat = 0x777DF067; // Wholewheat
    constexpr u32 FishAreFood = 0x481026AB; // Fish Are Food
    constexpr u32 Carnivore = 0x410B9DD2; // Carnivore
    constexpr u32 LeastThirsty = 0xE04899EF; // Least Thirsty
    constexpr u32 MostAverage = 0xB377B243; // Most Average
    constexpr u32 MostGeneric = 0x41704308; // Most Generic
    constexpr u32 LeastMemorable = 0x6772BD71; // Least Memorable
    constexpr u32 MostHandsome = 0x257F217E; // Most Handsome
    constexpr u32 Participator = 0x4B819BE7; // Participator
    constexpr u32 NeedsAParachute = 0xD97A2CAC; // Needs a parachute
    constexpr u32 Skydiver = 0xFF7CA715; // Skydiver
    constexpr u32 HighestDive = 0x57745C04; // Highest Dive
    constexpr u32 AgainstAllOdds = 0xBD402445; // Against all odds
    constexpr u32 Diver = 0xB64A8AB1; // Diver
    constexpr u32 Marksman = 0xFA877DCF; // Marksman
    constexpr u32 HotHead = 0xDBB3DF9C; // Hot Head
    constexpr u32 YouReDoingItWrong = 0x86DFA3A0; // You're Doing It Wrong
    constexpr u32 Archer_1 = 0x9FDE2D4C; // Archer
    constexpr u32 Heavyweight = 0x46558545; // Heavyweight
    constexpr u32 LeastEffective = 0x0CF03A49; // Least Effective
    constexpr u32 MostEffective = 0x02F32BA3; // Most Effective
    constexpr u32 Swordsman = 0xAAF401B3; // Swordsman
    constexpr u32 Surprise = 0x3990407B; // Surprise!
    constexpr u32 Conservationist = 0xDF79BDD4; // Conservationist
    constexpr u32 Camper = 0x8AF1D99B; // Camper
    constexpr u32 LeastDeadly = 0xE148AA03; // Least Deadly
    constexpr u32 ITooLikeToLiveDangerously = 0xCC2971F7; // I too like to live dangerously
    constexpr u32 Survivor = 0x415F73D7; // Survivor
    constexpr u32 QuantityNotQuality = 0xD5E3FB2E; // Quantity not quality
    constexpr u32 DeathFromBelow = 0x18F9F129; // Death from... below!
    constexpr u32 Digger = 0x2BB44FEE; // Digger
    constexpr u32 TreasureHunter = 0x483C96F0; // Treasure Hunter
    constexpr u32 Explorer = 0x15F4E5E1; // Explorer
    constexpr u32 FastLearner = 0x3179D63E; // Fast learner
    constexpr u32 Hoarder = 0xBB274286; // Hoarder
    constexpr u32 JumpAround = 0xDE128049; // Jump around
    constexpr u32 MostDeadly = 0x373F0289; // Most Deadly
    constexpr u32 Climber = 0xF14B91A1; // Climber
    constexpr u32 Ninja = 0x8A6A9582; // Ninja
    constexpr u32 Witch = 0x02C0E252; // Witch
    constexpr u32 PlayingSafe = 0xC507906D; // Playing safe
    constexpr u32 Diver_1 = 0xE268EF55; // Diver
    constexpr u32 QuickDescent = 0xD3DA7ABA; // Quick Descent
    constexpr u32 Unlucky = 0xE75F245D; // Unlucky
    constexpr u32 EasyTarget = 0xEDE3A3FA; // Easy Target
    constexpr u32 NotAFish = 0x9B18B91B; // Not A Fish
    constexpr u32 Gravity = 0xA847BB24; // Gravity!
    constexpr u32 HotStuff = 0x118D7CB1; // Hot Stuff
    constexpr u32 AlreadyDead = 0xD01D07DF; // Already dead
    constexpr u32 ShortestInnings = 0xBF5D3CB3; // Shortest Innings
    constexpr u32 Baller = 0x70D4F647; // Baller
    constexpr u32 Underdog_1 = 0xFDF26520; // Underdog
    constexpr u32 KingOfHill = 0x75F9EAFC; // King of the Hill
    constexpr u32 TerrorOfTheDeep = 0x5BA330E9; // Terror Of The Deep
    constexpr u32 Effortless = 0x8A2B0AC2; // Effortless
    constexpr u32 Professional = 0x8C688A64; // Professional
    constexpr u32 PunchBag = 0x3F27FDC6; // Punch Bag
    constexpr u32 Medium = 0xD797B179; // Medium
    constexpr u32 AcceptAlliance = 0xC5DB4537; // Accept Alliance
    constexpr u32 SomeOfYourSettingsAreIncompatibleWithA = 0x0428E440; // Some of your settings are incompatible with a public game type.
    constexpr u32 Any = 0x68039067; // Any
    constexpr u32 Auto = 0x74AE70E6; // Auto
    constexpr u32 BeReady = 0x7D1B2CD2; // be ready
    constexpr u32 BlockedInThisMiniGame = 0x63492941; // Blocked in this Mini Game
    constexpr u32 BlocksBlocksDestroyed = 0x782D903F; // {*BLOCKS*} Blocks Destroyed
    constexpr u32 OnlyOneTeamRemainingTeamsWillBeDissolved = 0x056D9F12; // Only one team remaining, teams will be dissolved in {*NUMBER*} seconds!
    constexpr u32 WeaponsAndFoodHaveSpawnedSomewhereInArena = 0xA292A825; // Weapons and food have spawned somewhere in the arena!
    constexpr u32 WeaponsAndFoodHaveSpawnedAtCenterOfArena = 0x3041D7AC; // Weapons and food have spawned at the center of the arena!
    constexpr u32 SpecialItemsHaveSpawnedSomewhereInArena = 0x90C46BBB; // Special items have spawned somewhere in the arena!
    constexpr u32 CreateCasual = 0xDDE2CFAA; // Create Casual
    constexpr u32 CreateACasualGameWhichAllowsAllPlayer = 0xFE25A58C; // Create a Casual game, which allows all player skins and spectators appear as Bats.
    constexpr u32 CreateCompetitive = 0xDA5CD194; // Create Competitive
    constexpr u32 CreateACompetitiveGameWhichDoesntAllowPlayer = 0xA7B858B2; // Create a Competitive game, which doesn't allow player skins that provide an advantage (e.g. being sm...
    constexpr u32 CreateACustomGameAndModifyAVariety = 0x19CE3576; // Create a custom game and modify a variety of settings to create a new game experience.
    constexpr u32 CreateGame = 0x7EC1AD4C; // Create Game
    constexpr u32 CreateAGameWhichAllowsAllPlayerSkins = 0xB6A97E24; // Create a game which allows all player skins. Spectators appear as Bats.
    constexpr u32 CustomOptions = 0x8932699D; // Custom Options
    constexpr u32 ItemSet = 0x13ADA435; // Item set:
    constexpr u32 Layers_1 = 0x3E09F1B2; // Layers:
    constexpr u32 Lives = 0xE7989CA8; // Lives:
    constexpr u32 RoundCount = 0xD4F52013; // Round count:
    constexpr u32 DamageInflicted = 0x7CEA6C57; // {*DAMAGE*} inflicted
    constexpr u32 DamageReceived = 0x2B967C02; // {*DAMAGE*} received
    constexpr u32 YouDidNotWinAMedal = 0x743046A3; // You did not win a medal!
    constexpr u32 DeltaDistanceTravelled = 0x2815DC90; // {*DELTA*} Distance Travelled
    constexpr u32 EndEnd = 0x903442C6; // end
    constexpr u32 FavoriteWeapon = 0x5450E4B5; // Favorite Weapon
    constexpr u32 Fight = 0xBC3B07CD; // Fight!
    constexpr u32 FinalBlow = 0x5F46455C; // Final blow
    constexpr u32 FindMatch = 0xF5E44AF0; // Find Match
    constexpr u32 Infinite = 0x1D2EDE0F; // Infinite
    constexpr u32 PlayerInvitedYouToJoinTeam = 0xC08F5C90; // {*PLAYER*} invited you to join {*TEAM*}
    constexpr u32 InviteToAlliance = 0x46B07E26; // Invite to Alliance
    constexpr u32 YourInvitationFromPlayerExpired = 0x05F0B230; // Your invitation from {*PLAYER*} expired
    constexpr u32 InvulnerabilityHasWornOffFight = 0xF53F833A; // Invulnerability has worn off! Fight!
    constexpr u32 SuppliesHaveSpawnedInCentralChests = 0xA4618E37; // Supplies have spawned in the central chests.
    constexpr u32 JoinAny = 0x3CC9B373; // Join Any
    constexpr u32 JoinAnyCasualOrCompetitiveGameWithYour = 0x7031DE7D; // Join any Casual or Competitive game, with your selected Round Length.
    constexpr u32 JoinCasual = 0x9634AA24; // Join Casual
    constexpr u32 JoinACasualGameWhichAllowsAllPlayer = 0x353280C2; // Join a Casual game, which allows all player skins and spectators appear as Bats.
    constexpr u32 JoinCompetitive = 0x18798DEA; // Join Competitive
    constexpr u32 JoinACompetitiveGameWhichDoesntAllowPlayer = 0x3CEDFB4C; // Join a Competitive game, which doesn't allow player skins that provide an advantage (e.g. being smal...
    constexpr u32 JoinACustomGameWithYourSelectedRound = 0xA6FC9A18; // Join a custom game, with your selected Round Length.
    constexpr u32 JumpsJumps = 0xD6524620; // {*JUMPS*} Jumps
    constexpr u32 DefeatedBy = 0x7EADEE66; // Defeated by:
    constexpr u32 PrickedToDeath = 0x6A984946; // Pricked to death
    constexpr u32 Drowned = 0xA6C83D5D; // Drowned
    constexpr u32 KilledByGravity = 0x1C121D5A; // Killed by gravity
    constexpr u32 BurntToACrisp = 0x7B3C118D; // Burnt to a crisp
    constexpr u32 SwamInLava = 0x6831A91F; // Swam in lava
    constexpr u32 KilledByMagic = 0xAEAFCBF4; // Killed by magic
    constexpr u32 StarvedToDeath = 0xE661ED9A; // Starved to death
    constexpr u32 KillS = 0x6DCF0700; // kill(s)
    constexpr u32 LeaveAlliance = 0x7F7DEA6C; // Leave Alliance
    constexpr u32 YouAreLeavingTeam = 0x5BDBD6D3; // You are leaving {*TEAM*}
    constexpr u32 PlayerIsLeavingTeam = 0xE9D46798; // {*PLAYER*} is leaving {*TEAM*}
    constexpr u32 YouLeftTeam = 0x39B60856; // You left {*TEAM*}!
    constexpr u32 PlayerLeftTeam = 0x13B38DED; // {*PLAYER*} left {*TEAM*}!
    constexpr u32 LivesPerRound = 0x8D5CBB71; // Lives per Round
    constexpr u32 DefineHowManyLivesEveryPlayerGetsPerRound = 0x42D4AE0F; // Define how many lives every player gets per round.
    constexpr u32 YouHaveDLivesRemaining = 0x5819DF6F; // You have %d lives remaining
    constexpr u32 Long = 0xA7369313; // Long
    constexpr u32 MapDescription = 0xC88F6BDB; // Map Description
    constexpr u32 MapVotes = 0x0E5D7959; // Map Votes
    constexpr u32 Normal_2 = 0xA7E3639C; // Normal
    constexpr u32 YourWeakness = 0x51F24780; // Your weakness
    constexpr u32 Nemesis = 0xEA95ECF3; // Nemesis:
    constexpr u32 YouMustSelectAtLeastOneMapToPlayWith = 0xB9BF8844; // You must select at least one map to play with.
    constexpr u32 NoMapsSelected = 0xAC598F61; // No Maps Selected
    constexpr u32 NoMedal = 0x0CF021A6; // No Medal
    constexpr u32 YouCannotJoinOrHostPublicGamesBecause = 0x2FAC754A; // You cannot join or host public games because Parental Controls are enabled on your Nintendo Account.
    constexpr u32 YouCannotJoinPublicGamesBecauseYouAre = 0x2CD8B529; // You cannot join public games because you are offline.
    constexpr u32 PublicGamesUnavailable = 0x456F1349; // Public Games Unavailable
    constexpr u32 AllowAllSkins = 0xA329D6E9; // Allow All Skins
    constexpr u32 CentralSpawn = 0xEF2A2F6A; // Central Spawn
    constexpr u32 WhenEnabledAllowsPlayersToUseSkinsThat = 0xBE68971F; // When enabled, allows players to use skins that were previously restricted for being unfair. This inc...
    constexpr u32 WhenEnabledPlayersSpawnAroundCenterWhenEntering = 0x4F8BEDAC; // When enabled, players spawn around the center when entering a new arena.
    constexpr u32 WhenCheckedAllowsPlayersToMakeEntityNoises = 0xC41FF2D0; // When checked, allows players to make entity noises while in spectator mode.
    constexpr u32 WhenEnabledAllowsPlayersToUseTakeEverything = 0xA9F239B0; // When enabled, allows players to use the 'Take Everything' button to take all items from a chest at o...
    constexpr u32 ChooseBetweenSeveralVariantsOfSameCoreGame = 0x18A5CDDD; // Choose between several variants of the same core game.
    constexpr u32 TheDurationOfInvulnerablePeriodAtStartOf = 0x44FADDCB; // The duration of the invulnerable period at the start of each round.
    constexpr u32 HowQuicklyPlayersWillBecomeHungry = 0x097CF305; // How quickly players will become hungry.
    constexpr u32 HowLongItWillTakeBeforeFoodArrows = 0x3A0B4A6D; // How long it will take before food, arrows, and weapons begin to respawn at the central chests.
    constexpr u32 SelectMapsThatYouWantToPlayWith = 0x75CF2428; // Select the maps that you want to play with.
    constexpr u32 VoteForWhichArenaToPlayInNextRound = 0x31961CE8; // Vote for which arena to play in the next round.
    constexpr u32 WhenEnabledAllowsPlayersThatAreNotYour = 0xFB9D0B2B; // When enabled, allows players that are not your friends to find and join your game.
    constexpr u32 TheMaximumDurationOfEachRound = 0x4C17EF92; // The maximum duration of each round.
    constexpr u32 ShowdownRevealsMiiCharacterNamesNearEndOf = 0x2D851DC2; // Showdown reveals Mii character names near the end of the round.
    constexpr u32 WhenEnabledPlayersInventoryIsReducedToOnly = 0xDA27DA69; // When enabled, players inventory is reduced to only 9 slots.
    constexpr u32 HowSpectatorsWillAppearToOtherPlayers = 0xFE516D5E; // How spectators will appear to other players.
    constexpr u32 SpectatorNoises = 0x099B4826; // Spectator Noises
    constexpr u32 EnableTakeEverything = 0x29D17956; // Enable Take Everything
    constexpr u32 GameType_1 = 0x5BD476FB; // Game Type
    constexpr u32 GracePeriod = 0xA3264AED; // Grace Period
    constexpr u32 HungerRate = 0xACB8B6F3; // Hunger Rate
    constexpr u32 Normal_3 = 0x88ACA38F; // Normal
    constexpr u32 Fast = 0x0EE879B4; // Fast
    constexpr u32 NoneNone = 0x785D3496; // None
    constexpr u32 Slow = 0xF3626403; // Slow
    constexpr u32 ItemRespawn = 0x46460E2B; // Item Respawn
    constexpr u32 MapVote = 0x1A66548E; // Map Vote
    constexpr u32 MinutesMin = 0xB80E547F; // {*MINUTES*} min
    constexpr u32 MinutesMins = 0x82557E0C; // {*MINUTES*} mins
    constexpr u32 MinutesMinutes = 0x3A322500; // {*MINUTES*} minutes
    constexpr u32 Disabled = 0xB10B55CF; // Disabled
    constexpr u32 PublicGame = 0x3FC1A0BD; // Public Game
    constexpr u32 RoundLength = 0x908811F4; // Round Length
    constexpr u32 SecondsSec = 0xB58FEE78; // {*SECONDS*} sec
    constexpr u32 SecondsSeconds = 0xE9CFBB56; // {*SECONDS*} seconds
    constexpr u32 SecondsSecs = 0x4DDF2DA3; // {*SECONDS*} secs
    constexpr u32 EnableShowdown = 0x43772E44; // Enable Showdown
    constexpr u32 SmallInventory = 0x5B879DFF; // Small Inventory
    constexpr u32 SpectatorMode = 0x901C1FE8; // Spectator Mode
    constexpr u32 Bat_1 = 0xE1A168A0; // Bat
    constexpr u32 Invisible_1 = 0xFB298FE6; // Invisible
    constexpr u32 Unlimited = 0xD2691EC2; // Unlimited
    constexpr u32 Type = 0x05B35DD2; // Type
    constexpr u32 Vote_1 = 0x44C3150D; // Vote
    constexpr u32 PlayerWon = 0xA2A6C763; // {*PLAYER*} won!
    constexpr u32 PlayerS = 0x57A4FDA9; // player(s)
    constexpr u32 Players_1 = 0x04E925CE; // Players
    constexpr u32 TheJoinMenuWillAllowYouToJoin = 0x67DB357B; // The Join menu will allow you to join Public games, with players that are not your friends.
    constexpr u32 PublicGame_1 = 0x5642F776; // Public Game
    constexpr u32 QuickMatch = 0xD405CAA8; // Quick Match
    constexpr u32 RejectAlliance = 0x350AA150; // Reject Alliance
    constexpr u32 QuantityOrMoreAdditionalPlayersAreRequiredTo = 0xAAE0D4FF; // {*QUANTITY*} or more additional players are required to start the round...
    constexpr u32 ChangingGame = 0x9760A9E7; // Changing game!
    constexpr u32 RoundEnd = 0xC4219DE3; // Round end!
    constexpr u32 EndingGame = 0x69E5CA0B; // Ending game!
    constexpr u32 CouldNotDetermineAWinner = 0xE57DB473; // Could not determine a winner!
    constexpr u32 RoundStart = 0x7CCCD9D4; // Round start!
    constexpr u32 Starting = 0x52F1EF84; // Starting
    constexpr u32 PlayerIsWinner = 0xA8983745; // {*PLAYER*} is the winner!
    constexpr u32 RoundsRoundsWon = 0x063C9539; // {*ROUNDS*} Rounds Won
    constexpr u32 SecondS = 0xE5800C3A; // second(s)
    constexpr u32 SelectMap = 0x0F7AE41A; // Select Map
    constexpr u32 SelectMaps = 0x88C46BF1; // Select Maps
    constexpr u32 SelectType = 0x66F20471; // Select Type
    constexpr u32 SelectingMode = 0xCFEB0335; // Selecting mode
    constexpr u32 TheHostHasDisabledAllSkins = 0xEC40FD19; // The host has disabled all skins.
    constexpr u32 TheHostHasEnabledAllSkins = 0xC42F642F; // The host has enabled all skins.
    constexpr u32 TheMiniGameSettingsHaveBeenUpdatedByHost = 0xBA3DA348; // The Mini Game Settings have been updated by the host.
    constexpr u32 MiniGameSettings = 0x6ABE4799; // Mini Game Settings
    constexpr u32 Short = 0x47958FD3; // Short
    constexpr u32 ShowdownHasStartedMiiCharacterNamesAreNow = 0xD296C94C; // Showdown has started. Mii character names are now visible!
    constexpr u32 Showdown = 0x7ABF0862; // SHOWDOWN!
    constexpr u32 YouHave1LifeRemaining = 0x989F7641; // You have 1 life remaining!
    constexpr u32 YouAreNowSpectating = 0xB0B23BCD; // You are now spectating
    constexpr u32 Spectator = 0xFEBED1B8; // Spectator
    constexpr u32 Start = 0xB6C25251; // start
    constexpr u32 Survivor_1 = 0x2473F5A1; // Survivor
    constexpr u32 TargetsTargetsReached = 0xE8D54668; // {*TARGETS*} targets reached
    constexpr u32 PlayerWasAddedToTeam = 0xADC5F08E; // {*PLAYER*} was added to {*TEAM*}
    constexpr u32 YouWereAddedToTeam = 0x87C37625; // You were added to {*TEAM*}
    constexpr u32 MaxTeamSizeIsSize = 0x40BC050C; // Max team size is {*SIZE*}!
    constexpr u32 TeamS = 0x137F436F; // team(s)
    constexpr u32 TeamsAreDisabled = 0xB7FC5190; // Teams are disabled!
    constexpr u32 TimeAlive = 0x6F5446DF; // Time alive: 
    constexpr u32 WaitingForMoreThanThanQuantityObjectTo = 0xA19C12DB; // Waiting for more than than {*QUANTITY*} {*OBJECT*} to {*EVENT*}...
    constexpr u32 WaitingForAtLeastQuantityObjectToEvent = 0x431EEECE; // Waiting for at least {*QUANTITY*} {*OBJECT*} to {*EVENT*}...
    constexpr u32 WaitingForLessThanQuantityObjectToEvent = 0x2FB55D20; // Waiting for less than {*QUANTITY*} {*OBJECT*} to {*EVENT*}...
    constexpr u32 WaitingForNoMoreThanQuantityObjectTo = 0xB8AF706D; // Waiting for no more than {*QUANTITY*} {*OBJECT*} to {*EVENT*}...
    constexpr u32 RoundEndInQuantityObject = 0x1B75FFCC; // Round end in {*QUANTITY*} {*OBJECT*}...
    constexpr u32 InitializingDSeconds = 0x0E73497D; // Initializing: %d seconds
    constexpr u32 InvulnerabilityWearsOffInDSeconds = 0xE028E842; // Invulnerability wears off in %d seconds!
    constexpr u32 TimeToGameChangeDSeconds = 0xAF2E63A6; // Time to game change: %d seconds
    constexpr u32 TimeToRoundEndDSeconds = 0xC1A090D6; // Time to round end: %d seconds
    constexpr u32 TimeToStartDSeconds = 0xD5566021; // Time to start: %d seconds
    constexpr u32 NotEnoughSurvivorsToTeamUp = 0x09988B49; // Not enough survivors to team up
    constexpr u32 YouVePlayedThisMiniGameMaximumNumber = 0xE1E3D003; // You've played this Mini Game the maximum number of times. Would you like to unlock the full version?
    constexpr u32 MiniGameTrialsAreNotAvailableOffline = 0xD9C450BD; // Mini Game trials are not available offline.
    constexpr u32 YouAreUsingATrialVersionOfThis = 0xB4ADC578; // You are using a trial version of this Mini Game, you have {*COUNT*} more trials remaining.
    constexpr u32 MiniGameTrial = 0x8C8A527C; // Mini Game Trial
    constexpr u32 Any_1 = 0x189A3627; // Any
    constexpr u32 Custom_1 = 0xA0F8061A; // Custom
    constexpr u32 Description = 0xD5923BD8; // Description
    constexpr u32 Mixed = 0x34F502C2; // Mixed
    constexpr u32 Votes = 0xBEEE0712; // Votes
    constexpr u32 WaitingForDataLoad = 0x06E12057; // Waiting for data load
    constexpr u32 WaitingForQuantityOrMorePlayersToBe = 0x6ACB714A; // Waiting for {*QUANTITY*} or more players to be ready...
    constexpr u32 Winner = 0x9148F7E8; // Winner
    constexpr u32 Draw = 0xD2622BFA; // DRAW!
    constexpr u32 YouWonMedalMedal = 0x4D4CD759; // You won the {*MEDAL*} medal
    constexpr u32 WrongWay = 0xDDE377CA; // WRONG WAY!
    constexpr u32 YouLost = 0xCC1D9A09; // You Lost
    constexpr u32 YouWon = 0x5DFE5D63; // You Won
    constexpr u32 Yourself = 0xFA198C24; // Yourself
    constexpr u32 ChestRefill = 0xAA27B127; // Chest Refill
    constexpr u32 ChestsWillRefillWithNewItemsDuringGame = 0xBFD9BF09; // Chests will refill with new items during the game.
    constexpr u32 HungerSettings = 0x1CBFAB4A; // Hunger Settings
    constexpr u32 DefinesHowFastAPlayerWillGetExhausted = 0xF7C16B2C; // Defines how fast a player will get exhausted.
    constexpr u32 Normal_4 = 0x1EA80257; // Normal
    constexpr u32 TheStandardHungerSettingsSpecificallyDesignedForBattle = 0x9A084979; // The standard hunger settings, specifically designed for Battle.\r\nPlayers will be able to heal and ...
    constexpr u32 AntiCamper = 0xF8A587EE; // Anti Camper
    constexpr u32 SlightlyRebalancedHungerSettingsToPreventPlayersFrom = 0x3CE24768; // Slightly rebalanced hunger settings to prevent players from staying in one place.
    constexpr u32 FastHealing = 0xD2A30D85; // Fast Healing
    constexpr u32 PlayersHealFasterThanUsual = 0x175DEEBB; // Players heal faster than usual.
    constexpr u32 NoStarving = 0xACA0931C; // No Starving
    constexpr u32 PlayersWillNeverTakeStarvationDamage = 0xA7BA696A; // Players will never take starvation damage.
    constexpr u32 AlwaysHealing = 0x869E18B3; // Always Healing
    constexpr u32 PlayersWillConstantlyRegenerateHealthOverTimeBut = 0x4B98883D; // Players will constantly regenerate health over time, but won't be able to sprint if they are too hun...
    constexpr u32 NoHunger = 0x609B9E4A; // No Hunger
    constexpr u32 TheHungerBarIsntUsedAtAllPlayers = 0xABD0762C; // The hunger bar isn't used at all; players will always be able to sprint, but never be able to heal o...
    constexpr u32 LeadFeet = 0x3A9923E1; // Lead Feet
    constexpr u32 SprintingJumpingAndSwimmingCauseMuchMoreExhaustion = 0x6C2BA0FF; // Sprinting, jumping, and swimming cause much more exhaustion than usual.
    constexpr u32 AlwaysHungry = 0x1496A978; // Always Hungry
    constexpr u32 EveryActionCausesMoreExhaustionThanUsual = 0xFC881BAE; // Every action causes more exhaustion than usual.
    constexpr u32 RememberToExploreAreaWhileTryingToSurvive = 0x79E5667B; // Remember to explore the area while trying to survive. Each map contains hidden chests that will have...
    constexpr u32 AtStartOfRoundreIsAGracePeriod = 0xEA36ABC3; // At the start of the round there is a Grace Period where all players are invulnerable. Use this time ...
    constexpr u32 TowardsEndOfARoundAShowdownWill = 0x2653F950; // Towards the end of a round, a Showdown will occur. During a Showdown, Mii character names are visibl...
    constexpr u32 YouDiedYouCanSpectateSurvivingPlayersUntil = 0xB5800810; // You died! You can spectate the surviving players until the next round. You can fly around or follow ...
    constexpr u32 YouReSpectatingAsAMobFlyIn = 0xE28E0A7C; // You're spectating as a mob! Fly in the faces of other players and make noises with {*CONTROLLER_ACTI...
    constexpr u32 ThisIsFollowModeYouCanSwitchPlayers = 0xEC671466; // This is follow mode. You can switch players with {*CONTROLLER_ACTION_SPECTATE_PREV*} and {*CONTROLLE...
    constexpr u32 RememberThatreAreDifferentWaysToWinMaybe = 0xE0684AD1; // Remember that there are different ways to win. Maybe you could try hiding, hoarding equipment or tea...
    constexpr u32 WheneverYouPickUpATypeOfArmor = 0xC2572B9B; // Whenever you pick up a type of armor you aren't already wearing, it will be automatically equipped.
    constexpr u32 YourHotbarNowRefillsWithNewItemsFrom = 0xFF97930F; // Your hotbar now refills with new items from your inventory if there are empty slots. Try dropping it...
    constexpr u32 TheBowNowHasAnArrowCountShowing = 0x7416462D; // The Bow now has an Arrow count showing how many Arrows that you have left.
    constexpr u32 SomeOfChestsAreCurrentlyBeingRefilledWith = 0x92614A33; // Some of the chests are currently being refilled with new items. Be quick or your opponents will get ...
    constexpr u32 TheLastSurvivingPlayerIsWinnerDefeatingOther = 0x2272922B; // The last surviving player is the winner. Defeating other players will improve your chances, but you ...
    constexpr u32 ActionsLikeSwimmingJumpingAndRunningCauseYour = 0x6F523BBE; // Actions like swimming, jumping and running cause your hunger bar to deplete more. Make sure you alwa...
    constexpr u32 YouWillStillRegenerateHealthWithALow = 0xA85A4173; // You will still regenerate health with a low hunger level, however this will cause your hunger bar to...
    constexpr u32 YouCanAlwaysSprintInThisMiniGame = 0x8257C70A; // You can always sprint in this mini game, as long as your hunger bar isn't empty.
    constexpr u32 ThereIsNowADamageIndicatorOnYour = 0x3440F824; // There is now a damage indicator on your crosshair. It will help you to determine the direction of yo...
    constexpr u32 TheItemsInEachOfStartingChestsAre = 0x88938BD8; // The items in each of the starting chests are tuned for a different play style.
    constexpr u32 YouWillAutoSprintDuringRound = 0x02DF684F; // You will auto-sprint during the round.
    constexpr u32 ItemSetSet = 0x5CCDB447; // Item Set
    constexpr u32 Normal_5 = 0x9D428428; // Normal
    constexpr u32 AStandardBalancedSetOfItems = 0xE3D04B5E; // A standard, balanced set of items.
    constexpr u32 NoArmor = 0xC344FE91; // No Armor
    constexpr u32 NoArmorItemsAtAll = 0xFDF2D6AF; // No armor items at all!
    constexpr u32 HighPower = 0xE94778FA; // High Power
    constexpr u32 TheMostPowerfulItemsInMinecraft = 0x172A369C; // The most powerful items in Minecraft.
    constexpr u32 Decayed = 0x0F49F363; // Decayed
    constexpr u32 EveryItemBreaksAfterOnlyAFewUses = 0x931AB4AD; // Every item breaks after only a few uses.
    constexpr u32 FoodCentral = 0x354C6DCC; // Food Central
    constexpr u32 OnlyCentralChestsHaveFoodAndOuterChests = 0x32400C9A; // Only the central chests have food, and the outer chests don't have any!
    constexpr u32 Random = 0x6482AE73; // Random
    constexpr u32 PickARandomItemSetEveryRoundTo = 0x597A317D; // Pick a random item set every round to keep things fresh.
    constexpr u32 LastSurvivingPlayerWins = 0xED45127B; // Last surviving player wins!
    constexpr u32 WhenYouCreateABattleMiniGameYou = 0x7A0C9966; // When you create a Battle Mini Game you can choose which maps to play from the Select Maps button in ...
    constexpr u32 ThisAreaIsLobbyPlayersCanWaitHere = 0xE18D25CC; // This area is the Lobby. Players can wait here between rounds. When you're ready to play, press {*CON...
    constexpr u32 ThisIsScoreboardItShowsStatsAndAwarded = 0x1015193C; // This is the Scoreboard. It shows stats and awarded medals for each player. After you close it, you c...
    constexpr u32 MapSize = 0xF8DF77CE; // Map Size
    constexpr u32 Auto_1 = 0x0CF546B6; // Auto
    constexpr u32 CentralSpawnHasBeenDisabled = 0xD5232B99; // Central Spawn has been disabled!
    constexpr u32 ChooseBetweenSmallAndLargeMapsOrLet = 0x2A5C55C8; // Choose between Small and Large maps or let the system decide automatically.
    constexpr u32 ChooseBetweenSmallAndLargeMapsOrLetRNlargeAreLikeBut = 0x27969DEF; // Choose between Small and Large maps or let the system decide automatically.\r\nLarge+ maps are like ...
    constexpr u32 Large_1 = 0x9DD59A16; // Large+
    constexpr u32 Large_2 = 0x4EF02404; // Large
    constexpr u32 Small = 0xBA592D3E; // Small
    constexpr u32 NaturalRegeneration = 0x1D7E9B6F; // Natural Regeneration
    constexpr u32 WhenEnabledPlayersWillRegenerateHealthOverTime = 0xB66F0561; // When enabled, the players will regenerate health over time.
    constexpr u32 RoundCountCount = 0x9AD3440E; // Round Count
    constexpr u32 NumberOfRoundsGameWillLast = 0x5E1BB988; // Number of Rounds the game will last.
    constexpr u32 BattleSettings = 0xD9C9100D; // Battle Settings
    constexpr u32 SmallInventory_1 = 0xDDC824DA; // Small Inventory
    constexpr u32 IfSelectedOnlyAReducedInventoryWillBe = 0xE7BA74FC; // If selected only a reduced inventory will be available.
    constexpr u32 TakeEverything = 0x7356945D; // Take Everything
    constexpr u32 PlayersWillBeAbleToEmptyAChestInOneGo = 0xE8F6DE23; // Players will be able to empty a chest in one go.
    constexpr u32 Casual = 0x09038DC1; // Casual
    constexpr u32 Competitive = 0x6829D25F; // Competitive
    constexpr u32 CreateAGameWhereRoundsWillBeChosen = 0x89B0CF2C; // Create a game where the rounds will be chosen by a vote, with players being able to choose between h...
    constexpr u32 CreateAGameWhereAllPlayersHaveShovels = 0x41AFAC5C; // Create a game where all players have Shovels, and use these to dig blocks. When the Showdown timer s...
    constexpr u32 CreateAGameWhereAllPlayersHaveUnlimited = 0x9F01E42A; // Create a game where all players have unlimited Snowballs, and can throw these to destroy blocks.
    constexpr u32 BreakBlockAPlayerIsStandingOnTo = 0xA086B6B3; // Break the block a player is standing on to make them fall to their death!
    constexpr u32 JoinAGameWhichCouldHaveAllRounds = 0xF4CD599F; // Join a game which could have all rounds with Snowballs, all rounds with Shovels, or each round being...
    constexpr u32 JoinAGameWhereRoundsWillChosenBy = 0x30045CC2; // Join a game where the rounds will chosen by a vote, with players being able to choose between having...
    constexpr u32 JoinAGameWhereAllPlayersHaveShovels = 0x4E43A572; // Join a game where all players have Shovels, and use these to dig blocks. When the Showdown timer sta...
    constexpr u32 JoinAGameWhereAllPlayersHaveUnlimited = 0xC708BB04; // Join a game where all players have unlimited Snowballs, and can throw these to destroy blocks.
    constexpr u32 LayerCount = 0x50849384; // Layer Count
    constexpr u32 DefineHowManyLayersreWillBeOrSet = 0x35EF3122; // Define how many layers there will be or set to automatic.
    constexpr u32 LayerDecay = 0xD5EFA28D; // Layer Decay
    constexpr u32 LayersWillDecayOverTime = 0x20C9A193; // Layers will decay over time.
    constexpr u32 LayerScale = 0x36DF2177; // Layer Scale
    constexpr u32 DefineScaleOfALayerOrSetTo = 0x0D7DAE19; // Define the scale of a layer or set to automatic scaling.
    constexpr u32 TumbleSettings = 0x6044B44E; // Tumble Settings
    constexpr u32 SpectatorParticipation = 0x40EA8EFC; // Spectator Participation
    constexpr u32 WhenEnabledSpectatorsCanSlowlyBreakBlocks = 0xA541F7CA; // When enabled, spectators can slowly break blocks.
    constexpr u32 WatchYourBackThereMayBeAPlayer = 0xDBA695E0; // Watch your back! There may be a player behind you...
    constexpr u32 WhenYouAreASpectatorYouCanExplore = 0x4DAE051B; // When you are a spectator, you can explore the outer arena.
    constexpr u32 IfYouWalkOnASoulSandBlock = 0x27AB8AB2; // If you walk on a Soul Sand block, you probably won't win...
    constexpr u32 TryToAvoidFallingInLava = 0x99B2F9ED; // Try to avoid falling in the lava...
    constexpr u32 HittingTntWithASnowballCanHaveMind = 0x73B07F84; // Hitting TNT with a Snowball can have mind blowing results!
    constexpr u32 TryToAnticipateWhereAPlayerIsGoing = 0xE5B7EEBF; // Try to anticipate where a player is going, and break the blocks they are going to stand on.
    constexpr u32 TheFirstPlayerToWinThreeRoundsWinsGame = 0xBFB57456; // The first player to win three rounds wins the game!
    constexpr u32 LeadingPlayersWillHaveAParticleEffectOnm = 0x31BCE391; // Leading players will have a particle effect on them. It's a good idea to target them!
    constexpr u32 Shovels = 0x6EA6266A; // Shovels
    constexpr u32 AllPlayersHaveShovelsAndUseseToDig = 0xDF7A97CC; // All players have Shovels, and use these to dig blocks. When the Showdown timer starts at the end of ...
    constexpr u32 Snowballs = 0x48A3AC01; // Snowballs
    constexpr u32 AllPlayersHaveUnlimitedSnowballsAndCanThrowse = 0x5486471F; // All players have unlimited Snowballs, and can throw these to destroy blocks.
    constexpr u32 BowsAndKnockbackArrows = 0x77E28504; // Bows and Knockback Arrows
    constexpr u32 AllPlayersHaveABowsWithAnUnlimited = 0x5AF26EA2; // All players have a Bows with an unlimited supply of Knockback Arrows. They will destroy blocks but a...
    constexpr u32 Fireworks_1 = 0x304C4139; // Fireworks
    constexpr u32 AllPlayersHaveUnlimitedFireworkRocketsWhenyHit = 0xFCC2DF67; // All players have unlimited Firework Rockets, when they hit a block or explode they will destroy bloc...
    constexpr u32 LevitatePotions = 0x93162DC9; // Levitate Potions
    constexpr u32 AllPlayersHaveUnlimitedLevitatePotionsThatCan = 0xBB83A837; // All players have unlimited Levitate Potions that can be used on other players or themselves. They wi...
    constexpr u32 Tnt_1 = 0x667F2B9D; // TNT
    constexpr u32 AllPlayersHaveUnlimitedTntTheyCanPlace = 0xCDA0E4E3; // All players have unlimited TNT. They can place it to destroy all blocks nearby.
    constexpr u32 TheNextRoundWillBeChosenByA = 0x321E9E40; // The next round will be chosen by a vote, with players being able to choose between having either Sho...
    constexpr u32 TheNextRoundWillBeAGameWhere = 0xEA1CA730; // The next round will be a game where all players have Shovels, and use these to dig blocks. When the ...
    constexpr u32 TheNextRoundWillBeAGameWhereUnlimitedThrowse = 0x28850ED6; // The next round will be a game where all players have unlimited Snowballs, and can throw these to des...
    constexpr u32 _10th = 0x62A47DB7; // 10th
    constexpr u32 _11th = 0x7C6E0E3E; // 11th
    constexpr u32 _12th = 0x7BCD68A5; // 12th
    constexpr u32 _13th = 0x7F7770AC; // 13th
    constexpr u32 _14th = 0xE8B9ED93; // 14th
    constexpr u32 _15th = 0xEC63F59A; // 15th
    constexpr u32 _16th = 0xEBC35001; // 16th
    constexpr u32 _1st = 0x90EACB24; // 1st
    constexpr u32 _2nd = 0x03457C02; // 2nd
    constexpr u32 _3rd = 0x84F90F77; // 3rd
    constexpr u32 _4th = 0xC8427B82; // 4th
    constexpr u32 _5th = 0xCB5D8A1B; // 5th
    constexpr u32 _6th = 0xBEFEE530; // 6th
    constexpr u32 _7th = 0xB5CCFB09; // 7th
    constexpr u32 _8th = 0xBFA4F26E; // 8th
    constexpr u32 _9th = 0xD357A767; // 9th
    constexpr u32 BlueRing = 0x2BC51019; // Blue Ring!
    constexpr u32 Checkpoint = 0x464A6890; // Checkpoint!
    constexpr u32 Combo = 0x9BA40FEE; // Combo!
    constexpr u32 CreateScoreAttack = 0xB6B52815; // Create Score Attack
    constexpr u32 CreateAScoreAttackGameAndCompeteTo = 0x0B4516CB; // Create a Score Attack game, and compete to see who can get the most points!
    constexpr u32 CreateTimeAttack = 0x6118F199; // Create Time Attack
    constexpr u32 CreateATimeAttackGameAndCompeteTo = 0xB746DEC7; // Create a Time Attack game, and compete to get to the end before everyone else!
    constexpr u32 ShowGlideGhost = 0x9791B32B; // Show Glide Ghost
    constexpr u32 Finish = 0x3E6BA0C9; // Finish!
    constexpr u32 GetReady = 0xD485F970; // Get Ready!
    constexpr u32 Ghost = 0x72CEDE7D; // GHOST
    constexpr u32 HaveAGhostFlyPathThatYouTook = 0x15970643; // Have a ghost fly the path that you took on your Personal Best run.
    constexpr u32 ShowRouteThatYourGhostIsTaking = 0x1F0561D9; // Show the route that your ghost is taking.
    constexpr u32 Go = 0x2771B39A; // GO!
    constexpr u32 GreenRing = 0xABAB420C; // Green Ring!
    constexpr u32 HurryUp = 0x553A9C24; // Hurry Up
    constexpr u32 JoinAnyTimeAttackOrScoreAttackGame = 0x26FC3C0E; // Join any Time Attack or Score Attack game.
    constexpr u32 JoinScoreAttack = 0x5630081B; // Join Score Attack
    constexpr u32 JoinAScoreAttackGameAndCompeteTo = 0x5840CCF5; // Join a Score Attack game, and compete to see who can get the most points!
    constexpr u32 JoinTimeAttack = 0x46F86627; // Join Time Attack
    constexpr u32 JoinATimeAttackGameAndCompeteTo = 0x04E09C09; // Join a Time Attack game, and compete to get to the end before everyone else!
    constexpr u32 GlideScoreAttack = 0x6905EA98; // Glide Score Attack
    constexpr u32 GlideTimeAttack = 0x3E07E07C; // Glide Time Attack
    constexpr u32 Flawless = 0xE4CE5068; // Flawless
    constexpr u32 BrokenHeart = 0x5C9FCE59; // Broken heart
    constexpr u32 OwnerOfALonelyHeart = 0xB87442AA; // Owner of a Lonely Heart
    constexpr u32 Recycler = 0xEAA09456; // Recycler
    constexpr u32 Lost = 0x6EDA42F4; // Lost!
    constexpr u32 PhotoFinish = 0xE27A7A72; // Photo Finish
    constexpr u32 BetterLuckNextTime = 0x45C19F25; // Better Luck Next Time
    constexpr u32 YouTried = 0x6BC4198E; // You Tried...
    constexpr u32 TookScenicRoute = 0x91C693F7; // Took the Scenic Route
    constexpr u32 DoYouEvenGlide = 0x87B53B18; // Do you even Glide?
    constexpr u32 Invincible = 0x48AAC91F; // Invincible!
    constexpr u32 FlawlessVictory = 0xC6338D98; // Flawless Victory
    constexpr u32 DontFearReaper = 0xFDC49843; // Don't Fear the Reaper
    constexpr u32 CheatingDeath_1 = 0x79CA8ED4; // Cheating Death
    constexpr u32 Icarus = 0xADD38DE6; // Icarus
    constexpr u32 FastLearnerLearner = 0x47708614; // Fast Learner
    constexpr u32 Hustler = 0x89F55709; // Hustler
    constexpr u32 ComebackKid = 0xAB7835CB; // Comeback Kid
    constexpr u32 IsAnybodyreYet = 0xC9D3B088; // Is anybody there yet?
    constexpr u32 Highscore = 0x98BCFDC3; // Highscore
    constexpr u32 DuckOrGrouse = 0xC8D305C9; // Duck or Grouse?
    constexpr u32 GreenBlockRoute = 0xDC31EA7F; // Green Block Route
    constexpr u32 GreenHorn = 0xDA6B1EBC; // Green horn
    constexpr u32 YellowBlockRoute = 0xCC9401CF; // Yellow Block Route
    constexpr u32 Pointless = 0x1B041C00; // Pointless
    constexpr u32 CyanBlockRoute = 0x3B1C2825; // Cyan Block Route
    constexpr u32 TheLongGame = 0x5BC6905A; // The Long Game
    constexpr u32 SlowAndSteady = 0x8FDDCE64; // Slow and Steady
    constexpr u32 Floater = 0x01B69514; // Floater
    constexpr u32 Ace = 0x18A608DA; // Ace
    constexpr u32 Fastest = 0xB3042861; // Fastest
    constexpr u32 Faster = 0x6B80D29C; // Faster
    constexpr u32 Rocket = 0x0932AB28; // Rocket
    constexpr u32 FlyingFish = 0x920E2221; // Flying Fish
    constexpr u32 Explorer_1 = 0xC9E72AE0; // Explorer
    constexpr u32 Diversion = 0x13F33157; // Diversion
    constexpr u32 DMS = 0xC6565405; // %d m/s
    constexpr u32 DBlueRings = 0x26E461C3; // %d Blue Rings
    constexpr u32 DxCombo = 0xB6B044DF; // %dX Combo!
    constexpr u32 DGreenRings = 0xF5F7CEF6; // %d Green Rings
    constexpr u32 DSpeedboosts = 0x493F2542; // %d Speedboosts
    constexpr u32 DYellowRings = 0x9A3BB291; // %d Yellow Rings
    constexpr u32 PersonalBest = 0x58973D2D; // Personal Best!
    constexpr u32 FinalRound = 0x3F46D5D3; // Final Round!
    constexpr u32 RoundD = 0x91A1400C; // Round %d
    constexpr u32 SoloRound = 0xAB5ED6F8; // Solo Round!
    constexpr u32 ShowGlideGhostPath = 0xCE0F55B3; // Show Glide Ghost Path
    constexpr u32 OfflineOnlyModeWhereYouCanPracticeLevel = 0x29BFCBDB; // Offline only mode where you can practice the level using additional options that allow you to restar...
    constexpr u32 Solo = 0x2E1306D9; // Solo
    constexpr u32 Speedboost = 0x900B0508; // Speedboost!
    constexpr u32 DSecondsToReachEnd = 0x2E19C8B8; // %d seconds to reach the end!
    constexpr u32 SharpTurnsWillSlowYouDownQuiteALot = 0x87A99AF1; // Sharp turns will slow you down quite a lot.
    constexpr u32 FlyIntormalsToGainAltitudeAndBoostsTo = 0xADAC155A; // Fly into thermals to gain altitude, and boosts to gain speed.
    constexpr u32 InScoreAttackFlyingThroughRingsWillGain = 0xD3AE8FC3; // In Score Attack, flying through rings will gain points; Green rings are worth the least, and Blue ri...
    constexpr u32 YouCanQuicklyLookBehindYouWhileFlying = 0xF9B10A2C; // You can quickly look behind you while flying, at the press of a button.
    constexpr u32 TryFlyingInBothFirstAndThirdPerson = 0x1FB38495; // Try flying in both first and third person!
    constexpr u32 YouCanHitWallsOrCeilingThreeTimes = 0x45B5FEFE; // You can hit the walls or ceiling three times, but you'll die instantly if you ever stop flying.
    constexpr u32 AfterOnePlayerReachesEndEveryoneElseWill = 0x6BB87967; // After one player reaches the end, everyone else will have to finish the level quickly!
    constexpr u32 MaintainingAGoodBalanceOfSpeedAndAltitude = 0x31934D40; // Maintaining a good balance of speed and altitude is the key to victory.
    constexpr u32 InScoreAttackIfYouDontReachEndn = 0x5795C7A9; // In Score Attack, if you don't reach the end then your score doesn't count.
    constexpr u32 InTimeAttackPlayerWithSingleFastestTime = 0x7222ACB9; // In Time Attack, the player with the single fastest time in any of the three rounds wins.
    constexpr u32 YellowBoostsPropelYouInDirectionArrowsPoint = 0x4C203250; // Yellow Boosts propel you in the direction the arrows point; Orange Boosts will speed you up in the d...
    constexpr u32 GreenRingsAreWorth3PointsYellowRings = 0xBE27A18B; // Green rings are worth 3 points, Yellow rings are worth 5 points, and Blue rings are worth 7 points.
    constexpr u32 SetsOfBeaconsAreCheckpointsIfYouDie = 0x98252722; // Sets of Beacons are Checkpoints. If you die, you'll respawn at the last Checkpoint you reached.
    constexpr u32 FlyDownToGainSpeedButBeCareful = 0x0A2C965D; // Fly down to gain speed, but be careful! Gaining height is more difficult...
    constexpr u32 ScoreAttack = 0x1C7D5232; // Score Attack
    constexpr u32 TimeAttack = 0xC45287B7; // Time Attack
    constexpr u32 Winner_1 = 0x5051F85B; // Winner!
    constexpr u32 WrongWay_1 = 0xE39432B1; // WRONG WAY!
    constexpr u32 YellowRing = 0x4D66C2AB; // Yellow Ring!
    constexpr u32 YouCrashed = 0x7B5878DC; // You Crashed
    constexpr u32 MinecartSounds = 0xEB601B20; // Minecart Sounds
    constexpr u32 MiniGame = 0xC0AE8C5E; // Mini Game
    constexpr u32 Battle = 0x42E0AC30; // Battle
    constexpr u32 Tumble = 0xB4E81B6B; // Tumble
    constexpr u32 Glide = 0x8EE5A102; // Glide
    constexpr u32 AllMiniGames = 0xBFAC03C8; // All Mini Games
    constexpr u32 MiniGames = 0x3C6FA355; // Mini Games
    constexpr u32 Mins = 0xABFB1191; // Mins
    constexpr u32 MobGriefing = 0x2A7C56C4; // Mob Griefing
    constexpr u32 MobLoot = 0x4AAC0BC3; // Mob Loot
    constexpr u32 MobSpawning = 0x3DECAC90; // Mob Spawning
    constexpr u32 Moderator = 0xEE5328FD; // Moderator
    constexpr u32 MoreOptions = 0xBE1D5B9E; // More Options
    constexpr u32 Mule = 0x98B4F19D; // Mule
    constexpr u32 YouCannotJoinThisGame = 0x98521F17; // You cannot join this game.
    constexpr u32 FailedToJoinGameAsreAreNoSpacesLeft = 0xF18FCCD0; // Failed to join game as there are no spaces left
    constexpr u32 GameFull = 0x1AFA54B5; // Game full
    constexpr u32 TheMiiYouHaveSelectedIsAlreadyBeing = 0x3103BE06; // The Mii you have selected is already being used by another player in this game.
    constexpr u32 MiiInUse = 0x624AEAD3; // Mii in use
    constexpr u32 Mooshroom = 0x2775807C; // Mooshroom
    constexpr u32 YouAreNotSignedInInOrderTo = 0x221D8D9D; // You are not signed in.  In order to play this game, you will need to be signed in.  Do you want to s...
    constexpr u32 SignIn = 0x14B60640; // Sign in
    constexpr u32 EnterCaption = 0xBDAE3A9A; // Enter Caption
    constexpr u32 EnterACaptionForYourPost = 0x85E0C3C8; // Enter a caption for your post
    constexpr u32 EnterDescription = 0x59CF6145; // Enter Description
    constexpr u32 EnterADescriptionForYourPost = 0x14C892BF; // Enter a description for your post
    constexpr u32 EnterTitle = 0x0C81626C; // Enter Title
    constexpr u32 EnterATitleForYourPost = 0xE9C552CE; // Enter a title for your post
    constexpr u32 NameYourWorld = 0x9C56587E; // Name Your World
    constexpr u32 EnterANameForYourWorld = 0x8D21D30C; // Enter a name for your world
    constexpr u32 NaturalRegeneration_1 = 0x6F7D8591; // Natural Regeneration
    constexpr u32 NetherStar = 0xCD3F5C97; // Nether Star
    constexpr u32 OnlineNetwork = 0x031BC5F6; // Online Network
    constexpr u32 LocalNetwork = 0xB02789F8; // Local Network
    constexpr u32 NewerSaveVersion = 0xE7C8AE08; // Newer Save Version!
    constexpr u32 ThisSaveIsOnlyCompatibleWithMinecraft2018 = 0x44090B0A; // This save is only compatible with Minecraft (2018), available to download for free from the Nintendo...
    constexpr u32 NewerSaveVersion_1 = 0xC56642EF; // Newer Save Version
    constexpr u32 No = 0xFDA1B665; // No
    constexpr u32 ThereAreNoDownloadableContentOffersOfThis = 0x84F3E8D2; // There are no downloadable content offers of this type available for this title at the moment.
    constexpr u32 NoGamesFound = 0x91BB232E; // No Games Found
    constexpr u32 FailedToCreateAnOnlineGameAsOne = 0xC47BB15D; // Failed to create an online game as one or more players are not allowed to play multiplayer games on ...
    constexpr u32 FailedToJoinGameAsOneOrMore = 0xCC5A590F; // Failed to join the game as one or more players are not allowed to play multiplayer games on Nintendo...
    constexpr u32 MultiplayerNotAllowed = 0x252AB13F; // Multiplayer not allowed
    constexpr u32 NoPackDefaultSkins = 0xA6517D6B; // No Pack: Default Skins
    constexpr u32 YouAreNotAllowedToCreateJoinThis = 0xFB7F0496; // You are not allowed to create/join this game session because one of your local players has a Member ...
    constexpr u32 YouAreNotAllowedToCreateThisGame = 0xDA0B9859; // You are not allowed to create this game session because one of your local players has a Member Conte...
    constexpr u32 YouAreNotAllowedToJoinThisGame = 0x102AA4B1; // You are not allowed to join this game session because a player in the session has a Member Content p...
    constexpr u32 YouAreNotAllowedToJoinThisGameYourIsTooRestrictivePlease = 0x4D669D55; // You are not allowed to join this game session because your Member Content privilege setting is too r...
    constexpr u32 SelectAStorageDevice = 0x7F168AAA; // Select a storage device
    constexpr u32 ContinueWithoutSaving = 0xE525EA1E; // Continue without saving
    constexpr u32 IfYouDoNotSelectAStorageDevice = 0xB1095FFF; // If you do not select a storage device, game saves will be disabled
    constexpr u32 NoStorageDeviceSelected = 0x0C257612; // No storage device selected
    constexpr u32 YourSelectedStorageDeviceDoesntHaveEnoughFree = 0x108BA8F7; // Your selected storage device doesn't have enough free space to create a game save.
    constexpr u32 NoFreeSpace = 0x16F8ECBA; // No Free Space
    constexpr u32 YouCannotJoinThisGameBecauseItHas = 0xF9885AFF; // You cannot join this game because it has been limited to players who are friends of the host.
    constexpr u32 NowPlaying = 0x91249E7E; // Now playing: 
    constexpr u32 NotUsedNotUsed = 0xF7CD6B5F; // Not Used
    constexpr u32 ToUseMapYouHaveSelectedYouNeed = 0x583E58ED; // To use the map you have selected, you need to unlock this mash-up pack, and restart the game.\r\nWou...
    constexpr u32 ToUseSkinYouHaveSelectedYouNeed = 0xA4671359; // To use the skin you have selected, you need to unlock this skin pack.\r\nWould you like to unlock th...
    constexpr u32 ToUseThisTexturePackForYourWorld = 0x214E2A3A; // To use this texture pack for your world, you need to unlock it, and restart the game.\r\nWould you l...
    constexpr u32 ToUseMapYouHaveSelectedYouNeed_1 = 0x12F9961D; // To use the map you have selected, you need to unlock this map pack, and restart the game.\r\nWould y...
    constexpr u32 YouAreUsingATrialVersionOfTexture = 0x2DA497DA; // You are using a trial version of the texture pack. You will not be able to save this world unless yo...
    constexpr u32 Off = 0xF74DAB3B; // Off
    constexpr u32 Ok_1 = 0x0AD4A4F0; // OK
    constexpr u32 On = 0xC8E108FD; // On
    constexpr u32 OnlineGame = 0x2C692B72; // Online Game
    constexpr u32 Options = 0xB658D2F4; // Options
    constexpr u32 NoDontOverwrite = 0x34D0C598; // No - don't overwrite
    constexpr u32 YourSelectedStorageDeviceAlreadyContainsThisSave = 0xF68D2304; // Your selected storage device already contains this save.  Is it OK to overwrite it?
    constexpr u32 OverwriteSave = 0x4F2ABCA1; // Overwrite save?
    constexpr u32 OverwriteAndSave = 0x1E6C9E56; // Overwrite and save
    constexpr u32 Ocelot = 0xAA44AD8B; // Ocelot
    constexpr u32 PageDOfD = 0x5351D8B1; // Page %d of %d
    constexpr u32 BiomeSpecificStructures = 0x92176858; // Biome Specific Structures
    constexpr u32 Spacing = 0x6D50EED6; // Spacing
    constexpr u32 Ravine = 0x6339594B; // Ravine
    constexpr u32 Caves = 0x7D539616; // Caves
    constexpr u32 Decorations_1 = 0xF5DED1B6; // Decorations
    constexpr u32 StructuresThatVaryAccordingToBiomeTheseAre = 0x30575636; // Structures that vary according to the biome. These are Temples in Jungles, Pyramids in Deserts, Witc...
    constexpr u32 TheExpectedNumberOfBlocksBetweenNeighboringStructures = 0x8EDF1838; // The expected number of blocks between neighboring structures.
    constexpr u32 DeepFissuresInEarthSomeMayReachSurface = 0xFECFE9B5; // Deep fissures in the earth. Some may reach the surface forming canyons.
    constexpr u32 ACollectionOfNaturalCavernsCutIntoStone = 0xA5C5DD98; // A collection of natural caverns cut into Stone, Dirt, Sand, Gravel, Sandstone, or Clay.
    constexpr u32 BiomeDependentFinishingTouchesToWorldGenerationIncludes = 0x28425348; // Biome dependent finishing touches to world generation. Includes ore seams, flowers, long grass, huge...
    constexpr u32 SmallMossyCobblestoneChambersContainingAMonsterSpawner = 0xE764CE4E; // Small mossy cobblestone chambers containing a Monster Spawner.
    constexpr u32 PoolsOfWaterScatteredAcrossSurfaceOfWorld = 0x56D2356A; // Pools of water scattered across the surface of the world.
    constexpr u32 SmallPoolsOfLavaScatteredAcrossSurfaceOf = 0x577A265F; // Small pools of lava scattered across the surface of the world.
    constexpr u32 SystemsOfTunnelsContainingMinecartTracksAndHives = 0xEE2C44C5; // Systems of tunnels containing Minecart tracks and hives of Cave Spiders.
    constexpr u32 TheChanceOfAMineshaftSpawningInA = 0x68D2F300; // The chance of a Mineshaft spawning in a 16x16 block area.
    constexpr u32 UnderwaterTemplesProtectedByGuardiansAndElderGuardians = 0xD3C8C808; // Underwater temples protected by Guardians and Elder Guardians.
    constexpr u32 TheMinimumDistanceBetweenTwoOceanMonumentsAs = 0x16B24193; // The minimum distance between two Ocean Monuments as a percentage of the Spacing parameter.
    constexpr u32 TheExpectedNumberOfBlocksBetweenNeighboringStructures_1 = 0xB66FBFA6; // The expected number of blocks between neighboring structures
    constexpr u32 SubstantialUndergroundComplexesConsistingOfALabyrinthOf = 0x0B538D4E; // Substantial underground complexes consisting of a labyrinth of dark corridors that houses the End Po...
    constexpr u32 TheTotalNumberOfStrongholdsInThisWorld = 0x8BC0F762; // The total number of Strongholds in this world.
    constexpr u32 TheExpectedNumberOfBlocksBetweenNeighboringStrongholds = 0xD29EAF00; // The expected number of blocks between neighboring strongholds.
    constexpr u32 SettlementsSituatedInPlainsSavannaDesertTaigaOr = 0x033103A6; // Settlements situated in Plains, Savanna, Desert, Taiga or Ice Flats biomes. Guarded by Iron Golems a...
    constexpr u32 TheExpectedNumberOfBlocksBetweenNeighbouringVillages = 0x41EA4252; // The expected number of blocks between neighbouring villages.
    constexpr u32 SpecifiesSizeOfVillagesInWorldLargeVillages = 0xFD56FA64; // Specifies the size of the villages in the world. Large villages are likely to have larger buildings ...
    constexpr u32 MansionsFoundInRoofedForestsHomeToVexes = 0x290D33F8; // Mansions found in Roofed Forests. Home to Vexes and Illagers.
    constexpr u32 TheMinimumDistanceBetweenTwoWoodlandMansionsAs = 0x5A86E8E3; // The minimum distance between two Woodland Mansions as a percentage of the Spacing parameter.
    constexpr u32 TheExpectedNumberOfBlocksBetweenNeighboringStructures_2 = 0x732CAD76; // The expected number of blocks between neighboring structures
    constexpr u32 Dungeons = 0x58EDA210; // Dungeons
    constexpr u32 Lakes = 0xEDAA5CE4; // Lakes
    constexpr u32 LavaLakes = 0xAE1B1941; // Lava Lakes
    constexpr u32 AbandonedMineshafts = 0xB502A2BB; // Abandoned Mineshafts
    constexpr u32 Chance = 0x078F50BE; // Chance
    constexpr u32 OceanMonument = 0xFF686D36; // Ocean Monument
    constexpr u32 Separation = 0x2607CA38; // Separation
    constexpr u32 Strongholds = 0x98925CE0; // Strongholds
    constexpr u32 Count = 0x9A935EAC; // Count
    constexpr u32 Count_1 = 0x163EDBEE; // Count
    constexpr u32 Villages = 0x1A0175A8; // Villages
    constexpr u32 Spacing_1 = 0xBAB8B3DC; // Spacing
    constexpr u32 Size = 0x712D488A; // Size
    constexpr u32 WoodlandMansion = 0x9A333426; // Woodland Mansion
    constexpr u32 Parrot = 0x92734C7E; // Parrot
    constexpr u32 Pig = 0x8F3FDC8A; // Pig
    constexpr u32 ZombiePigman = 0xF566D3CC; // Zombie Pigman
    constexpr u32 NintendoSwitch = 0xED3C4BFB; // Nintendo Switch
    constexpr u32 PlayMinecraftNew = 0x27D2DF58; // Play Minecraft (NEW!)
    constexpr u32 PlayConsole = 0x2499B219; // Play Minecraft: Nintendo Switch Edition
    constexpr u32 PlayGame = 0xFE3AF6D9; // Play Game
    constexpr u32 PlayTutorial = 0x4D3C7293; // Play Tutorial
    constexpr u32 TheGameYouAreJoiningIsInYour = 0xA7ACAEBB; // The game you are joining is in your banned level list. \r\nIf you choose to join this game, the leve...
    constexpr u32 SHasEnteredTheEnd = 0xD3560061; // %s has entered The End
    constexpr u32 SHasJoinedGame = 0x941D21C3; // %s has joined the game.
    constexpr u32 SWasKickedFromGame = 0x3677FA23; // %s was kicked from the game.
    constexpr u32 SHasLeftGame = 0x095FCE8B; // %s has left the game.
    constexpr u32 SHasLeftTheEnd = 0x6E3A65E3; // %s has left The End
    constexpr u32 PlayerVotedToKickPlayer2CountOfMax = 0x49B6297D; // {*PLAYER*} voted to kick {*PLAYER2*} ({*COUNT*} of {*MAX_COUNT*})
    constexpr u32 PlayerVsPlayer = 0xFBB3EA51; // Player vs Player
    constexpr u32 Players_2 = 0xEF8B6004; // Players
    constexpr u32 Players_3 = 0xFA81145A; // Players
    constexpr u32 PlayWithoutSaving = 0xA8B82200; // Play without saving
    constexpr u32 PolarBear = 0xE4B7D800; // Polar Bear
    constexpr u32 Potato = 0xE4C1C635; // Potato
    constexpr u32 IncreasesDamageCausedByAffectedPlayersAndMonsters = 0xD7A27A48; // Increases the damage caused by affected players and monsters when attacking.
    constexpr u32 HasNoEffectsCanBeUsedInA = 0x6E3A986B; // Has no effects, can be used in a brewing stand to create potions by adding more ingredients.
    constexpr u32 MakesAffectedPlayersAnimalsAndMonstersImmuneTo = 0xA44E128D; // Makes the affected players, animals, and monsters immune to damage from fire, lava, and ranged Blaze...
    constexpr u32 InstantlyDamagesAffectedPlayersAnimalsAndMonsters = 0xA123A098; // Instantly damages affected players, animals, and monsters.
    constexpr u32 InstantlyRestoresHealthToAffectedPlayersAnimalsAnd = 0xE14DDAF6; // Instantly restores health to the affected players, animals, and monsters.
    constexpr u32 MakesAffectedPlayersAnimalsAndMonstersInvisible = 0x04EDEB57; // Makes affected players, animals and monsters invisible.
    constexpr u32 IncreasesJumpHeightOfAffectedPlayer = 0x552A6DC4; // Increases the jump height of the affected player.
    constexpr u32 IncreasesChanceOfGettingBetterItemsFromFishing = 0x39DD65BF; // Increases the chance of getting better items from fishing.
    constexpr u32 ReducesMovementSpeedOfAffectedPlayersAnimalsAnd = 0x7AB4111A; // Reduces the movement speed of affected players, animals, and monsters. Also reduces a player's sprin...
    constexpr u32 IncreasesMovementSpeedOfAffectedPlayersAnimalsAnd = 0x48E45D20; // Increases the movement speed of affected players, animals, and monsters. Also increases a player's s...
    constexpr u32 MakesDarkAreasAppearAsIfInDaylight = 0x22ABFC9E; // Makes dark areas appear as if in daylight, even under water.
    constexpr u32 DamagesAffectedPlayersAnimalsAndMonstersOverTime = 0x17BB33AA; // Damages the affected players, animals, and monsters over time.
    constexpr u32 RestoresHealthToAffectedPlayersAnimalsAndMonsters = 0xE788A6B7; // Restores health to the affected players, animals, and monsters over time.
    constexpr u32 UsedAsBaseOfAllPotionsUseIn = 0xE4C9F6A8; // Used as the base of all potions. Use in a brewing stand to create potions.
    constexpr u32 AllowsAffectedPlayersToBreathNormallyUnderwater = 0xA04D26FB; // Allows affected players to breath normally underwater.
    constexpr u32 ReducesDamageCausedByAffectedPlayersAndMonsters = 0x7B7BC06D; // Reduces the damage caused by affected players and monsters when attacking.
    constexpr u32 DamagesAffectedPlayersAnimalsAndMonstersOverTime_1 = 0x5AC37593; // Damages affected players, animals, and monsters over time.
    constexpr u32 AwkwardPotion = 0xB8C39575; // Awkward Potion
    constexpr u32 UncraftablePotion = 0xD1664335; // Uncraftable Potion
    constexpr u32 PotionOfFireResistance = 0x59433554; // Potion of Fire Resistance
    constexpr u32 PotionOfHarming = 0x14582BB6; // Potion of Harming
    constexpr u32 PotionOfHealing = 0x4AB4E7B8; // Potion of Healing
    constexpr u32 PotionOfInvisibility = 0x5ABFD449; // Potion of Invisibility
    constexpr u32 PotionOfLeaping = 0x88233440; // Potion of Leaping
    constexpr u32 PotionOfLevitation = 0xDB76107F; // Potion of Levitation
    constexpr u32 PotionOfLuck = 0x30346491; // Potion of Luck
    constexpr u32 MundanePotion = 0xA542DC40; // Mundane Potion
    constexpr u32 PotionOfNightVision = 0x82DFF027; // Potion of Night Vision
    constexpr u32 PotionOfPoison = 0xCB6AA344; // Potion of Poison
    constexpr u32 PotionOfRegeneration = 0x6698CE69; // Potion of Regeneration
    constexpr u32 PotionOfSlowness = 0x179A0664; // Potion of Slowness
    constexpr u32 PotionOfStrength = 0x599A0995; // Potion of Strength
    constexpr u32 PotionOfSwiftness = 0x34AD93A4; // Potion of Swiftness
    constexpr u32 ThickPotion = 0x39177E7D; // Thick Potion
    constexpr u32 WaterBottle_1 = 0x0F00211D; // Water Bottle
    constexpr u32 PotionOfWaterBreathing = 0x2C9CBA02; // Potion of Water Breathing
    constexpr u32 PotionOfWeakness = 0xAF0F6803; // Potion of Weakness
    constexpr u32 PotionOfDecay = 0x602719CD; // Potion of Decay
    constexpr u32 WhenApplied = 0xE77AF205; // When Applied:
    constexpr u32 Unnamed = 0x062BDAED; // 
    constexpr u32 Ii_1 = 0xE0296084; // II
    constexpr u32 Iii_1 = 0x5230CFBF; // III
    constexpr u32 Iv_1 = 0x2C2E5556; // IV
    constexpr u32 WhenApplied_1 = 0x268A16C6; // When Applied:
    constexpr u32 BottomlessPit = 0x6FD9641A; // Bottomless Pit
    constexpr u32 ClassicFlat = 0xB9E6DF02; // Classic Flat
    constexpr u32 Desert_1 = 0xC671897F; // Desert
    constexpr u32 Overworld = 0x50DF66FA; // Overworld
    constexpr u32 RedstoneReady = 0xFDFA242A; // Redstone Ready
    constexpr u32 SnowyKingdom = 0xF1825B98; // Snowy Kingdom
    constexpr u32 TunnellerSDream = 0x1D3AAD7A; // Tunneller's Dream
    constexpr u32 WaterWorld = 0x081BD646; // Water World
    constexpr u32 Presets = 0xE5DF54A2; // Presets
    constexpr u32 PressControllerVkStartToJoinGame = 0x0BCC1EAD; // Press{*CONTROLLER_VK_START*} to join game
    constexpr u32 Preview = 0xD047A3CE; // Preview
    constexpr u32 YouCanNowAttackAnimals = 0x3565EA42; // You can now attack animals
    constexpr u32 YouCanNoLongerAttackAnimals = 0x332C0EFC; // You can no longer attack animals
    constexpr u32 YouCanNowAttackMobs = 0x8425EE2C; // You can now attack mobs
    constexpr u32 YouCanNoLongerAttackMobs = 0x7A302BC2; // You can no longer attack mobs
    constexpr u32 YouCanNowAttackPlayers = 0xCFCD48CF; // You can now attack players
    constexpr u32 YouCanNoLongerAttackPlayers = 0xD83F3EE9; // You can no longer attack players
    constexpr u32 YouCanNowPlaceBlocks = 0xF9B83295; // You can now place blocks
    constexpr u32 YouCanNoLongerPlaceBlocks = 0x590C0C53; // You can no longer place blocks
    constexpr u32 YouCanNoLongerDisableExhaustion = 0xB2427456; // You can no longer disable exhaustion
    constexpr u32 YouCanNowDisableExhaustion = 0x25853DE8; // You can now disable exhaustion
    constexpr u32 YouCanNoLongerEnableFlying = 0x02CA1EEB; // You can no longer enable flying
    constexpr u32 YouCanNowEnableFlying = 0xE40A892D; // You can now enable flying
    constexpr u32 YouCanNoLongerEnableInvisibility = 0xC94448B1; // You can no longer enable invisibility
    constexpr u32 YouCanNowEnableInvisibility = 0xE2849697; // You can now enable invisibility
    constexpr u32 YouCanNoLongerTeleport = 0x986DB991; // You can no longer teleport
    constexpr u32 YouCanNowTeleport = 0xCA33A3F7; // You can now teleport
    constexpr u32 YouWillNowGetExhausted = 0x0E58AD5D; // You will now get exhausted
    constexpr u32 YouWillNoLongerGetExhausted = 0x118BE14B; // You will no longer get exhausted
    constexpr u32 YouCanNoLongerFly = 0x0914B658; // You can no longer fly
    constexpr u32 YouCanNowFly = 0xD4D6F596; // You can now fly
    constexpr u32 YouAreNoLongerInvisible = 0x67448842; // You are no longer invisible
    constexpr u32 YouAreNowInvisible = 0x8A95FCFC; // You are now invisible
    constexpr u32 YouAreNoLongerInvulnerable = 0x43E9FBD8; // You are no longer invulnerable
    constexpr u32 YouAreNowInvulnerable = 0x14C25F16; // You are now invulnerable
    constexpr u32 YouCanNowMineAndUseItems = 0xBB86B9EC; // You can now mine and use items
    constexpr u32 YouCanNoLongerMineOrUseItems = 0x80CBA202; // You can no longer mine or use items
    constexpr u32 YouAreNoLongerAModerator = 0x453A2722; // You are no longer a moderator
    constexpr u32 YouAreNowAModerator = 0xA5DE08DC; // You are now a moderator
    constexpr u32 YouCanNoLongerUseContainersEGChests = 0x0359DA13; // You can no longer use containers (e.g. chests)
    constexpr u32 YouCanNowUseContainersEGChests = 0xFEEB1CA5; // You can now use containers (e.g. chests)
    constexpr u32 YouCanNoLongerUseDoorsAndSwitches = 0x0FEF7A7A; // You can no longer use doors and switches
    constexpr u32 YouCanNowUseDoorsAndSwitches = 0x5CC73FE4; // You can now use doors and switches
    constexpr u32 ThereWasAProblemAccessingYourGamerProfile = 0x9EBA3410; //  There was a problem accessing your gamer profile. Your achievement could not be awarded at this tim...
    constexpr u32 AchievementAwardProblem = 0xF9CDF275; // Achievement Award Problem
    constexpr u32 GuestsAreNotAbleToPurchaseContent = 0x8BA9896F; // Guests are not able to purchase content.
    constexpr u32 Error = 0x0E6BF122; // Error
    constexpr u32 GamerProfileProblem = 0x77B18AC3; // Gamer profile problem
    constexpr u32 SavingOfSettingsToGamerProfileHasFailed = 0xE3644DBE; // Saving of settings to gamer profile has failed.
    constexpr u32 ConnectToLocalNetwork = 0xDC913489; // Connect to Local Network
    constexpr u32 ConnectToNintendoSwitchOnline = 0x051D141B; // Connect to Nintendo Switch Online
    constexpr u32 ContinuePlayingOffline = 0x3F0766C7; // Continue playing offline
    constexpr u32 ThisGameHasSomeFeaturesWhichRequireBeing = 0xB837024E; // This game has some features which require being connected to Nintendo Switch Online, but you are cur...
    constexpr u32 YouAreNotCurrentlyConnectedToNintendoSwitch = 0x8A21894B; // You are not currently connected to Nintendo Switch Online.
    constexpr u32 ContinuePlaying = 0x22E41AE2; // Continue playing
    constexpr u32 TheMatchHasEndedBecauseAGamerProfile = 0xE3F02C87; // The match has ended because a gamer profile was signed out
    constexpr u32 SignedOut = 0x5F075FAA; // Signed out
    constexpr u32 YouHaveBeenReturnedToTitleScreenBecause = 0x9DA97C08; // You have been returned to the title screen because your gamer profile was signed out
    constexpr u32 ThisIsMinecraftTrialGameIfYouHad = 0xC508A1DA; // This is the Minecraft trial game. If you had the full game, you would just have earned an achievemen...
    constexpr u32 UnlockFullGame = 0xA561A8DF; // Unlock Full Game
    constexpr u32 UseOfThisFeatureRequiresALinkedNintendo = 0xC34C0B77; // Use of this feature requires a linked Nintendo Account. You can link a Nintendo Account from User Se...
    constexpr u32 PreparingToAutosaveLevel = 0x5015737C; // Preparing to Autosave Level
    constexpr u32 BuildingTerrain = 0xA132B8A8; // Building Terrain
    constexpr u32 ConnectingToHost = 0xC52FB168; // Connecting to host
    constexpr u32 SwitchingToOfflineGame = 0x13B73B12; // Switching to offline game
    constexpr u32 CopyingSave = 0xAA90E0B5; // Copying Save
    constexpr u32 DownloadingTerrain = 0xBC34C612; // Downloading terrain
    constexpr u32 EnteringTheEnd = 0xA047AA6E; // Entering The END
    constexpr u32 EnteringTheNether = 0x73D6B3B9; // Entering The Nether
    constexpr u32 GeneratingLevel = 0x90C68A49; // Generating level
    constexpr u32 GeneratingSpawnArea = 0x55F5BB9C; // Generating spawn area
    constexpr u32 WaitingOnOthersToFinishLoadingLayers = 0xD56BCDA0; // Waiting on others to finish loading layers.
    constexpr u32 PleaseWaitWhileHostSavesGame = 0x5AAA2E05; // Please wait while the host saves the game
    constexpr u32 InitializingServer = 0xF990F518; // Initializing server
    constexpr u32 LeavingTheEnd = 0x87DA8418; // Leaving The END
    constexpr u32 LeavingTheNether = 0xBA3E797F; // Leaving The Nether
    constexpr u32 LoadingLayers = 0xE4E407DF; // Loading Layers
    constexpr u32 LoadingLevel = 0xA76C7221; // Loading level
    constexpr u32 LoadingSpawnArea = 0x07728A94; // Loading spawn area
    constexpr u32 FindingSeedForWorldGenerator = 0x6C457A87; // Finding Seed for the World Generator
    constexpr u32 Respawning = 0xF5BA56AA; // Respawning
    constexpr u32 RetrievingLayerChangesFromServer = 0xEBB9A246; // Retrieving layer changes from server.
    constexpr u32 PreparingChunks = 0xD0F458BD; // Preparing Chunks...
    constexpr u32 PreparingToSaveLevel = 0xF5938F13; // Preparing to Save Level
    constexpr u32 SavingPlayers = 0x0195381D; // Saving players
    constexpr u32 Finalizing = 0xAEBF0574; // Finalizing...
    constexpr u32 SimulatingWorldForABit = 0xF0559F00; // Simulating world for a bit
    constexpr u32 ServerIsGeneratingNewLayers = 0xD5AC1BC8; // Server is generating new layers
    constexpr u32 Properties = 0x90C1D91D; // Properties
    constexpr u32 Public = 0x6C31D4C5; // Public
    constexpr u32 Rabbit = 0x5F31CCFA; // Rabbit
    constexpr u32 KillerBunny = 0x54399BB0; // Killer Bunny
    constexpr u32 ReinstallAvatarItem1 = 0x2749E5E8; // Reinstall Avatar Item 1
    constexpr u32 ReinstallAvatarItem2 = 0x99515523; // Reinstall Avatar Item 2
    constexpr u32 ReinstallAvatarItem3 = 0x734EDABA; // Reinstall Avatar Item 3
    constexpr u32 ReinstallContent = 0x5803EBF4; // Reinstall Content
    constexpr u32 ReinstallGamerpic1 = 0x4F871CBD; // Reinstall Gamerpic 1
    constexpr u32 ReinstallGamerpic2 = 0x75899726; // Reinstall Gamerpic 2
    constexpr u32 ReinstallTheme = 0x13DD820C; // Reinstall Theme
    constexpr u32 EnterNewNameForYourWorld = 0xF440FF9B; // Enter the new name for your world
    constexpr u32 RenameYourWorld = 0xC2961E96; // Rename Your World
    constexpr u32 RepairName = 0xC60BB915; // Repair & Name
    constexpr u32 EnchantmentCostD = 0xF3A668FD; // Enchantment Cost: %d
    constexpr u32 TooExpensive = 0xDB7B95E9; // Too Expensive!
    constexpr u32 RequiredItemsForTrade = 0x3DBED919; // Required Items For Trade
    constexpr u32 ResetNether = 0xC13FDFC6; // Reset Nether
    constexpr u32 ResetTheEnd = 0xD75A3077; // Reset The End
    constexpr u32 ResetTheEndInThisSavegameYouWill = 0x6FDF0A5D; // Are you sure you want to reset The End in this savegame? You will lose anything that you have previo...
    constexpr u32 ResetTheEnd_1 = 0x50D08380; // Reset The End
    constexpr u32 ResetToDefaults = 0x337D5132; // Reset to Defaults
    constexpr u32 ResetNetherInThisSavegameToItsDefault = 0x79240783; // Are you sure you want to reset the Nether in this savegame to its default state? You will lose anyth...
    constexpr u32 ResetNether_1 = 0xE5D1250E; // Reset Nether
    constexpr u32 Respawn = 0x52841E60; // Respawn
    constexpr u32 ResumeGame = 0xB9B3004C; // Resume Game
    constexpr u32 SignedOut_1 = 0xAD484C70; // Signed out
    constexpr u32 YouHaveBeenReturnedToTitleScreenBecauseNintendoAccount = 0x6DD1DE52; // You have been returned to the title screen because your Nintendo Account was signed out
    constexpr u32 GameState = 0x0D21C173; // {GAME_STATE}
    constexpr u32 Idle = 0x0D371D4E; // Idle
    constexpr u32 InMenus = 0xB0E2D942; // In the menus
    constexpr u32 PlayingMultiplayerGameState = 0xEB1A4A80; // Playing Multiplayer - {GAME_STATE}
    constexpr u32 PlayingAloneGameState = 0x32D9DD56; // Playing Alone - {GAME_STATE}
    constexpr u32 OfflineAloneGameState = 0x28B67B1F; // Offline Alone - {GAME_STATE}
    constexpr u32 OfflineMultiplayerGameState = 0x7703EE79; // Offline Multiplayer - {GAME_STATE}
    constexpr u32 WorkingAtAnvil = 0x59C6E2B1; // Working at the Anvil
    constexpr u32 EnjoyingView = 0x2292BF7F; // Enjoying the view!
    constexpr u32 InABoat = 0xB231C7F5; // In a boat
    constexpr u32 BrewingAPotion = 0x123E6B5F; // Brewing a potion
    constexpr u32 ListeningToADisc = 0xA6DD54DA; // Listening to a disc
    constexpr u32 Crafting_2 = 0x074E6D4F; // Crafting
    constexpr u32 Enchanting = 0x559D1B96; // Enchanting
    constexpr u32 Fishing = 0xC5036F69; // Fishing
    constexpr u32 Forging = 0x711F8B99; // Forging
    constexpr u32 LookingAtAMap = 0xBE2F93D1; // Looking at a map
    constexpr u32 IntoNether = 0x3A2982D5; // Into the Nether
    constexpr u32 RidingAMinecart = 0x05C4C95E; // Riding a minecart
    constexpr u32 RidingAPig = 0x01E201D3; // Riding a pig
    constexpr u32 MeetingNeighbours = 0xDDD337BE; // Meeting the neighbours
    constexpr u32 SafeSprint = 0xF172A1B7; // Safe Sprint
    constexpr u32 SaveGame = 0xFB98EC1C; // Save Game
    constexpr u32 ThisGameHasALevelAutosaveFeatureWhen = 0xCC4C87A5; // This game has a level autosave feature. When you see the icon above displayed, the game is saving yo...
    constexpr u32 DeleteSaves = 0xFEC9F75F; // Delete Saves
    constexpr u32 ContinueWithoutSaving_1 = 0xCE9C596C; // Continue without saving
    constexpr u32 ConsoleWorldsAndPressRetryToContinueOr = 0x92727461; // Minecraft: Nintendo Switch Edition is out of space for save data. To make room, delete other Minecra...
    constexpr u32 RetrySaving = 0xAED18DE8; // Retry saving
    constexpr u32 SavingIncomplete = 0xE6A7B0A3; // Saving incomplete
    constexpr u32 DoYouWantToTransferThisSave = 0x78283DA4; // Do you want to transfer this save?
    constexpr u32 TransferComplete = 0x4925B633; // Transfer Complete!
    constexpr u32 SaveTransferFailedPleaseTryAgainLater = 0x93BC6D7D; // Save transfer failed. Please try again later.
    constexpr u32 AreYouSureYouWouldLikeToTransfer = 0x129BC197; // Are you sure you would like to transfer this save to a console running Minecraft: Nintendo Switch Ed...
    constexpr u32 LookingForConsoleReadyToTransferSave = 0x689B0813; // Looking for Minecraft: Wii U Edition ready to transfer Save...
    constexpr u32 AreYouSureYouWouldLikeToTransferFrom = 0xCE909A4E; // Are you sure you would like to transfer a save from a console running Minecraft: Wii U Edition on th...
    constexpr u32 WaitingForConsoleToAcceptSaveTransfer = 0xB9F3A58A; // Waiting for Minecraft: Nintendo Switch Edition to accept the save transfer...
    constexpr u32 TheSaveFileFromConsoleDoesntSupportYet = 0x1A70D5E0; // The save file from Minecraft: Wii U Edition has a version number that Minecraft: Nintendo Switch Edi...
    constexpr u32 InitialisingNetwork = 0xAB958184; // Initialising network
    constexpr u32 ConvertingData = 0x3EA8D115; // Converting Data
    constexpr u32 DownloadingDataD = 0xB7147763; // Downloading data : %d%%
    constexpr u32 UploadingDataD = 0x0CE6C914; // Uploading data : %d%%
    constexpr u32 Saving = 0x4279DF96; // Saving
    constexpr u32 AverageLifespan = 0xE063A16F; // Average Lifespan
    constexpr u32 Seed = 0xF3C52E93; // Seed
    constexpr u32 ChooseLocalNetworkToConnectWithOtherNintendo = 0xE7CC47D3; // Choose Local Network to connect with other Nintendo Switch systems nearby, or Online network to conn...
    constexpr u32 SelectNetworkMode = 0xA6F43CFE; // Select Network Mode
    constexpr u32 SelectAgain = 0xFD294384; // Select again
    constexpr u32 SelectANewStorageDevice = 0x054A2381; // Select a new storage device
    constexpr u32 Selected = 0x0ED2A635; // Selected
    constexpr u32 SelectedSkin = 0x2C46215D; // Selected skin:
    constexpr u32 SetPlayerSpawnPoint = 0x88F67C3E; // Set Player Spawn Point
    constexpr u32 SetWorldSpawnPoint = 0x4C920637; // Set World Spawn Point
    constexpr u32 Settings = 0xFCCD64B9; // Settings
    constexpr u32 Sheep = 0x38EEFD87; // Sheep
    constexpr u32 Shulker = 0xD69F89AA; // Shulker
    constexpr u32 ShulkerBox_1 = 0x3D080C00; // Shulker Box
    constexpr u32 AndSMore = 0xFCB7D502; // and %s more...
    constexpr u32 EnterSignText = 0x3121EB00; // Enter Sign Text
    constexpr u32 EnterALineOfTextForYourSign = 0x398FB622; // Enter a line of text for your sign
    constexpr u32 Silverfish = 0xAEEE3B2F; // Silverfish
    constexpr u32 Skeleton = 0x3F15B435; // Skeleton
    constexpr u32 SkeletonHorse = 0x7E8FE011; // Skeleton Horse
    constexpr u32 SkinPack = 0x175ADB3D; // Skin Pack
    constexpr u32 SkinsPacks = 0x98D31F98; // Skins Packs
    constexpr u32 AutosaveInterval = 0xA1070C48; // Autosave Interval
    constexpr u32 AutosaveIntervalOff = 0xF8005810; // Autosave Interval: OFF
    constexpr u32 Difficulty_1 = 0xD324428D; // Difficulty
    constexpr u32 Gamma = 0xAB5A4F89; // Gamma
    constexpr u32 InterfaceOpacity = 0x707F7FFA; // Interface Opacity
    constexpr u32 Music = 0x67B4208F; // Music
    constexpr u32 GameSensitivity = 0xA5CBEBB5; // Game Sensitivity
    constexpr u32 InterfaceSensitivity = 0xD51FF648; // Interface Sensitivity
    constexpr u32 Sound = 0x7F9DEEF5; // Sound
    constexpr u32 HudSize = 0x36CB3767; // HUD Size
    constexpr u32 HudSizeSplitscreen = 0x6D606219; // HUD Size (Splitscreen)
    constexpr u32 Slime = 0x75D1B12A; // Slime
    constexpr u32 Small_1 = 0x6353B2E3; // Small
    constexpr u32 SnowGolem = 0x55D2D0E3; // Snow Golem
    constexpr u32 ScreenshotFromInGame = 0x575E686A; // Screenshot from in-game
    constexpr u32 LookWhatIMadeInConsole = 0x86B19DF2; // Look what I made in Minecraft: Nintendo Switch Edition!
    constexpr u32 Caption = 0x430C136F; // Caption
    constexpr u32 EditSignMessage_1 = 0xE14B3437; // Edit sign message:
    constexpr u32 FillInDetailsToAccompanyYourScreenshot = 0x0064760D; // Fill in the details to accompany your screenshot
    constexpr u32 Southpaw = 0xFD098A4F; // Southpaw
    constexpr u32 Spectate = 0x7D547C65; // Spectate
    constexpr u32 NoPlayersToSpectate = 0x6A14E1E7; // No players to spectate!
    constexpr u32 NowSpectatingPlayerDOfD = 0xDB4972F1; // Now spectating {*PLAYER*} ( %d of %d )
    constexpr u32 Spider = 0x89E834A5; // Spider
    constexpr u32 AwkwardSplashPotion = 0xBDD4EE07; // Awkward Splash Potion
    constexpr u32 SplashUncraftablePotion = 0xE6CC7B07; // Splash Uncraftable Potion
    constexpr u32 SplashPotionOfFireResistance = 0x8011BE46; // Splash Potion of Fire Resistance
    constexpr u32 SplashPotionOfHarming = 0x944D9544; // Splash Potion of Harming
    constexpr u32 SplashPotionOfHealing = 0x2ACB95AA; // Splash Potion of Healing
    constexpr u32 SplashPotionOfInvisibility = 0x06CBF3AB; // Splash Potion of Invisibility
    constexpr u32 SplashPotionOfLeaping = 0x088ACB12; // Splash Potion of Leaping
    constexpr u32 SplashPotionOfLevitation = 0x4F73B81D; // Splash Potion of Levitation
    constexpr u32 SplashPotionOfLuck = 0x4FFA0733; // Splash Potion of Luck
    constexpr u32 MundaneSplashPotion = 0x20B82CD2; // Mundane Splash Potion
    constexpr u32 SplashPotionOfNightVision = 0xD9226AE5; // Splash Potion of Night Vision
    constexpr u32 SplashPotionOfPoison = 0x73076146; // Splash Potion of Poison
    constexpr u32 SplashPotionOfRegeneration = 0x594E366B; // Splash Potion of Regeneration
    constexpr u32 SplashPotionOfSlowness = 0xD5EB12C6; // Splash Potion of Slowness
    constexpr u32 SplashPotionOfStrength = 0x5FD1FD37; // Splash Potion of Strength
    constexpr u32 SplashPotionOfSwiftness = 0x03EC63D6; // Splash Potion of Swiftness
    constexpr u32 ThickSplashPotion = 0xAB5E85CF; // Thick Splash Potion
    constexpr u32 SplashWaterBottle = 0x6E0E150F; // Splash Water Bottle
    constexpr u32 SplashPotionOfWaterBreathing = 0x20E4A1D0; // Splash Potion of Water Breathing
    constexpr u32 SplashPotionOfWeakness = 0x8D252DC1; // Splash Potion of Weakness
    constexpr u32 SplashPotionOfDecay = 0x38B01A8F; // Splash Potion of Decay
    constexpr u32 Squid = 0xB7460FF6; // Squid
    constexpr u32 StartGame = 0x3A430DC5; // Start Game
    constexpr u32 SavingContentPleaseDontTurnOffYourConsole = 0xF0015A9A; // Saving content. Please don't turn off your console.
    constexpr u32 Saving_1 = 0x784DA382; // Saving…
    constexpr u32 StorageDeviceProblem = 0xD5D8EEC1; // Storage Device Problem
    constexpr u32 Stray = 0xC9DE5707; // Stray
    constexpr u32 AwaitingApproval = 0xAD36B773; // Awaiting approval
    constexpr u32 Censored = 0x62950B66; // Censored
    constexpr u32 SaveAsNewPreset = 0x477A886A; // Save as new preset
    constexpr u32 AddLayer = 0x984506E8; // Add Layer
    constexpr u32 YouCannotAddANewLayerAsYou = 0x373CCBF0; // You cannot add a new layer as you have reached the maximum height of a world.
    constexpr u32 HeightLimitReached = 0xF2637855; // Height Limit Reached
    constexpr u32 Air_1 = 0x2825E7E3; // Air
    constexpr u32 ConfigurationProblemsDetected = 0xE51AF00A; // Configuration Problems Detected
    constexpr u32 CreatePreset = 0x0C982AFB; // Create Preset
    constexpr u32 CustomizeSuperflat = 0x9CFEF661; // Customize Superflat
    constexpr u32 CustomizeASuperflatWorldBySpecifyingItsBlocks = 0x6D6EBA08; // Customize a superflat world by specifying its blocks, biome and features, or choose from a variety o...
    constexpr u32 DisabledForNonSuperflatWorlds = 0xAA2E57AF; // Disabled for non-superflat worlds.
    constexpr u32 DeleteLayer = 0xD76507B8; // Delete Layer
    constexpr u32 DeleteThisCustomPreset = 0x47253208; // Are you sure you want to delete this custom preset?
    constexpr u32 DeletePreset = 0x75E7AFD6; // Delete Preset
    constexpr u32 DeletePreset_1 = 0x98E19F7B; // Delete Preset
    constexpr u32 AnEmptyBlockSuitableForBreathing = 0xDDB4DEC5; // An empty block suitable for breathing.
    constexpr u32 EditLayer = 0x70E1A4D5; // Edit Layer
    constexpr u32 YouHaveSpecifiedThatBiomeSpecificStructuresShould = 0xD862B5D5; // You have specified that Biome Specific structures should be generated, but the chosen Biome has none...
    constexpr u32 YouHaveLayersOfGravityAffectedBlocksThat = 0xF2C82A8D; // You have layers of gravity-affected blocks that cannot be generated as they have not been placed on ...
    constexpr u32 OneOrMoreOfSettingsInThisConfiguration = 0x258655F1; // One or more of the settings in this configuration will not be generated correctly as they are invali...
    constexpr u32 YouHaveLakesOrLavaLakesEnabledButy = 0x6E694430; // You have Lakes or Lava Lakes enabled, but they cannot be generated as the blocks at the top of the w...
    constexpr u32 YouHaveOceanMonumentsEnabledButyCannotBe = 0xC2E51385; // You have Ocean Monuments enabled, but they cannot be generated as the biome is neither Ocean nor Fro...
    constexpr u32 YouHaveLayersOfTopSnowOrCarpet = 0x16C16D5E; // You have layers of Top Snow or Carpet that cannot be generated as they have not been placed on top o...
    constexpr u32 YouHaveVillagesEnabledButyCannotBeGenerated = 0xA8872C87; // You have Villages enabled, but they cannot be generated as the biome is not Plains, Desert, Savanna,...
    constexpr u32 YouHaveWoodlandMansionsEnabledButyCannotBe = 0xDAE45B4D; // You have Woodland Mansions enabled, but they cannot be generated as the biome is not a Roofed Forest...
    constexpr u32 LayerHeight = 0x9431D6C6; // Layer Height
    constexpr u32 AddEditOrDeleteALayer = 0x78A7E3B3; // Add, edit or delete a layer.
    constexpr u32 LayerOptions = 0x04D6BADE; // Layer Options
    constexpr u32 LoadPreset = 0x853396D1; // Load Preset
    constexpr u32 MoveLayer = 0x98ED6AF8; // Move Layer
    constexpr u32 OverwritePreset = 0x8CFADF7E; // Overwrite Preset
    constexpr u32 OverwriteThisCustomPreset = 0xCAE58E0A; // Are you sure you want to overwrite this custom preset?
    constexpr u32 OverwritePreset_1 = 0x6A9B1859; // Overwrite Preset
    constexpr u32 SavePreset = 0x8F192ED6; // Save Preset
    constexpr u32 LoadingThisPresetWillReplaceYourCurrentLayers = 0xCD41C121; // Loading this preset will replace your current layers, biome and properties. Are you sure that you wa...
    constexpr u32 YourSuperflatConfigurationHasNotBeenSavedTo = 0x6B1858F8; // Your superflat configuration has not been saved to a preset, would you like to save it now?
    constexpr u32 UnsavedConfiguration = 0x4280EFAB; // Unsaved Configuration
    constexpr u32 SuperflatWorld = 0x6C3259AF; // Superflat World
    constexpr u32 Survival = 0x15AA0E94; // Survival
    constexpr u32 User = 0xC835D6E5; // User
    constexpr u32 Teleport = 0x969B57F5; // Teleport
    constexpr u32 TeleportToMe = 0x4296E646; // Teleport To Me
    constexpr u32 TeleportToPlayer = 0xDD235A1D; // Teleport To Player
    constexpr u32 ExitThisBookAndLoseChangesYouVeMade = 0x5BDCA79F; // Are you sure you want to exit this book and lose the changes you've made?
    constexpr u32 CopyThisSaveGame = 0x02FB315D; // Are you sure you want to copy this save game?
    constexpr u32 DeleteThisSaveGame = 0xC2CD9559; // Are you sure you want to delete this save game?
    constexpr u32 EnterTextForThisBook = 0xD7B35317; // Enter the text for this book.
    constexpr u32 EnterTextForThisBookSTitle = 0xEDCA24DA; // Enter the text for this book's title.
    constexpr u32 WhatWouldYouLikeToDoWithThisSaveGame = 0x5524ECC7; // What would you like to do with this save game?
    constexpr u32 GetTrialVersion = 0x4424ED62; // Get Trial Version
    constexpr u32 GetFullVersion = 0xEAC05ED4; // Get Full Version
    constexpr u32 Themes_1 = 0x4457C53E; // Themes
    constexpr u32 AcaciaPlanks = 0x674A2380; // Acacia Planks
    constexpr u32 ActivatorRail = 0xFF84F9B7; // Activator Rail
    constexpr u32 Allium = 0xE4A1550F; // Allium
    constexpr u32 Anvil_1 = 0x15D98F43; // Anvil
    constexpr u32 Anvil_2 = 0x99A9E601; // Anvil
    constexpr u32 SlightlyDamagedAnvil = 0x872533DB; // Slightly Damaged Anvil
    constexpr u32 VeryDamagedAnvil = 0x49B3D85B; // Very Damaged Anvil
    constexpr u32 StoneAnyType = 0xACC3DD75; // Stone (any type)
    constexpr u32 AzureBluet = 0x090F466B; // Azure Bluet
    constexpr u32 Barrier = 0x0435E342; // Barrier
    constexpr u32 Beacon_1 = 0xFC3CC3AB; // Beacon
    constexpr u32 Bed_1 = 0x8625D364; // Bed
    constexpr u32 BlackBed = 0x5555A4BC; // Black Bed
    constexpr u32 BlueBed = 0xD5F99695; // Blue Bed
    constexpr u32 BrownBed = 0x09C5C185; // Brown Bed
    constexpr u32 CyanBed = 0x0702020E; // Cyan Bed
    constexpr u32 GrayBed = 0x6C532C86; // Gray Bed
    constexpr u32 GreenBed = 0x9EF3B3D0; // Green Bed
    constexpr u32 LightBlueBed = 0xC985D454; // Light Blue Bed
    constexpr u32 LimeBed = 0xC872BBEE; // Lime Bed
    constexpr u32 MagentaBed = 0x6E73A676; // Magenta Bed
    constexpr u32 YouAreSleepingInABedToSkip = 0xFAB38114; // You are sleeping in a bed. To skip to dawn, all players need to sleep in beds at the same time.
    constexpr u32 YouCanOnlySleepAtNight = 0xFA2A57FA; // You can only sleep at night
    constexpr u32 YourHomeBedWasMissingOrObstructed = 0xE08B6A47; // Your home bed was missing or obstructed
    constexpr u32 YouMayNotRestNowReAreMonstersNearby = 0x16C81B7F; // You may not rest now, there are monsters nearby
    constexpr u32 ThisBedIsOccupied = 0xD08616D9; // This bed is occupied
    constexpr u32 OrangeBed = 0x70D97B2B; // Orange Bed
    constexpr u32 PinkBed = 0x2FFA2DDF; // Pink Bed
    constexpr u32 SIsSleepingInABedToSkip = 0x56C64197; // %s is sleeping in a bed. To skip to dawn, all players need to sleep in beds at the same time.
    constexpr u32 PurpleBed = 0x6E39E7BD; // Purple Bed
    constexpr u32 RedBed = 0xF0DD2368; // Red Bed
    constexpr u32 LightGrayBed = 0x4B6015EC; // Light Gray Bed
    constexpr u32 YouMayNotRestNowBedIsTooFarAway = 0xF084EC0C; // You may not rest now, the bed is too far away
    constexpr u32 WhiteBed = 0x6BD9B3C4; // White Bed
    constexpr u32 YellowBed = 0x29C060C7; // Yellow Bed
    constexpr u32 Bedrock = 0xEA232091; // Bedrock
    constexpr u32 Beetroots = 0xF4EBEC3C; // Beetroots
    constexpr u32 Birch = 0x2339E405; // Birch
    constexpr u32 BirchPlanks = 0x9BC6104A; // Birch Planks
    constexpr u32 BlockOfDiamond = 0x5CD125D5; // Block of Diamond
    constexpr u32 BlockOfGold = 0xDFFAFE91; // Block of Gold
    constexpr u32 BlockOfIron = 0x381DD1E3; // Block of Iron
    constexpr u32 LapisLazuliBlock = 0x49F8A90E; // Lapis Lazuli Block
    constexpr u32 SlimeBlock = 0x4BE7A457; // Slime Block
    constexpr u32 BlueOrchid = 0xBFE0ACAD; // Blue Orchid
    constexpr u32 BoneBlock = 0x8612D9DF; // Bone Block
    constexpr u32 Bookshelf = 0x38074A82; // Bookshelf
    constexpr u32 BrewingStand_2 = 0x20259A79; // Brewing Stand
    constexpr u32 Bricks = 0x65522F86; // Bricks
    constexpr u32 PrismarineBricks = 0xF0338E76; // Prismarine Bricks
    constexpr u32 ButtonButton = 0x952EB581; // Button
    constexpr u32 Cactus = 0xB721A32C; // Cactus
    constexpr u32 Cake_1 = 0x9FC37613; // Cake
    constexpr u32 Carpet = 0xFBFA6B46; // Carpet
    constexpr u32 BlackCarpet = 0xE6EED8BE; // Black Carpet
    constexpr u32 BlueCarpet = 0xF2C1E287; // Blue Carpet
    constexpr u32 BrownCarpet = 0x44A7BE67; // Brown Carpet
    constexpr u32 CyanCarpet = 0x877B96BC; // Cyan Carpet
    constexpr u32 GrayCarpet = 0x3D80F1F4; // Gray Carpet
    constexpr u32 GreenCarpet = 0x8576F292; // Green Carpet
    constexpr u32 LightBlueCarpet = 0x12FAE326; // Light Blue Carpet
    constexpr u32 LimeCarpet = 0x1572E4BC; // Lime Carpet
    constexpr u32 MagentaCarpet = 0x5783F014; // Magenta Carpet
    constexpr u32 OrangeCarpet = 0xC891E899; // Orange Carpet
    constexpr u32 PinkCarpet = 0xE7ECD5ED; // Pink Carpet
    constexpr u32 PurpleCarpet = 0xC38F0F2F; // Purple Carpet
    constexpr u32 RedCarpet = 0x8916300A; // Red Carpet
    constexpr u32 LightGrayCarpet = 0xF7A53C3E; // Light Gray Carpet
    constexpr u32 WhiteCarpet = 0x1DBEF806; // White Carpet
    constexpr u32 YellowCarpet = 0x6E3EF1B5; // Yellow Carpet
    constexpr u32 Carrots = 0x148623D5; // Carrots
    constexpr u32 Cauldron_1 = 0xAD8EE84B; // Cauldron
    constexpr u32 Chest_1 = 0x708C68FE; // Chest
    constexpr u32 TrappedChest = 0x326A111E; // Trapped Chest
    constexpr u32 ChorusFlower = 0xD1A40555; // Chorus Flower
    constexpr u32 ChorusPlant = 0x2781F467; // Chorus Plant
    constexpr u32 Clay_1 = 0x212A1DE0; // Clay
    constexpr u32 Wool = 0xBF01D5CB; // Wool
    constexpr u32 BlackWool = 0x4EE0C673; // Black Wool
    constexpr u32 BlueWool = 0x603AD112; // Blue Wool
    constexpr u32 BrownWool = 0x48794C3A; // Brown Wool
    constexpr u32 CyanWool = 0x1E9ABF39; // Cyan Wool
    constexpr u32 GrayWool = 0xE335FA61; // Gray Wool
    constexpr u32 GreenWool = 0xBC7213BF; // Green Wool
    constexpr u32 LightBlueWool = 0x26CC1F13; // Light Blue Wool
    constexpr u32 LimeWool = 0x8536CAD9; // Lime Wool
    constexpr u32 MagentaWool = 0x61BD1619; // Magenta Wool
    constexpr u32 OrangeWool = 0xF8F21E7C; // Orange Wool
    constexpr u32 PinkWool = 0xB5D7B8D8; // Pink Wool
    constexpr u32 PurpleWool = 0xD2B9E2CA; // Purple Wool
    constexpr u32 RedWool = 0x6333B0A7; // Red Wool
    constexpr u32 LightGrayWool = 0x261A069B; // Light Gray Wool
    constexpr u32 WhiteWool = 0x61FFACAB; // White Wool
    constexpr u32 YellowWool = 0xAE40AC60; // Yellow Wool
    constexpr u32 BlockOfCoal = 0x7DE809C6; // Block of Coal
    constexpr u32 CobblestoneWall = 0x2B4E0150; // Cobblestone Wall
    constexpr u32 MossyCobblestoneWall = 0x8AFD552C; // Mossy Cobblestone Wall
    constexpr u32 Cocoa = 0xEB788E4E; // Cocoa
    constexpr u32 CommandBlock = 0x5DD6147E; // Command Block
    constexpr u32 RedstoneComparator_1 = 0x5600B90D; // Redstone Comparator
    constexpr u32 BlackConcrete = 0x3CE29930; // Black Concrete
    constexpr u32 BlueConcrete = 0xE9A8D8D9; // Blue Concrete
    constexpr u32 BrownConcrete = 0xAC7929B9; // Brown Concrete
    constexpr u32 CyanConcrete = 0x41515F62; // Cyan Concrete
    constexpr u32 CanBeMinedWithAPickaxeOrCreated = 0xC43F7E5E; // Can be mined with a pickaxe, or created when Concrete Powder comes into contact with a Water block.
    constexpr u32 GrayConcrete = 0x317BE04A; // Gray Concrete
    constexpr u32 GreenConcrete = 0x509E273C; // Green Concrete
    constexpr u32 LightBlueConcrete = 0x306016F8; // Light Blue Concrete
    constexpr u32 LimeConcrete = 0x716B1732; // Lime Concrete
    constexpr u32 MagentaConcrete = 0xF218806A; // Magenta Concrete
    constexpr u32 OrangeConcrete = 0xF1F54007; // Orange Concrete
    constexpr u32 PinkConcrete = 0x6DD05223; // Pink Concrete
    constexpr u32 BlackConcretePowder = 0xEF251BC4; // Black Concrete Powder
    constexpr u32 BlueConcretePowder = 0x378B596D; // Blue Concrete Powder
    constexpr u32 BrownConcretePowder = 0xB588DF8D; // Brown Concrete Powder
    constexpr u32 CyanConcretePowder = 0xA9EC3036; // Cyan Concrete Powder
    constexpr u32 TurnsIntoConcreteAfterComingIntoContactWith = 0x544D116A; // Turns into Concrete after coming into contact with a Water block.
    constexpr u32 GrayConcretePowder = 0xA85DC93E; // Gray Concrete Powder
    constexpr u32 GreenConcretePowder = 0x391C0E68; // Green Concrete Powder
    constexpr u32 LightBlueConcretePowder = 0x89B703CC; // Light Blue Concrete Powder
    constexpr u32 LimeConcretePowder = 0xE2130726; // Lime Concrete Powder
    constexpr u32 MagentaConcretePowder = 0x35CAA51E; // Magenta Concrete Powder
    constexpr u32 OrangeConcretePowder = 0x40F82853; // Orange Concrete Powder
    constexpr u32 PinkConcretePowder = 0xEEEFA637; // Pink Concrete Powder
    constexpr u32 PurpleConcretePowder = 0xF8988735; // Purple Concrete Powder
    constexpr u32 RedConcretePowder = 0x7E547C70; // Red Concrete Powder
    constexpr u32 LightGrayConcretePowder = 0xF2E161B4; // Light Gray Concrete Powder
    constexpr u32 WhiteConcretePowder = 0x92167C2C; // White Concrete Powder
    constexpr u32 YellowConcretePowder = 0x2DD724EF; // Yellow Concrete Powder
    constexpr u32 PurpleConcrete = 0x40DC4541; // Purple Concrete
    constexpr u32 RedConcrete = 0x30148D04; // Red Concrete
    constexpr u32 LightGrayConcrete = 0x5D78FF60; // Light Gray Concrete
    constexpr u32 WhiteConcrete = 0xE77E0E58; // White Concrete
    constexpr u32 YellowConcrete = 0xE925513B; // Yellow Concrete
    constexpr u32 Crops = 0xA2B4D032; // Crops
    constexpr u32 Dandelion = 0x06E5C559; // Dandelion
    constexpr u32 DarkOakPlanks = 0x0458BC59; // Dark Oak Planks
    constexpr u32 DaylightSensor = 0x3F7EEDD8; // Daylight Sensor
    constexpr u32 DeadBush = 0xF0F425F8; // Dead Bush
    constexpr u32 DetectorRail = 0xC929DEF4; // Detector Rail
    constexpr u32 Diode = 0x2DFF86D4; // Diode
    constexpr u32 Dirt = 0x672CD46C; // Dirt
    constexpr u32 CoarseDirt = 0xC79DB172; // Coarse Dirt
    constexpr u32 Podzol = 0x64186D51; // Podzol
    constexpr u32 Dispenser_2 = 0x66D6565E; // Dispenser
    constexpr u32 AcaciaDoor_1 = 0x640ED0F5; // Acacia Door
    constexpr u32 BirchDoor_1 = 0xFD2F0CF7; // Birch Door
    constexpr u32 DarkOakDoor_1 = 0xDF5FD05C; // Dark Oak Door
    constexpr u32 IronDoor_1 = 0x96CE6BC4; // Iron Door
    constexpr u32 JungleDoor_1 = 0x98015282; // Jungle Door
    constexpr u32 OakDoor_1 = 0x7513C0B0; // Oak Door
    constexpr u32 SpruceDoor_1 = 0x2F2632E7; // Spruce Door
    constexpr u32 DoublePlantBlock = 0x505F1B7A; // Double Plant Block
    constexpr u32 DragonEgg = 0x830CE1E3; // Dragon Egg
    constexpr u32 Dropper_1 = 0x25CBA5E1; // Dropper
    constexpr u32 TileDrops = 0x78E0A40D; // Tile Drops
    constexpr u32 BlockOfEmerald = 0x65CBCEF8; // Block of Emerald
    constexpr u32 EmeraldOre = 0x5AF0F4D9; // Emerald Ore
    constexpr u32 EnchantmentTable = 0x4E8C9CA8; // Enchantment Table
    constexpr u32 EndStoneBricks = 0x25FF0F15; // End Stone Bricks
    constexpr u32 EndPortal = 0x49D952FB; // End Portal
    constexpr u32 EndRod = 0xBB746286; // End Rod
    constexpr u32 EnderChest = 0xDAF7BB26; // Ender Chest
    constexpr u32 EndPortalFrame = 0xDE87B4A1; // End Portal Frame
    constexpr u32 Farmland = 0x37AE9F58; // Farmland
    constexpr u32 AcaciaFence = 0x8F7A6F28; // Acacia Fence
    constexpr u32 BirchFence = 0x97305152; // Birch Fence
    constexpr u32 DarkOakFence = 0x1E759A99; // Dark Oak Fence
    constexpr u32 AcaciaFenceGate = 0xACB35658; // Acacia Fence Gate
    constexpr u32 BirchFenceGate = 0xD5D2EE22; // Birch Fence Gate
    constexpr u32 DarkOakFenceGate = 0xE6B3A329; // Dark Oak Fence Gate
    constexpr u32 JungleFenceGate = 0xA969428F; // Jungle Fence Gate
    constexpr u32 OakFenceGate = 0x97001AC5; // Oak Fence Gate
    constexpr u32 SpruceFenceGate = 0xE3B590AA; // Spruce Fence Gate
    constexpr u32 JungleFence = 0x1A91493F; // Jungle Fence
    constexpr u32 OakFence = 0x5737E595; // Oak Fence
    constexpr u32 SpruceFence = 0x5DB2627A; // Spruce Fence
    constexpr u32 Fern = 0x51016948; // Fern
    constexpr u32 LargeFern = 0x6FD6B722; // Large Fern
    constexpr u32 Fire = 0xB59DECE7; // Fire
    constexpr u32 Flower = 0x43A69202; // Flower
    constexpr u32 FlowerPot_1 = 0xD6CEF3C9; // Flower Pot
    constexpr u32 FrostedIce = 0x938FE5C2; // Frosted Ice
    constexpr u32 Furnace_2 = 0x8015994F; // Furnace
    constexpr u32 Glass = 0x67EDF7B5; // Glass
    constexpr u32 BlackGlazedTerracotta = 0xBE18D1C4; // Black Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingBlackTerracotta = 0x34A78CE2; // A decorative block created by baking Black Terracotta in a Furnace.
    constexpr u32 BlueGlazedTerracotta = 0x8FCE9F6D; // Blue Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingBlueTerracotta = 0x7166AA73; // A decorative block created by baking Blue Terracotta in a Furnace.
    constexpr u32 BrownGlazedTerracotta = 0x847C958D; // Brown Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingBrownTerracotta = 0x4B91AC93; // A decorative block created by baking Brown Terracotta in a Furnace.
    constexpr u32 CyanGlazedTerracotta = 0x022F7636; // Cyan Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingCyanTerracotta = 0xAAA0EDC0; // A decorative block created by baking Cyan Terracotta in a Furnace.
    constexpr u32 GrayGlazedTerracotta = 0x00A10F3E; // Gray Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingGrayTerracotta = 0x73EE9DF8; // A decorative block created by baking Gray Terracotta in a Furnace.
    constexpr u32 GreenGlazedTerracotta = 0x080FC468; // Green Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingGreenTerracotta = 0x7009291E; // A decorative block created by baking Green Terracotta in a Furnace.
    constexpr u32 LightBlueGlazedTerracotta = 0x253769CC; // Light Blue Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingLightBlue = 0xE208E89A; // A decorative block created by baking Light Blue Terracotta in a Furnace.
    constexpr u32 LimeGlazedTerracotta = 0x3A564D26; // Lime Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingLimeTerracotta = 0x79FFC770; // A decorative block created by baking Lime Terracotta in a Furnace.
    constexpr u32 MagentaGlazedTerracotta = 0x35C3BB1E; // Magenta Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingMagentaTerracotta = 0x07B8DD58; // A decorative block created by baking Magenta Terracotta in a Furnace.
    constexpr u32 OrangeGlazedTerracotta = 0xB3A9CE53; // Orange Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingOrangeTerracotta = 0x9C676ADD; // A decorative block created by baking Orange Terracotta in a Furnace.
    constexpr u32 PinkGlazedTerracotta = 0x4732EC37; // Pink Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingPinkTerracotta = 0xC6FF4459; // A decorative block created by baking Pink Terracotta in a Furnace.
    constexpr u32 PurpleGlazedTerracotta = 0x6B4A2D35; // Purple Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingPurpleTerracotta = 0xFCB294EB; // A decorative block created by baking Purple Terracotta in a Furnace.
    constexpr u32 RedGlazedTerracotta = 0x1BD8D270; // Red Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingRedTerracotta = 0x717E54F6; // A decorative block created by baking Red Terracotta in a Furnace.
    constexpr u32 LightGrayGlazedTerracotta = 0x659307B4; // Light Gray Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingLightGray = 0xD76A52D2; // A decorative block created by baking Light Gray Terracotta in a Furnace.
    constexpr u32 WhiteGlazedTerracotta = 0x610A322C; // White Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingWhiteTerracotta = 0xF6F96D7A; // A decorative block created by baking White Terracotta in a Furnace.
    constexpr u32 YellowGlazedTerracotta = 0xA088CAEF; // Yellow Glazed Terracotta
    constexpr u32 ADecorativeBlockCreatedByBakingYellowTerracotta = 0x72A370E1; // A decorative block created by baking Yellow Terracotta in a Furnace.
    constexpr u32 PoweredRail = 0x6936C885; // Powered Rail
    constexpr u32 GrassBlock = 0xC3AED26B; // Grass Block
    constexpr u32 GrassPath = 0x7BDBBB51; // Grass Path
    constexpr u32 Gravel = 0x6AB0B644; // Gravel
    constexpr u32 Terracotta = 0x7FB3F65A; // Terracotta
    constexpr u32 HayBale = 0xDA9016BF; // Hay Bale
    constexpr u32 Netherrack = 0xC957BC78; // Netherrack
    constexpr u32 SoulSand = 0xCC08DBDD; // Soul Sand
    constexpr u32 Hopper_1 = 0x7C89FE37; // Hopper
    constexpr u32 Mushroom = 0xEC0029F5; // Mushroom
    constexpr u32 Mushroom_1 = 0x1202A45E; // Mushroom
    constexpr u32 Ice = 0x8A66BA28; // Ice
    constexpr u32 PackedIce = 0x1C499F27; // Packed Ice
    constexpr u32 IronBars = 0xFAC11CF9; // Iron Bars
    constexpr u32 Jukebox = 0x2859C7BB; // Jukebox
    constexpr u32 JunglePlanks = 0x8CE369FC; // Jungle Planks
    constexpr u32 Ladder = 0xB54F84CD; // Ladder
    constexpr u32 Lava = 0xEEF49E15; // Lava
    constexpr u32 Leaves = 0xCFF1B597; // Leaves
    constexpr u32 AcaciaLeaves = 0x2F02AC98; // Acacia Leaves
    constexpr u32 BirchLeaves = 0x66F04DAA; // Birch Leaves
    constexpr u32 DarkOakLeaves = 0xA3CFE26E; // Dark Oak Leaves
    constexpr u32 JungleLeaves = 0x81F6464F; // Jungle Leaves
    constexpr u32 OakLeaves = 0x07F97ECD; // Oak Leaves
    constexpr u32 SpruceLeaves = 0x17B87ECA; // Spruce Leaves
    constexpr u32 Lever = 0x5AD3769F; // Lever
    constexpr u32 Glowstone = 0x5AE2B631; // Glowstone
    constexpr u32 Lilac = 0xDF183664; // Lilac
    constexpr u32 JackOLantern = 0xF75DC4FD; // Jack-O-Lantern
    constexpr u32 LockedChest = 0x168961B3; // Locked Chest
    constexpr u32 Wood = 0x6284C9FB; // Wood
    constexpr u32 AcaciaWood = 0xF11C45A4; // Acacia Wood
    constexpr u32 BirchWood = 0xBB86EB26; // Birch Wood
    constexpr u32 DarkOakWood = 0x98793762; // Dark Oak Wood
    constexpr u32 JungleWood = 0x635D7533; // Jungle Wood
    constexpr u32 OakWood = 0x0B851C01; // Oak Wood
    constexpr u32 SpruceWood = 0x7D86FA86; // Spruce Wood
    constexpr u32 MagmaBlock = 0x169239F8; // Magma Block
    constexpr u32 Melon = 0xDCBDABFA; // Melon
    constexpr u32 MelonStem = 0x2592DD3A; // Melon Stem
    constexpr u32 MonsterSpawner = 0x64AC489C; // Monster Spawner
    constexpr u32 SilverfishBlock = 0x1C01E0ED; // Silverfish Block
    constexpr u32 Mushroom_2 = 0x0B7ADAEB; // Mushroom
    constexpr u32 NoteBlock = 0x22358258; // Note Block
    constexpr u32 Mycelium = 0x48412839; // Mycelium
    constexpr u32 NetherQuartzOre = 0x3CAE10F9; // Nether Quartz Ore
    constexpr u32 NetherWartBlock = 0xC36084F6; // Nether Wart Block
    constexpr u32 NetherBrick_1 = 0x228B485E; // Nether Brick
    constexpr u32 NetherBrickFence = 0xDE8B3DEC; // Nether Brick Fence
    constexpr u32 NetherWart_1 = 0x98DA9F86; // Nether Wart
    constexpr u32 RedstoneTorch = 0x7972A942; // Redstone Torch
    constexpr u32 Oak = 0xF4B673A2; // Oak
    constexpr u32 OakPlanks = 0x13035FA5; // Oak Planks
    constexpr u32 Observer = 0x36C898BF; // Observer
    constexpr u32 Obsidian = 0x047CBE1A; // Obsidian
    constexpr u32 CoalOre = 0xD06A6009; // Coal Ore
    constexpr u32 DiamondOre = 0x85B2E824; // Diamond Ore
    constexpr u32 GoldOre = 0x053AA5C8; // Gold Ore
    constexpr u32 IronOre = 0xBB0020FA; // Iron Ore
    constexpr u32 LapisLazuliOre = 0x9755013F; // Lapis Lazuli Ore
    constexpr u32 RedstoneOre = 0xB3920E50; // Redstone Ore
    constexpr u32 OxeyeDaisy = 0xA6666B88; // Oxeye Daisy
    constexpr u32 Peony = 0x6209364A; // Peony
    constexpr u32 Piston = 0x992F879A; // Piston
    constexpr u32 StickyPiston = 0xC02ED983; // Sticky Piston
    constexpr u32 WoodPlanksAnyType = 0x7E04043C; // Wood Planks (any type)
    constexpr u32 Poppy = 0x894C6039; // Poppy
    constexpr u32 Portal = 0x78681083; // Portal
    constexpr u32 Potatoes = 0xA0323088; // Potatoes
    constexpr u32 StonePressurePlate = 0x9B589145; // Stone Pressure Plate
    constexpr u32 WoodenPressurePlate = 0x003827F5; // Wooden Pressure Plate
    constexpr u32 Prismarine = 0xC36ED73B; // Prismarine
    constexpr u32 DarkPrismarine = 0x704B6B38; // Dark Prismarine
    constexpr u32 Pumpkin = 0xB4318A53; // Pumpkin
    constexpr u32 PumpkinStem = 0xC3108B1B; // Pumpkin Stem
    constexpr u32 PurpurBlock = 0xA98100C7; // Purpur Block
    constexpr u32 PurpurPillar = 0x0A7B0F2A; // Purpur Pillar
    constexpr u32 PurpurSlab = 0xB13BC474; // Purpur Slab
    constexpr u32 PurpurStairs = 0x78870286; // Purpur Stairs
    constexpr u32 BlockOfQuartz = 0x53B1F748; // Block of Quartz
    constexpr u32 ChiseledQuartzBlock = 0x3CBB815E; // Chiseled Quartz Block
    constexpr u32 PillarQuartzBlock = 0x33529C72; // Pillar Quartz Block
    constexpr u32 Rail = 0x7ACD0591; // Rail
    constexpr u32 RedNetherBrick = 0x178494B5; // Red Nether Brick
    constexpr u32 RedSandstone = 0x70C0AD9F; // Red Sandstone
    constexpr u32 ChiseledRedSandstone = 0xD03F0851; // Chiseled Red Sandstone
    constexpr u32 SmoothRedSandstone = 0x40496822; // Smooth Red Sandstone
    constexpr u32 BlockOfRedstone = 0x847B7AA9; // Block of Redstone
    constexpr u32 RedstoneDust = 0x2BBD75EE; // Redstone Dust
    constexpr u32 RedstoneLamp = 0x60FC2BF6; // Redstone Lamp
    constexpr u32 SugarCane = 0x976DCC42; // Sugar Cane
    constexpr u32 Rose = 0x1FD7D564; // Rose
    constexpr u32 RoseBush = 0x44477DB7; // Rose Bush
    constexpr u32 Sand = 0xE477542F; // Sand
    constexpr u32 RedSand = 0xF6580C43; // Red Sand
    constexpr u32 Sandstone = 0xD01AAF1C; // Sandstone
    constexpr u32 ChiseledSandstone = 0x3EB63D8A; // Chiseled Sandstone
    constexpr u32 SmoothSandstone = 0xE8A89499; // Smooth Sandstone
    constexpr u32 Sapling = 0x6F4DDFC1; // Sapling
    constexpr u32 AcaciaSapling = 0x1343BC3E; // Acacia Sapling
    constexpr u32 BirchSapling = 0xC8AE199C; // Birch Sapling
    constexpr u32 DarkOakSapling = 0xF898EDC7; // Dark Oak Sapling
    constexpr u32 JungleTreeSapling = 0x6793A4E9; // Jungle Tree Sapling
    constexpr u32 OakSapling = 0xE020DDDB; // Oak Sapling
    constexpr u32 SpruceSapling = 0xF9DC3BEC; // Spruce Sapling
    constexpr u32 SeaLantern = 0x7B9CCAD9; // Sea Lantern
    constexpr u32 Shrub = 0xDAD05151; // Shrub
    constexpr u32 BlackShulkerBox = 0x0C17C633; // Black Shulker Box
    constexpr u32 BlueShulkerBox = 0x51B1F252; // Blue Shulker Box
    constexpr u32 BrownShulkerBox = 0x31E39CFA; // Brown Shulker Box
    constexpr u32 CyanShulkerBox = 0x1011E079; // Cyan Shulker Box
    constexpr u32 ASpecialKindOfChestThatCanContain = 0x75189CE5; // A special kind of chest that can contain items even when broken. Can be crafted using a Chest and Sh...
    constexpr u32 GrayShulkerBox = 0x812F8BA1; // Gray Shulker Box
    constexpr u32 GreenShulkerBox = 0xEC0AE17F; // Green Shulker Box
    constexpr u32 LightBlueShulkerBox = 0xC4C6DB53; // Light Blue Shulker Box
    constexpr u32 LimeShulkerBox = 0x4CF50419; // Lime Shulker Box
    constexpr u32 MagentaShulkerBox = 0xACB84ED9; // Magenta Shulker Box
    constexpr u32 OrangeShulkerBox = 0xF527BFBC; // Orange Shulker Box
    constexpr u32 PinkShulkerBox = 0x53D14A18; // Pink Shulker Box
    constexpr u32 PurpleShulkerBox = 0xC968050A; // Purple Shulker Box
    constexpr u32 RedShulkerBox = 0x2AAB8967; // Red Shulker Box
    constexpr u32 LightGrayShulkerBox = 0x25B4E7DB; // Light Gray Shulker Box
    constexpr u32 WhiteShulkerBox = 0x91987A6B; // White Shulker Box
    constexpr u32 YellowShulkerBox = 0xADDB8DA0; // Yellow Shulker Box
    constexpr u32 Sign_1 = 0xC902E8B4; // Sign
    constexpr u32 Skull_1 = 0xFE1DE21A; // Skull
    constexpr u32 Snow = 0xF27C0102; // Snow
    constexpr u32 Sponge = 0xBA98E3D7; // Sponge
    constexpr u32 WetSponge = 0xF0AD9486; // Wet Sponge
    constexpr u32 Spruce = 0x1754708D; // Spruce
    constexpr u32 SprucePlanks = 0x7A4DF272; // Spruce Planks
    constexpr u32 StainedTerracotta = 0x471A5F97; // Stained Terracotta
    constexpr u32 BlackTerracotta = 0x5366E34F; // Black Terracotta
    constexpr u32 BlueTerracotta = 0xFEE55BFE; // Blue Terracotta
    constexpr u32 BrownTerracotta = 0x2BA187F6; // Brown Terracotta
    constexpr u32 CyanTerracotta = 0x401911F5; // Cyan Terracotta
    constexpr u32 GrayTerracotta = 0x4FEE910D; // Gray Terracotta
    constexpr u32 GreenTerracotta = 0xD7228303; // Green Terracotta
    constexpr u32 LightBlueTerracotta = 0x63D1E61F; // Light Blue Terracotta
    constexpr u32 LimeTerracotta = 0xB1E87A05; // Lime Terracotta
    constexpr u32 MagentaTerracotta = 0xACB66EF5; // Magenta Terracotta
    constexpr u32 OrangeTerracotta = 0xD5D0D890; // Orange Terracotta
    constexpr u32 PinkTerracotta = 0x883B0C24; // Pink Terracotta
    constexpr u32 PurpleTerracotta = 0x8CFEA0D6; // Purple Terracotta
    constexpr u32 RedTerracotta = 0x2767F1BB; // Red Terracotta
    constexpr u32 LightGrayTerracotta = 0x2D51BCB7; // Light Gray Terracotta
    constexpr u32 WhiteTerracotta = 0xCEB2BF07; // White Terracotta
    constexpr u32 YellowTerracotta = 0x57114E5C; // Yellow Terracotta
    constexpr u32 StainedGlass = 0x8060237A; // Stained Glass
    constexpr u32 BlackStainedGlass = 0x021F6182; // Black Stained Glass
    constexpr u32 BlueStainedGlass = 0x5ECBBE7B; // Blue Stained Glass
    constexpr u32 BrownStainedGlass = 0x9F3C1BAB; // Brown Stained Glass
    constexpr u32 CyanStainedGlass = 0x94E890C0; // Cyan Stained Glass
    constexpr u32 GrayStainedGlass = 0x291D14C8; // Gray Stained Glass
    constexpr u32 GreenStainedGlass = 0x592EFE2E; // Green Stained Glass
    constexpr u32 LightBlueStainedGlass = 0x8E4264FA; // Light Blue Stained Glass
    constexpr u32 LimeStainedGlass = 0x31300FD0; // Lime Stained Glass
    constexpr u32 MagentaStainedGlass = 0xE92B1878; // Magenta Stained Glass
    constexpr u32 OrangeStainedGlass = 0xC6C229A5; // Orange Stained Glass
    constexpr u32 StainedGlassPane = 0x942C1157; // Stained Glass Pane
    constexpr u32 BlackStainedGlassPane = 0xAACD630F; // Black Stained Glass Pane
    constexpr u32 BlueStainedGlassPane = 0x3A9A663E; // Blue Stained Glass Pane
    constexpr u32 BrownStainedGlassPane = 0x07B97AB6; // Brown Stained Glass Pane
    constexpr u32 CyanStainedGlassPane = 0x7E488535; // Cyan Stained Glass Pane
    constexpr u32 GrayStainedGlassPane = 0x8E1E044D; // Gray Stained Glass Pane
    constexpr u32 GreenStainedGlassPane = 0x31036BC3; // Green Stained Glass Pane
    constexpr u32 LightBlueStainedGlassPane = 0xD965D95F; // Light Blue Stained Glass Pane
    constexpr u32 LimeStainedGlassPane = 0x1C56FE45; // Lime Stained Glass Pane
    constexpr u32 MagentaStainedGlassPane = 0x9E0869B5; // Magenta Stained Glass Pane
    constexpr u32 OrangeStainedGlassPane = 0x02F273D0; // Orange Stained Glass Pane
    constexpr u32 PinkStainedGlassPane = 0x70728664; // Pink Stained Glass Pane
    constexpr u32 PurpleStainedGlassPane = 0x61ADDA16; // Purple Stained Glass Pane
    constexpr u32 RedStainedGlassPane = 0xFD174B7B; // Red Stained Glass Pane
    constexpr u32 LightGrayStainedGlassPane = 0xB5F2CFF7; // Light Gray Stained Glass Pane
    constexpr u32 WhiteStainedGlassPane = 0xA85048C7; // White Stained Glass Pane
    constexpr u32 YellowStainedGlassPane = 0x60E0979C; // Yellow Stained Glass Pane
    constexpr u32 PinkStainedGlass = 0xA9FD4C61; // Pink Stained Glass
    constexpr u32 PurpleStainedGlass = 0x088F98C3; // Purple Stained Glass
    constexpr u32 RedStainedGlass = 0x61D8BD56; // Red Stained Glass
    constexpr u32 LightGrayStainedGlass = 0xD9C1E722; // Light Gray Stained Glass
    constexpr u32 WhiteStainedGlass = 0x4FDA072A; // White Stained Glass
    constexpr u32 YellowStainedGlass = 0xD189E5F9; // Yellow Stained Glass
    constexpr u32 AcaciaWoodStairs = 0x83E0E195; // Acacia Wood Stairs
    constexpr u32 BirchWoodStairs = 0x7F930197; // Birch Wood Stairs
    constexpr u32 BrickStairs = 0xBE96FA3C; // Brick Stairs
    constexpr u32 DarkOakWoodStairs = 0x6C88317C; // Dark Oak Wood Stairs
    constexpr u32 JungleWoodStairs = 0x65590822; // Jungle Wood Stairs
    constexpr u32 NetherBrickStairs = 0xEA82EC37; // Nether Brick Stairs
    constexpr u32 QuartzStairs = 0x787E495F; // Quartz Stairs
    constexpr u32 RedSandstoneStairs = 0x6DFB6FDE; // Red Sandstone Stairs
    constexpr u32 SandstoneStairs = 0x922C7175; // Sandstone Stairs
    constexpr u32 SpruceWoodStairs = 0x27B26207; // Spruce Wood Stairs
    constexpr u32 CobblestoneStairs = 0x34A49535; // Cobblestone Stairs
    constexpr u32 StoneBrickStairs = 0xF103AC8D; // Stone Brick Stairs
    constexpr u32 OakWoodStairs = 0xD1897145; // Oak Wood Stairs
    constexpr u32 StandingBanner = 0x1A9454B0; // Standing Banner
    constexpr u32 Stone = 0x8BAD4DAC; // Stone
    constexpr u32 Andesite = 0xBD013DC6; // Andesite
    constexpr u32 PolishedAndesite = 0x1BB05261; // Polished Andesite
    constexpr u32 Cobblestone = 0x62FC05B2; // Cobblestone
    constexpr u32 StoneBricks = 0xC34CAFF7; // Stone Bricks
    constexpr u32 ChiseledStoneBricks = 0xA9A842A9; // Chiseled Stone Bricks
    constexpr u32 CrackedStoneBricks = 0xC6B32749; // Cracked Stone Bricks
    constexpr u32 MossyStoneBricks = 0x1266CDAB; // Mossy Stone Bricks
    constexpr u32 Diorite = 0x77F221B3; // Diorite
    constexpr u32 PolishedDiorite = 0xF1C0B35C; // Polished Diorite
    constexpr u32 Granite = 0x19244F91; // Granite
    constexpr u32 PolishedGranite = 0x567CEDEE; // Polished Granite
    constexpr u32 MossStone = 0x6919E519; // Moss Stone
    constexpr u32 SilverfishStone = 0x2EE4B5C8; // Silverfish Stone
    constexpr u32 SilverfishChiseledStoneBrick = 0x1DB92A74; // Silverfish Chiseled Stone Brick
    constexpr u32 SilverfishCobblestone = 0xD8B28C61; // Silverfish Cobblestone
    constexpr u32 SilverfishCrackedStoneBrick = 0x881C257C; // Silverfish Cracked Stone Brick
    constexpr u32 SilverfishMossyStoneBrick = 0x12B53EDE; // Silverfish Mossy Stone Brick
    constexpr u32 SilverfishStoneBrick = 0x097EADE2; // Silverfish Stone Brick
    constexpr u32 StoneSlab = 0x60DDFAA0; // Stone Slab
    constexpr u32 AcaciaWoodSlab = 0x5C9C0D57; // Acacia Wood Slab
    constexpr u32 BirchWoodSlab = 0x26F5D1DD; // Birch Wood Slab
    constexpr u32 BricksSlab = 0xA365F71E; // Bricks Slab
    constexpr u32 CobblestoneSlab = 0xA1DC2A82; // Cobblestone Slab
    constexpr u32 DarkOakWoodSlab = 0x1C5A6EC1; // Dark Oak Wood Slab
    constexpr u32 JungleWoodSlab = 0xE0B76C20; // Jungle Wood Slab
    constexpr u32 NetherBrickSlab = 0xA5251116; // Nether Brick Slab
    constexpr u32 OakWoodSlab = 0xDE25DD5A; // Oak Wood Slab
    constexpr u32 QuartzSlab = 0x28C9DFC6; // Quartz Slab
    constexpr u32 RedSandstoneSlab = 0x4E7D3907; // Red Sandstone Slab
    constexpr u32 SandstoneSlab = 0xEE811877; // Sandstone Slab
    constexpr u32 StoneBricksSlab = 0xF272D1EC; // Stone Bricks Slab
    constexpr u32 SpruceWoodSlab = 0x74EF0A65; // Spruce Wood Slab
    constexpr u32 StoneSlab_1 = 0x2D6B97E4; // Stone Slab
    constexpr u32 OakWoodSlab_1 = 0xB795E14C; // Oak Wood Slab
    constexpr u32 Sunflower = 0xFB6416AA; // Sunflower
    constexpr u32 TallGrass = 0x64063791; // Tall Grass
    constexpr u32 DoubleTallGrass = 0x0D46268B; // Double Tall Grass
    constexpr u32 GlassPane = 0x5FCC9EE9; // Glass Pane
    constexpr u32 Tnt_2 = 0xE9396789; // TNT
    constexpr u32 Torch = 0xE6C9F625; // Torch
    constexpr u32 TorchCharcoal = 0xC9DF6EE4; // Torch (Charcoal)
    constexpr u32 TorchCoal = 0xEA22DAAC; // Torch (Coal)
    constexpr u32 IronTrapdoor = 0xFA6DF1EB; // Iron Trapdoor
    constexpr u32 WoodenTrapdoor = 0xDD72034A; // Wooden Trapdoor
    constexpr u32 Tripwire = 0x036C80C9; // Tripwire
    constexpr u32 TripwireHook = 0x742FFCCB; // Tripwire Hook
    constexpr u32 OrangeTulip = 0xF2C11314; // Orange Tulip
    constexpr u32 PinkTulip = 0x1A2CB060; // Pink Tulip
    constexpr u32 RedTulip = 0xF1D4FF1F; // Red Tulip
    constexpr u32 WhiteTulip = 0xD4AAC563; // White Tulip
    constexpr u32 Vines = 0x6AC205BB; // Vines
    constexpr u32 HangingBanner = 0x25A2BC32; // Hanging Banner
    constexpr u32 Water = 0x34CF51AA; // Water
    constexpr u32 LilyPad = 0x92D77ABA; // Lily Pad
    constexpr u32 Cobweb = 0xBEED864F; // Cobweb
    constexpr u32 WeightedPressurePlateHeavy = 0x1E33D131; // Weighted Pressure Plate (Heavy)
    constexpr u32 WeightedPressurePlateLight = 0x70908CD4; // Weighted Pressure Plate (Light)
    constexpr u32 EndStone = 0x7104A943; // End Stone
    constexpr u32 WoodSlabAnyType = 0x68615D41; // Wood Slab (any type)
    constexpr u32 CraftingTable = 0xE2E6E91C; // Crafting Table
    constexpr u32 SetDay = 0xD554D957; // Set Day
    constexpr u32 SetNight = 0xC0D12A27; // Set Night
    constexpr u32 TippedArrow_1 = 0x9A47236C; // Tipped Arrow
    constexpr u32 TippedArrow_2 = 0x9C7F167C; // Tipped Arrow
    constexpr u32 ArrowOfFireResistance = 0x9F68DFED; // Arrow of Fire Resistance
    constexpr u32 ArrowOfHarming = 0x13EB821F; // Arrow of Harming
    constexpr u32 ArrowOfHealing = 0x04E79911; // Arrow of Healing
    constexpr u32 ArrowOfInvisibility = 0x07143CE8; // Arrow of Invisibility
    constexpr u32 ArrowOfLeaping = 0x2B9DE1E9; // Arrow of Leaping
    constexpr u32 ArrowOfLevitation = 0xC1D8210E; // Arrow of Levitation
    constexpr u32 ArrowOfLuck = 0xE2EB8EB0; // Arrow of Luck
    constexpr u32 TippedArrow_3 = 0x4694ED89; // Tipped Arrow
    constexpr u32 ArrowOfNightVision = 0x5965C116; // Arrow of Night Vision
    constexpr u32 ArrowOfPoison = 0x3DEFBE45; // Arrow of Poison
    constexpr u32 ArrowOfRegeneration = 0x52CB2B68; // Arrow of Regeneration
    constexpr u32 ArrowOfSlowness = 0x64F822B5; // Arrow of Slowness
    constexpr u32 ArrowOfStrength = 0xA3DA5C54; // Arrow of Strength
    constexpr u32 ArrowOfSwiftness = 0x8657504D; // Arrow of Swiftness
    constexpr u32 TippedArrow_4 = 0x1BAA4224; // Tipped Arrow
    constexpr u32 ArrowOfSplashing = 0xEFB7CC44; // Arrow of Splashing
    constexpr u32 ArrowOfWaterBreathing = 0xB83A165B; // Arrow of Water Breathing
    constexpr u32 ArrowOfWeakness = 0x2776AEE2; // Arrow of Weakness
    constexpr u32 ArrowOfDecay = 0xA97113FC; // Arrow of Decay
    constexpr u32 IfYouPlayThisGameInHighDefinition = 0x0AD79941; // If you play this game in High Definition mode, you can have up to four players in split-screen on th...
    constexpr u32 ConnectExtraControllersToYourConsoleAndPress = 0xE4D51ED8; // Connect extra controllers to your console and press{*CONTROLLER_VK_START*} on them to join a game at...
    constexpr u32 UseAHoeToPrepareAreasOfGroundForPlanting = 0x19F43D28; // Use a hoe to prepare areas of ground for planting.
    constexpr u32 SpidersWontAttackYouDuringDayUnlessYou = 0x3FF6B791; // Spiders won't attack you during the day - unless you attack them.
    constexpr u32 DiggingSoilOrSandWithASpadeIs = 0x65F931FA; // Digging soil or sand with a spade is faster than with your hand!
    constexpr u32 EatingCookedPorkChopsGivesMoreHealthThan = 0x8BFBAC63; // Eating cooked pork chops gives more health than eating raw pork chops.
    constexpr u32 MakeSomeTorchesToLightUpAreasAt = 0xB1FE26CC; // Make some torches to light up areas at night. Monsters will avoid the areas around these torches.
    constexpr u32 GetToDestinationsFasterWithAMinecartAnd = 0xD800A135; // Get to destinations faster with a minecart and rail!
    constexpr u32 PlantSomeSaplingsAndyLlGrowIntoTrees = 0xFE031B9E; // Plant some saplings and they'll grow into trees.
    constexpr u32 PigmenWontAttackYouUnlessYouAttackm = 0x24059607; // Pigmen won't attack you, unless you attack them.
    constexpr u32 YouCanChangeYourGameSpawnPointAnd = 0xE9E069E0; // You can change your game spawn point and skip to dawn by sleeping in a bed.
    constexpr u32 HitThoseFireballsBackAtGhast = 0x0FE2E449; // Hit those fireballs back at the Ghast!
    constexpr u32 AlterGammaSettingsToMakeGameBrighterOr = 0x56DC8E13; // Alter the gamma settings to make the game brighter or darker.
    constexpr u32 BuildingAPortalWillAllowYouToTravel = 0x0A78FA5B; // Building a portal will allow you to travel to another dimension - The Nether.
    constexpr u32 PressControllerActionDropToDropItemCurrently = 0xE4767FF2; // Press{*CONTROLLER_ACTION_DROP*} to drop the item currently in your hand!
    constexpr u32 UseRightToolForJob = 0xBE740589; // Use the right tool for the job!
    constexpr u32 IfYouCantFindAnyCoalForYour = 0x98718B20; // If you can't find any coal for your torches, you can always make charcoal from trees in a furnace.
    constexpr u32 DiggingStraightDownOrStraightUpIsNot = 0xA282E3FF; // Digging straight down or straight up is not a great idea.
    constexpr u32 BonemealCraftedFromASkeletonBoneCanBe = 0x7C806996; // Bonemeal (crafted from a Skeleton bone) can be used as a fertilizer, and can make things grow instan...
    constexpr u32 CreepersExplodeWhenyGetCloseToYou = 0x567DEF2D; // Creepers explode when they get close to you!
    constexpr u32 ObsidianIsCreatedWhenWaterHitsALava = 0x307B74C4; // Obsidian is created when water hits a lava source block.
    constexpr u32 LavaCanTakeMinutesToDisappearCompletelyWhen = 0x3A8CCDA3; // Lava can take minutes to disappear COMPLETELY when the source block is removed.
    constexpr u32 CobblestoneIsResistantToGhastFireballsMakingIt = 0x148A533A; // Cobblestone is resistant to Ghast fireballs, making it useful for guarding portals.
    constexpr u32 IfYouSetGameDifficultyToPeacefulYour = 0x30DA13AA; // If you set the game difficulty to Peaceful, your health will automatically regenerate, and no monste...
    constexpr u32 BlocksThatCanBeUsedAsALight = 0xF9FD6E2A; // Blocks that can be used as a light source will melt snow and ice. This includes torches, glowstone, ...
    constexpr u32 TakeCautionWhenBuildingStructuresMadeOfWool = 0x1FFFE893; // Take caution when building structures made of wool in open air, as lightning from thunderstorms can ...
    constexpr u32 ASingleBucketOfLavaCanBeUsed = 0xADF87958; // A single bucket of lava can be used in a furnace to smelt 100 blocks.
    constexpr u32 TheInstrumentPlayedByANoteBlockDepends = 0xD3FAF3C1; // The instrument played by a note block depends on the material beneath it.
    constexpr u32 ZombiesAndSkeletonsCanSurviveDaylightIfyAre = 0x920757CE; // Zombies and Skeletons can survive daylight if they are in water.
    constexpr u32 AttackingAWolfWillCauseAnyWolvesIn = 0xB809D237; // Attacking a wolf will cause any wolves in the immediate vicinity to turn hostile and attack you. Thi...
    constexpr u32 WolvesCannotEnterNether = 0x460262FC; // Wolves cannot enter the Nether.
    constexpr u32 WolvesWontAttackCreepers = 0x6C04DD65; // Wolves won't attack Creepers.
    constexpr u32 ChickensLayAnEggEvery5To10Minutes = 0xC9E99AE2; // Chickens lay an egg every 5 to 10 minutes.
    constexpr u32 ObsidianCanOnlyBeMinedWithADiamondPickaxe = 0xEFEC154B; // Obsidian can only be mined with a diamond pickaxe.
    constexpr u32 FeedABoneToAWolfToTame = 0xA2E182E5; // Feed a bone to a wolf to tame it. You can then make it sit or follow you.
    constexpr u32 CreepersAreEasiestObtainableSourceOfGunpowder = 0xEA822B5D; // Creepers are the easiest obtainable source of gunpowder.
    constexpr u32 PlacingTwoChestsSideBySideWillMake = 0xC47FB0F4; // Placing two chests side by side will make one large chest.
    constexpr u32 TameWolvesShowirHealthWithPositionOfirTail = 0x3687202F; // Tame wolves show their health with the position of their tail. Feed them meat to heal them.
    constexpr u32 CookCactusInAFurnaceToGetGreenDye = 0x1084A5C6; // Cook cactus in a furnace to get green dye.
    constexpr u32 YouLlGetLatestInfoOnThisGame = 0x527841B9; // You'll get the latest info on this game from 4JStudios on twitter!
    constexpr u32 DontLookAnEndermanInEye = 0x2C75C750; // Don't look an Enderman in the eye!
    constexpr u32 ReadWhatSNewSectionInHowTo = 0x9E7D368B; // Read the What's New section in the How To Play menus to see the latest update information about the ...
    constexpr u32 StackableFencesAreInGameNow = 0x787ABC22; // Stackable fences are in the game now!
    constexpr u32 MinecraftforumHasASectionDedicatedToNintendoSwitch = 0x1A95FEA5; // minecraftforum has a section dedicated to the Nintendo Switch Edition.
    constexpr u32 SomeAnimalsWillFollowYouIfYouHave = 0xF493843C; // Some animals will follow you if you have wheat in your hand.
    constexpr u32 YouCanDropItemsWhenInInventoryMenu = 0x7CDF087C; // You can drop items when in the Inventory menu by moving the cursor off the menu and pressing{*CONTRO...
    constexpr u32 IfAnAnimalCantMoveMoreThan20 = 0xDA069F2C; // If an animal can't move more than 20 blocks in any direction, it won't despawn.
    constexpr u32 SleepingInABedAtNightWillFast = 0xEEE677B7; // Sleeping in a bed at night will fast forward the game to dawn, but all players in a multiplayer game...
    constexpr u32 HarvestPorkChopsFromPigsAndCookAnd = 0xC8E3FD4E; // Harvest pork chops from pigs, and cook and eat them to regain health.
    constexpr u32 HarvestLeatherFromCowsAndUseItTo = 0xDAC3C5F9; // Harvest leather from cows, and use it to make armor.
    constexpr u32 IfYouHaveAnEmptyBucketYouCan = 0xB4C14B90; // If you have an empty bucket, you can fill it with milk from a cow, or water, or lava!
    constexpr u32 NewDownloadableContentIsAvailableAccessItFrom = 0x9C11A47E; // New Downloadable Content is available! Access it from the Minecraft Store button on the Main Menu.
    constexpr u32 YouCanChangeLookOfYourCharacterWith = 0x64A70FA4; // You can change the look of your character with a Skin Pack from the Minecraft Store. Select 'Minecra...
    constexpr u32 MusicByC418 = 0x39F3BCDA; // Music by C418!
    constexpr u32 DoNotLookDirectlyAtBugs = 0x22D3FFFA; // Do not look directly at the bugs.
    constexpr u32 CreepersWereBornFromACodingBug = 0x48D67A63; // Creepers were born from a coding bug.
    constexpr u32 IsItAChickenOrIsItADuck = 0xD6CF0B28; // Is it a chicken or is it a duck?
    constexpr u32 WereYouAtMinecon = 0xFCD18591; // Were you at Minecon?
    constexpr u32 NoOneAtMojangHasEverSeenJunkboySFace = 0xBADDE99E; // No-one at Mojang has ever seen junkboy's face.
    constexpr u32 DidYouKnowreSAMinecraftWiki = 0xE0E06407; // Did you know there's a Minecraft Wiki?
    constexpr u32 MojangSNewOfficeIsCool = 0x6ED8F4CC; // Mojang's new office is cool!
    constexpr u32 ConsoleBrokeLotsOfRecords = 0x94DB6F35; // Minecraft: Nintendo Switch Edition broke lots of records!
    constexpr u32 Minecon2011WasInLasVegasNevadaUsa = 0xF2C02CB2; // Minecon 2011 was in Las Vegas, Nevada, USA!
    constexpr u32 Minecon2012WasInParisFrance = 0x18C2A71B; // Minecon 2012 was in Paris, France!
    constexpr u32 NotchHasOverAMillionFollowersOnTwitter = 0x13F14271; // Notch has over a million followers on twitter!
    constexpr u32 Minecon2013WasInOrlandoFloridaUsa = 0x520926A9; // Minecon 2013 was in Orlando, Florida, USA!
    constexpr u32 NoOneCanRememberWhereMinecon2014WasHeld = 0x2C06AC40; // No-one can remember where Minecon 2014 was held.
    constexpr u32 Minecon2015WasInLondonUk = 0x9E0E1B7B; // Minecon 2015 was in London, UK!
    constexpr u32 Minecon2016WasInAnaheimCaliforniaUsa = 0x780BA112; // Minecon 2016 was in Anaheim, California, USA!
    constexpr u32 PartyWasExcellent = 0xEA13104D; // .party() was excellent!
    constexpr u32 AlwaysAssumeRumorsAreFalseRatherThanAssumingy = 0xC41095E4; // Always assume rumors are false, rather than assuming they're true!
    constexpr u32 NotAllSwedishPeopleHaveBlondeHairSome = 0xEDEEC808; // Not all Swedish people have blonde hair. Some, like Jens from Mojang, even have ginger hair!
    constexpr u32 WeThink4jStudiosHasRemovedHerobrineFrom = 0xF80020E7; // We think 4J Studios has removed Herobrine from the Nintendo Switch console game, but we're not too s...
    constexpr u32 ThereWillBeAnUpdateToThisGameEventually = 0xD1FDA67E; // There will be an update to this game eventually!
    constexpr u32 WhoIsNotch = 0xABFB2C15; // Who is Notch?
    constexpr u32 MojangHasMoreAwardsThanStaff = 0x85F8B1AC; // Mojang has more awards than staff!
    constexpr u32 SomeFamousPeoplePlayMinecraft = 0x2FE263FB; // Some famous people play Minecraft!
    constexpr u32 Deadmau5LikesMinecraft = 0x09DFE992; // deadmau5 likes Minecraft!
    constexpr u32 ExitBook = 0xA95E7F9A; // Exit Book
    constexpr u32 Sign_2 = 0xDB6DE516; // Sign
    constexpr u32 ExitWithoutSavingWithoutSaving = 0xA3D4A110; // Exit Without Saving
    constexpr u32 DisableAutosaveAutosave_1 = 0x6E27EB2E; // Disable autosave
    constexpr u32 EnableAutosave = 0xE580CA63; // Enable autosave
    constexpr u32 EnterBookText = 0x671EA8B2; // Enter Book Text
    constexpr u32 EnterBookTitle = 0xC5848E87; // Enter Book Title
    constexpr u32 Rename = 0xBDC6C1EB; // Rename
    constexpr u32 RenameSave = 0xF96217DA; // Rename Save
    constexpr u32 SaveGame_1 = 0x3143FCAB; // Save Game
    constexpr u32 TransferSave = 0x426C6FB9; // Transfer Save
    constexpr u32 StartGame_1 = 0xDF4CC75A; // Start Game
    constexpr u32 TitleUpdate14 = 0x9425F272; // Title Update 14
    constexpr u32 WelcomeBackYouMayNotHaveNoticedBut = 0x31BF39B5; // Welcome back! You may not have noticed, but your Minecraft has just been updated.{*B*}\r\n{*B*}- Add...
    constexpr u32 TntExplodes = 0xEF311201; // TNT Explodes
    constexpr u32 ChangeNetworkMode = 0xF36F774D; // Change Network Mode
    constexpr u32 Invert = 0xFE985704; // Invert
    constexpr u32 LookBehind = 0x78D551AA; // Look Behind
    constexpr u32 NotReady = 0x3B3C69FF; // Not Ready
    constexpr u32 Ready = 0x87C65ED5; // Ready
    constexpr u32 RestartRace = 0xEC79C513; // Restart Race
    constexpr u32 RestartSection = 0x7A8E2667; // Restart Section
    constexpr u32 Squeak = 0x162E9829; // Squeak
    constexpr u32 Squawk = 0xC1781F1C; // Squawk
    constexpr u32 Cackle = 0x9D34B5A5; // Cackle
    constexpr u32 Accept = 0xD8A6B805; // Accept
    constexpr u32 Add = 0x91D18454; // Add
    constexpr u32 AddPage = 0xE14C8F20; // Add Page
    constexpr u32 AddPattern = 0x3DBF61FB; // Add Pattern
    constexpr u32 AllGames = 0x60F9906E; // All Games
    constexpr u32 ChangePose = 0x3C2D9AD6; // Change Pose
    constexpr u32 Attach = 0x7B938F36; // Attach
    constexpr u32 Back_1 = 0x4F6BCF5E; // Back
    constexpr u32 BanLevel = 0xD8891446; // Ban Level
    constexpr u32 Block = 0xABF024A4; // Block
    constexpr u32 Boost = 0x39CF7C20; // Boost
    constexpr u32 Cancel_2 = 0xE21D8023; // Cancel
    constexpr u32 CancelJoin = 0x23EC13A6; // Cancel Join
    constexpr u32 ChangeFilter = 0x4990EA8C; // Change Filter
    constexpr u32 ChangeGroup = 0xAE73C26B; // Change Group
    constexpr u32 SelectTab = 0x399B9963; // Select Tab
    constexpr u32 ChangeStorageDevice = 0x9EDA23DB; // Change Storage Device
    constexpr u32 ChangePitch = 0x1CEAFE25; // Change Pitch
    constexpr u32 Clean = 0x5BA4C368; // Clean
    constexpr u32 ClearQuickSelect = 0x9F741E39; // Clear Quick Select
    constexpr u32 ClearAllSlots = 0x1370995B; // Clear All Slots
    constexpr u32 Collect = 0x4C4246B3; // Collect
    constexpr u32 Continue = 0x8AD40344; // Continue
    constexpr u32 Crafting_3 = 0x515CE187; // Crafting
    constexpr u32 Create_1 = 0x5F116E91; // Create
    constexpr u32 Creative_2 = 0x43F3DEE6; // Creative
    constexpr u32 Cure = 0xCF9F8CE4; // Cure
    constexpr u32 Delete = 0xB4598654; // Delete
    constexpr u32 DeleteSave = 0x0E3265E5; // Delete Save
    constexpr u32 Detonate = 0xAD0100B1; // Detonate
    constexpr u32 DigPath = 0xEA46AB15; // Dig Path
    constexpr u32 Dismount = 0xEA16F13E; // Dismount
    constexpr u32 Distribute = 0xBF639AC2; // Distribute
    constexpr u32 DrawDraw = 0x4381BCF0; // Draw
    constexpr u32 Drink = 0x32374037; // Drink
    constexpr u32 DropAll = 0x8DFD872A; // Drop All
    constexpr u32 Drop_1 = 0x92835202; // Drop
    constexpr u32 DropOne = 0xECF3DCE7; // Drop One
    constexpr u32 Dye = 0x1A4E966D; // Dye
    constexpr u32 DyeCollar = 0x58AE5A1A; // Dye collar
    constexpr u32 Eat = 0xD26C6DB5; // Eat
    constexpr u32 Eject = 0x3F9C7CF0; // Eject
    constexpr u32 Empty = 0xE80CCF48; // Empty
    constexpr u32 Equip = 0xAFD35F15; // Equip
    constexpr u32 ExecuteCommand = 0x5AFF0202; // Execute Command
    constexpr u32 Exit = 0xDED2EF45; // Exit
    constexpr u32 AddFavorite = 0x855B0987; // Add Favorite
    constexpr u32 RemoveFavorite = 0x3DE1E040; // Remove Favorite
    constexpr u32 Feed = 0x82F8D90F; // Feed
    constexpr u32 Fill = 0xEB41BC52; // Fill
    constexpr u32 Launch = 0x568A07BE; // Launch
    constexpr u32 Flush = 0xF6E2BC61; // Flush
    constexpr u32 FollowMe = 0xE1122504; // Follow Me
    constexpr u32 Group = 0x06974812; // Group
    constexpr u32 Grow = 0x9F5FDC40; // Grow
    constexpr u32 Hang = 0xCE1819A5; // Hang
    constexpr u32 Harvest = 0x11D66E3A; // Harvest
    constexpr u32 Heal = 0x56B3F98D; // Heal
    constexpr u32 Hide = 0xF131E015; // Hide
    constexpr u32 Hit = 0xFDEF7118; // Hit
    constexpr u32 Ignite = 0xA3BAC985; // Ignite
    constexpr u32 Info = 0xFDEC4423; // Info
    constexpr u32 Install = 0x9302B074; // Install
    constexpr u32 InstallFullVersion = 0xFAD5EFD8; // Install Full Version
    constexpr u32 InstallTrialVersion = 0x2D60C981; // Install Trial Version
    constexpr u32 InviteFriends = 0x1C0A79B2; // Invite Friends
    constexpr u32 InviteParty = 0xE7E99795; // Invite Party
    constexpr u32 KickPlayer_1 = 0x3E96698F; // Kick Player
    constexpr u32 LayerOptions_1 = 0xABDA3C31; // Layer Options
    constexpr u32 Leash = 0xA1B34A96; // Leash
    constexpr u32 LoveMode = 0xB47A2AB6; // Love Mode
    constexpr u32 Milk = 0x735A2F66; // Milk
    constexpr u32 Mine_1 = 0x5FB7A25A; // Mine
    constexpr u32 Mix = 0x543FBB09; // Mix
    constexpr u32 Mount = 0x497ADCF0; // Mount
    constexpr u32 MoveDown = 0xC8ED9429; // Move Down
    constexpr u32 MoveUp = 0xCCA984D6; // Move Up
    constexpr u32 MoveUpDown = 0x4EB3A99C; // Move Up/Down
    constexpr u32 Name = 0x5592C692; // Name
    constexpr u32 Navigate = 0x2336EC22; // Navigate
    constexpr u32 Next = 0x279EC02A; // Next
    constexpr u32 NextPage_1 = 0x1269F5BE; // Next Page
    constexpr u32 Open = 0x41590AD1; // Open
    constexpr u32 Options_1 = 0xC1FE45E5; // Options
    constexpr u32 PageDown = 0x0A03CD8B; // Page Down
    constexpr u32 PageUp = 0x503363B4; // Page Up
    constexpr u32 PageDown_1 = 0x1A418C5C; // Page Down
    constexpr u32 PageUp_1 = 0x3404DE23; // Page Up
    constexpr u32 PartyGames = 0x51758DF1; // Party Games
    constexpr u32 TakeAll = 0x1D6A6D67; // Take All
    constexpr u32 Take = 0x3D8502AF; // Take
    constexpr u32 TakeHalf = 0x23A35725; // Take Half
    constexpr u32 TakePlace = 0x387566E2; // Take/Place
    constexpr u32 Place = 0x4C36CD96; // Place
    constexpr u32 PlaceAll = 0x9A298990; // Place All
    constexpr u32 Place_1 = 0x987F8D08; // Place
    constexpr u32 PlaceOne = 0xB3A67E6D; // Place One
    constexpr u32 Plant = 0x512092D2; // Plant
    constexpr u32 Play = 0x293A30D9; // Play
    constexpr u32 Presets_1 = 0x7512B413; // Presets
    constexpr u32 Previous = 0x8AC37114; // Previous
    constexpr u32 PreviousPage_1 = 0x014B3660; // Previous Page
    constexpr u32 Privileges = 0x6FB35F79; // Privileges
    constexpr u32 QuickMove = 0x5D4FB246; // Quick Move
    constexpr u32 MoveArmor = 0x9773ED6A; // Move Armor
    constexpr u32 MoveFuel = 0x5BC14933; // Move Fuel
    constexpr u32 MoveIngredient = 0xCDF2E30C; // Move Ingredient
    constexpr u32 MoveTool = 0x5FB2D821; // Move Tool
    constexpr u32 MoveWeapon = 0x80CDA15B; // Move Weapon
    constexpr u32 Randomize = 0xD30E0A41; // Randomize
    constexpr u32 Read = 0x80699FFF; // Read
    constexpr u32 RefreshOnlineGamesList = 0x29E5E558; // Refresh Online Games List
    constexpr u32 Reinstall = 0x6B5B6B53; // Reinstall
    constexpr u32 Release = 0xEC754EE9; // Release
    constexpr u32 Remove = 0x9219698B; // Remove
    constexpr u32 RemovePattern = 0x1318F8F4; // Remove Pattern
    constexpr u32 Repair = 0x5E7DFC88; // Repair
    constexpr u32 Ride = 0x257433AF; // Ride
    constexpr u32 Rotate = 0x4CBEF584; // Rotate
    constexpr u32 Saddle_1 = 0x4638A83E; // Saddle
    constexpr u32 AttachChest = 0xDB4A7909; // Attach Chest
    constexpr u32 Sail = 0xEC8ECE8A; // Sail
    constexpr u32 SaveOptions = 0x0AA027CC; // Save Options
    constexpr u32 TransferSaveFromWiiU = 0xFFF75BAB; // Transfer Save from Wii U
    constexpr u32 TransferSaveToSwitch = 0x7E7C9ABA; // Transfer Save to Switch
    constexpr u32 Scale = 0x7BC900DD; // Scale
    constexpr u32 Select = 0x8D6323ED; // Select
    constexpr u32 SelectAll = 0xB30CBAFB; // Select All
    constexpr u32 SelectSkin = 0x04D09D95; // Select Skin
    constexpr u32 SelectStorageDevice = 0x21C0A77D; // Select Storage Device
    constexpr u32 SendFriendRequest = 0xAE94DA8A; // Send Friend Request
    constexpr u32 SetSpawnPoint = 0x56A29174; // Set Spawn Point
    constexpr u32 ShareToFacebook = 0x3A4AEC18; // Share To Facebook
    constexpr u32 Shear = 0xBE5AAB60; // Shear
    constexpr u32 ShowDescription = 0xAE01F627; // Show Description
    constexpr u32 ShowIngredients = 0x63D85F8F; // Show Ingredients
    constexpr u32 ShowInventory = 0xCCF37993; // Show Inventory
    constexpr u32 Sit = 0x3102263B; // Sit
    constexpr u32 Sleep = 0x36D8E732; // Sleep
    constexpr u32 Next_1 = 0x600DA5D4; // Next
    constexpr u32 Previous_1 = 0x2ECE48BA; // Previous
    constexpr u32 Swap_1 = 0x86AB3498; // Swap
    constexpr u32 SwimUp = 0xD47C58D0; // Swim Up
    constexpr u32 TakeEverything_1 = 0x15BF4838; // Take Everything
    constexpr u32 Tame = 0x95CFA728; // Tame
    constexpr u32 Throw = 0x3C0788A3; // Throw
    constexpr u32 Till = 0x70889480; // Till
    constexpr u32 TipArrows = 0x5401ED31; // Tip Arrows
    constexpr u32 TipArrow = 0x3E95FA83; // Tip Arrow
    constexpr u32 Trade = 0x80CF40EB; // Trade
    constexpr u32 Type_1 = 0xF73B4F2D; // Type
    constexpr u32 Release_1 = 0x551269B5; // Release
    constexpr u32 UnlockFullGame_1 = 0x12C5D92C; // Unlock Full Game
    constexpr u32 UnselectAll = 0xD96891F0; // Unselect All
    constexpr u32 Use_1 = 0xEA4E897E; // Use
    constexpr u32 ViewGamerCard = 0xAEC93217; // View Gamer Card
    constexpr u32 ViewGamerProfile = 0x85953770; // View Gamer Profile
    constexpr u32 WakeUp = 0x42CA4648; // Wake Up
    constexpr u32 WhatSThis = 0x2FCCDFFB; // What's This?
    constexpr u32 Zoom = 0x5B2EFAC2; // Zoom
    constexpr u32 YouRePlayingTrialGameButYouLl = 0x1E1FFDAF; // You're playing the trial game, but you'll need the full game to be able to play Mini Games.\r\nWould...
    constexpr u32 YouVeBeenPlayingConsoleTrialGameFor = 0x91A0515A; // You've been playing the Minecraft: Nintendo Switch Edition Trial Game for the maximum time allowed! ...
    constexpr u32 TrialTimeout = 0x383BA45F; // Trial Timeout
    constexpr u32 TrustPlayers_1 = 0x846FA807; // Trust Players
    constexpr u32 InThisAreaAnimalsHaveBeenPennedIn = 0x74DBEAFF; // In this area animals have been penned in. You can breed animals to produce baby versions of themselv...
    constexpr u32 CongratulationsYouHaveCompletedTutorialTimeInGame = 0x857669AA; // Congratulations, you have completed the tutorial. Time in the game is now passing normally, and you ...
    constexpr u32 ExitPictureTWhenYouAreReadyTo = 0xACD522E4; // {*EXIT_PICTURE*}\t  When you are ready to explore further, there is a path leading out of this area ...
    constexpr u32 YouCannotLeaveThisAreaUntilYouHave = 0x53717F71; // You cannot leave this area until you have completed the tutorial.
    constexpr u32 YouAreNowInCreativeMode = 0x4A0984B8; // You are now in Creative mode.
    constexpr u32 InThisAreaAFarmHasBeenSet = 0xC5A573A3; // In this area a farm has been set up. Farming enables you to create a renewable source of food and ot...
    constexpr u32 InThisAreaYouWillFindAreasSetup = 0x4349E9C1; // In this area you will find areas setup to help you learn about fishing, boats, pistons, and redstone...
    constexpr u32 OutsideOfThisAreaYouWillFindExamples = 0x59983743; // Outside of this area you will find examples of buildings, farming, minecarts and tracks, enchanting,...
    constexpr u32 InThisAreaAreSomePumpkinsAndBlocks = 0x6270D817; // In this area are some pumpkins and blocks to make a Snow Golem and an Iron Golem.
    constexpr u32 CertainToolsAreBetterForAttackingEnemiesConsider = 0xE729D451; // Certain tools are better for attacking enemies. Consider using a sword to attack.
    constexpr u32 ThereIsABoatInWaterNearbyAnd = 0xB11A0F6B; // There is a boat in the water nearby, and more boats in the chest beside it. To place a boat, point t...
    constexpr u32 YouDoNotHaveAllIngredientsRequiredTo = 0xDBD723F6; // You do not have all the ingredients required to make this item. The box on the bottom left shows the...
    constexpr u32 DifferentToolsAreBetterForDifferentMaterialsYou = 0x70599EAB; // Different tools are better for different materials. You should use an axe to chop tree trunks.
    constexpr u32 DifferentToolsAreBetterForDifferentMaterialsYouAPickaxeMineStoneAnd = 0xC5B6F219; // Different tools are better for different materials. You should use a pickaxe to mine stone and ore. ...
    constexpr u32 DifferentToolsAreBetterForDifferentMaterialsYouAShovelMineSoftLike = 0x6B4D1717; // Different tools are better for different materials. You should use a shovel to mine soft materials l...
    constexpr u32 InChestBesideWaterreIsAFishingRod = 0x7F2DF94F; // In the chest beside the water there is a fishing rod. Take the fishing rod from the chest and select...
    constexpr u32 HintHoldControllerActionActionToMineAnd = 0xA353E300; // Hint: Hold {*CONTROLLER_ACTION_ACTION*}to mine and chop using your hand, or whatever you are holding...
    constexpr u32 IfYouMovePointerOutsideOfInterfaceWhile = 0x13814444; // If you move the pointer outside of the interface while carrying an item, you can drop that item.
    constexpr u32 InThisAreareIsAMinecartOnA = 0x7842D528; // In this area there is a minecart on a track. To enter the minecart, point the cursor at it and press...
    constexpr u32 ThisMoreAdvancedPistonMechanismCreatesASelf = 0xF258C0AD; // This more advanced piston mechanism creates a self-repairing bridge! Push the button to activate, th...
    constexpr u32 HoldControllerActionJumpToSwimUp = 0xB49859E1; // Hold{*CONTROLLER_ACTION_JUMP*} to swim up.
    constexpr u32 TheToolYouAreUsingHasBecomeDamaged = 0x7138C68B; // The tool you are using has become damaged. Every time you use a tool it becomes damaged, and will ev...
    constexpr u32 NewFeaturesHaveBeenAddedToGameIn = 0x9BEB5F3F; // New features have been added to the game in the latest version, including new areas in the tutorial ...
    constexpr u32 InThisAreareIsAPortalToNether = 0x9D0DE8AF; // In this area there is a Portal to the Nether!
    constexpr u32 RNTTTBRN = 0x0645B6F8; // \r\n\t\t\t{*B*}\r\n\t\t\tPress{*CONTROLLER_VK_A*} to learn more about the Anvil interface.{*B*}\r\n\...
    constexpr u32 RNTTTBRN_1 = 0xA70CA96C; // \r\n\t\t\t{*B*}\r\n\t\t\tPress{*CONTROLLER_VK_A*} to learn more about the Anvil.{*B*}\r\n\t\t\tPress...
    constexpr u32 BRNpressControllerVkAToLearn = 0xBB525774; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about crafting Banners.{*B*}\r\nPress{*CONTROLLER_VK...
    constexpr u32 BRNpressControllerVkAToContinue = 0x791088B0; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to continue with the tutorial.{*B*}\r\nPress{*CONTROLLER_VK_B*} if...
    constexpr u32 BRNpressControllerVkAToContinueAlreadyKnowHowUseBeacon = 0x0BA245C8; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to continue.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you already know ...
    constexpr u32 BRNpressControllerVkAToLearnBeaconsBeacons = 0x6E858BBC; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Beacons.{*B*}\r\nPress{*CONTROLLER_VK_B*} if y...
    constexpr u32 BRNpressControllerVkAToLearnBedsBeds = 0x2C631D03; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about beds.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you ...
    constexpr u32 BRNpressControllerVkAToLearnBoatsBoats = 0x811A4288; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about boats.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you...
    constexpr u32 BRNpressControllerVkAToLearnAnimalsAndBreedingAnimalsAnd = 0x300149B4; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about animals and breeding.{*B*}\r\nPress{*CONTROLLE...
    constexpr u32 BRNpressControllerVkAToContinueAlreadyKnowHowUseBrewing = 0x9E500506; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to continue.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you already know ...
    constexpr u32 BRNpressControllerVkAToLearnBrewingAndPotionsBrewingAnd = 0x0ADA8412; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about brewing and potions.{*B*}\r\nPress{*CONTROLLER...
    constexpr u32 BPressControllerVkAToContinueB = 0x7F0C21BA; // {*B*}Press{*CONTROLLER_VK_A*} to continue.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you already know how ...
    constexpr u32 BRNpressControllerVkAToContinueAlreadyKnowHowUseCreative = 0x46859B85; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to continue.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you already know ...
    constexpr u32 BRNpressControllerVkAToLearnCreativeModeCreativeMode = 0xD1EBBA23; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Creative mode.{*B*}\r\nPress{*CONTROLLER_VK_B*...
    constexpr u32 BRNpressControllerVkAToLearnSomeAdvancedElytraTechniquesEverything = 0x48CF39C6; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn some advanced Elytra techniques.{*B*}\r\nPress{*CONTROLLE...
    constexpr u32 BRNpressControllerVkAToLearnElytraBasicsElytra = 0xB906B2F2; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Elytra.{*B*}\r\nPress{*CONTROLLER_VK_B*} if yo...
    constexpr u32 BRNpressControllerVkAToLearnEnchantingInterfaceEnchantingInterface = 0x690D3FD7; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about the enchanting interface.{*B*}\r\nPress{*CONTR...
    constexpr u32 BRNpressControllerVkAToLearnEnchantingEnchanting = 0x23C4627B; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about enchanting.{*B*}\r\nPress{*CONTROLLER_VK_B*} i...
    constexpr u32 RNTTTBRNEnderChestsEnderChests = 0x0372B359; // \r\n\t\t\t{*B*}\r\n\t\t\tPress{*CONTROLLER_VK_A*} to learn more about Ender Chests.{*B*}\r\n\t\t\tPr...
    constexpr u32 BRNpressControllerVkAToLearnFarmingFarming = 0x307FD200; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about farming.{*B*}\r\nPress{*CONTROLLER_VK_B*} if y...
    constexpr u32 BRNpressControllerVkAToContinueAlreadyKnowHowUseFirework = 0xB0ED8A95; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to continue.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you already know ...
    constexpr u32 BRNpressControllerVkAToLearnFireworksFireworks = 0xD357B889; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Fireworks. {*B*}\r\nPress{*CONTROLLER_VK_B*} i...
    constexpr u32 BRNpressControllerVkAToLearnFishingFishing = 0x1B284F34; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about fishing.{*B*}\r\nPress{*CONTROLLER_VK_B*} if y...
    constexpr u32 BRNpressControllerVkAToLearnFoodBarAndEatingFood = 0x2B6F086C; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about the food bar and eating food.{*B*}\r\nPress{*C...
    constexpr u32 BRNpressControllerVkAToContinueAlreadyKnowHowUseA = 0x4C0CF470; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to continue.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you already know ...
    constexpr u32 BRNpressControllerVkAToLearnGolemsGolems = 0x74FEB234; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Golems.{*B*}\r\nPress{*CONTROLLER_VK_B*} if yo...
    constexpr u32 BRNpressControllerVkAToLearnHoppersHoppers = 0x25E7F3E0; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Hoppers.{*B*}\r\nPress{*CONTROLLER_VK_B*} if y...
    constexpr u32 BPressControllerVkAToContinueR = 0xEB9A80F7; // {*B*}Press{*CONTROLLER_VK_A*} to continue.\r\n{*B*}Press{*CONTROLLER_VK_B*} if you already know how ...
    constexpr u32 BPressControllerVkAToLearnMore = 0x7595B01B; // {*B*}Press{*CONTROLLER_VK_A*} to learn more about Horses, Donkeys, Mules, and Llamas.\r\n{*B*}Press{...
    constexpr u32 BRNpressControllerVkAToContinueAlreadyKnowHowUseInventory = 0x9E1E8969; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to continue.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you already know ...
    constexpr u32 BRNpressControllerVkAToLearnMinecartsMinecarts = 0x16DFAE83; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about minecarts.{*B*}\r\nPress{*CONTROLLER_VK_B*} if...
    constexpr u32 BPressControllerVkAToPlayThrough = 0x312B8D14; // {*B*}Press{*CONTROLLER_VK_A*} to play through the tutorial as normal.{*B*}\r\nPress{*CONTROLLER_VK_B...
    constexpr u32 BRNpressControllerVkAToLearnPortalsAndTheNetherPortals = 0x4B4CE444; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Portals and The Nether.{*B*}\r\nPress{*CONTROL...
    constexpr u32 BPressControllerVkAToContinue = 0x03F9463F; // {*B*}Press{*CONTROLLER_VK_A*} to continue.
    constexpr u32 BRNpressControllerVkXToShow = 0xA0D0169C; // {*B*}\r\nPress{*CONTROLLER_VK_X*} to show the item description.
    constexpr u32 BRNpressControllerVkXToShowIngredientsRequiredMakeCurrent = 0xFC8730E4; // {*B*}\r\nPress{*CONTROLLER_VK_X*} to show the ingredients required to make the current item.
    constexpr u32 BRNpressControllerVkXToShowInventoryAgain = 0xAF244F78; // {*B*}\r\nPress{*CONTROLLER_VK_X*} to show the inventory again.
    constexpr u32 BRNpressControllerVkAIfYou = 0x8F331C4A; // {*B*}\r\nPress{*CONTROLLER_VK_A*} if you would like to replay this tutorial. {*B*}\r\nPress{*CONTROL...
    constexpr u32 BRNpressControllerVkAToLearnRedstoneCircuitsAndPistonsRedstone = 0x9EB608A8; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Redstone circuits and Pistons.{*B*}\r\nPress{*...
    constexpr u32 BRNpressControllerVkAToLearnSlimeBlocksSlimeBlocks = 0x1B6A199E; // {*B*}\r\nPress{*CONTROLLER_VK_A*} to learn more about Slime blocks.{*B*}\r\nPress{*CONTROLLER_VK_B*}...
    constexpr u32 BPressControllerVkAToStartTutorial = 0xDF59FC3F; // {*B*}Press{*CONTROLLER_VK_A*} to start the tutorial.{*B*}\r\nPress{*CONTROLLER_VK_B*} if you think y...
    constexpr u32 RNTTTBRNTradingTrading = 0x789B40B7; // \r\n\t\t\t{*B*}\r\n\t\t\tPress{*CONTROLLER_VK_A*} to learn more about the trading interface.{*B*}\r\...
    constexpr u32 RNTTTBRNTradingTrading_1 = 0x824ECB5B; // \r\n\t\t\t{*B*}\r\n\t\t\tPress{*CONTROLLER_VK_A*} to learn more about trading.{*B*}\r\n\t\t\tPress{*...
    constexpr u32 YouHaveAlreadyCompletedThisTutorialWouldYou = 0x6248AD51; // You have already completed this tutorial. Would you like to replay it?
    constexpr u32 InThisAreareAreSomeSimpleRedstoneAnd = 0xF757B9C3; // In this area there are some simple Redstone and Piston circuits, and a chest with more items to exte...
    constexpr u32 Reminder = 0x63F2C751; // Reminder: 
    constexpr u32 ToActivateANetherPortalSetFireTo = 0x4723E187; // To activate a Nether Portal, set fire to the Obsidian blocks inside the frame with a Flint and Steel...
    constexpr u32 RNTTTusingAnvilCostsExperience = 0xE8727115; // \r\n\t\t\tUsing the Anvil costs Experience Levels, and each use has a chance to damage the Anvil.\r\...
    constexpr u32 RNTTTtheTypeOfWork = 0x8D2AFEFF; // \r\n\t\t\tThe type of work to be done, value of the item, number of enchantments, and amount of prio...
    constexpr u32 RNTTTenchantedBooksCanBe = 0x8A0B91D1; // \r\n\t\t\tEnchanted Books can be found inside Chests within dungeons, or enchanted from normal Books...
    constexpr u32 RNTTTtheNumberOfExperience = 0x190AE839; // \r\n\t\t\tThe number of Experience Levels that the work will cost is shown beneath the output. If yo...
    constexpr u32 RNTTTtoEnchantItemsOn = 0x87DCC839; // \r\n\t\t\tTo enchant items on the Anvil, place an Enchanted Book in the second input slot.\r\n\t\t
    constexpr u32 RNTTTthisIsAnvilInterface = 0x0D381DD9; // \r\n\t\t\tThis is the Anvil interface, which you can use to rename, repair and apply enchantments to...
    constexpr u32 RNTTTitIsPossibleTo = 0x67CD9B1F; // \r\n\t\t\tIt is possible to rename the item by editing the name shown in the textbox.\r\n\t\t
    constexpr u32 RNTTTwhenCorrectRawMaterial = 0x4F577027; // \r\n\t\t\tWhen the correct raw material is placed in the second input slot (e.g. Iron Ingots for a d...
    constexpr u32 RNTTTalternativelyASecondIdentical = 0x5E84B4A1; // \r\n\t\t\tAlternatively, a second identical item can be placed into the second slot to combine the t...
    constexpr u32 RNTTTpickingUpRepairedItem = 0x51ED81D1; // \r\n\t\t\tPicking up the repaired item will consume both items used by the Anvil and decrease your E...
    constexpr u32 RNTTTtoBeginWorkingOn = 0x0C9DE21A; // \r\n\t\t\tTo begin working on an item, place it in the first input slot. \r\n\t\t
    constexpr u32 RNTTTinThisAreareIs = 0x2AAC48E5; // \r\n\t\t\tIn this area there is an Anvil and a Chest containing tools and weapons to work on.\r\n\t\...
    constexpr u32 RNTTTrenamingAnItemChanges = 0xA1F8D4E3; // \r\n\t\t\tRenaming an item changes the displayed name for all players and permanently reduces the pr...
    constexpr u32 RNTTTusingAnAnvilWeapons = 0x2E879A8A; // \r\n\t\t\tUsing an Anvil, weapons and tools can be repaired to restore their durability, renamed, or...
    constexpr u32 RNTTTinChestInThis = 0x5F44DD70; // \r\n\t\t\tIn the Chest in this area you will find damaged Pickaxes, raw materials, Bottles O' Enchan...
    constexpr u32 YouLlNeedSomeWoolAndAStick = 0x7893E960; // You'll need some wool and a stick to craft the base of your banner; try using dyed wool for a more c...
    constexpr u32 YouCanAlsoCopyACompletedBannerTo = 0x082EEDDB; // You can also copy a completed banner to a blank banner of the same base color, so don't worry about ...
    constexpr u32 ToGetStartedWithBannerCraftingOpenUp = 0xA94462F4; // To get started with banner crafting, open up a Crafting Table and switch to the Banners type by pres...
    constexpr u32 BannersAreHighlyCustomizableDecorationsThatCanBe = 0xD4A3AFC5; // Banners are highly customizable decorations that can be placed either free standing, or attached to ...
    constexpr u32 ThereAreLoadsOfPatternsToPlayWith = 0x03F94C9D; // There are loads of patterns to play with, split into five different groups that you can navigate by ...
    constexpr u32 NextYouCanAddUpTo6Patterns = 0xEAD9651B; // Next, you can add up to 6 patterns to your banner to make it unique. The last pattern you select wil...
    constexpr u32 EveryPatternCanBeAddedInDifferentColors = 0x78D1F5E0; // Every pattern can be added in different colors using dyes, and some patterns require other items too...
    constexpr u32 YouHaveCompletedFirstPartOfTutorial = 0x28C71B69; // You have completed the first part of the tutorial.
    constexpr u32 TryUsingBeaconToSetPowersItGrants = 0xD4E2892D; // Try using the Beacon to set the powers it grants. You can use the Iron Ingots provided as the necess...
    constexpr u32 BeaconsMustBePlacedSoThatyAreIn = 0x068035AC; // Beacons must be placed so that they are in sunlight during the day. Beacons must be placed on Pyrami...
    constexpr u32 ToSetPowersOfYourBeaconYouMust = 0xC6447326; // To set the powers of your Beacon you must sacrifice an Emerald, Diamond, Gold Ingot, or Iron Ingot i...
    constexpr u32 ThisIsBeaconInterfaceWhichYouCanUse = 0x6FF43521; // This is the Beacon interface, which you can use to choose powers for your Beacon to grant.
    constexpr u32 InBeaconMenuYouCanSelect1Primary = 0x934C3015; // In the Beacon menu you can select 1 primary power for your Beacon. The more tiers your pyramid has t...
    constexpr u32 ABeaconOnAPyramidWithAtLeast = 0xF87CF280; // A Beacon on a pyramid with at least 4 tiers grants an additional option of either the Regeneration s...
    constexpr u32 AtTopOfThisPyramidreIsABeacon = 0x485E84BD; // At the top of this pyramid there is a Beacon.
    constexpr u32 ActiveBeaconsProjectABrightBeamOfLight = 0x702925F0; // Active Beacons project a bright beam of light into the sky and grant powers to nearby players. They ...
    constexpr u32 IfreAreOtherPlayersInYourGameEveryone = 0xA62DA153; // If there are other players in your game, everyone must be in a bed at the same time to be able to sl...
    constexpr u32 ThisIsABedPressControllerActionUse = 0xA76E95BA; // This is a bed. Press{*CONTROLLER_ACTION_USE*} while pointing at it at night to sleep through the nig...
    constexpr u32 ABedShouldBePlacedInASafe = 0x54D286F0; // A bed should be placed in a safe, well-lit place so that monsters do not wake you in the middle of t...
    constexpr u32 YouAreNowSailingABoatToExit = 0x25C06AF9; // You are now sailing a boat. To exit the boat, press{*CONTROLLER_ACTION_DISMOUNT*} .{*BoatIcon*}
    constexpr u32 ABoatAllowsYouToTravelQuicklyOver = 0xE6A88FAF; // A boat allows you to travel quickly over water. When in a boat, push {*CONTROLLER_ACTION_MOVE*} forw...
    constexpr u32 WhenTwoAnimalsOfSameSpeciesMeetAnd = 0xA6BF646E; // When two animals of the same species meet, and both are in Love Mode, they will kiss for a few secon...
    constexpr u32 YouHaveNowCompletedAnimalAndBreedingTutorial = 0xA1E87F17; // You have now completed the animal and breeding tutorial.
    constexpr u32 AfterBeingInLoveModeAnAnimalWill = 0x004CD6CB; // After being in Love Mode, an animal will not be able to enter it again for about five minutes.
    constexpr u32 ToGetAnimalsToBreedYouWillNeed = 0x34096C8C; // To get the animals to breed, you will need to feed them with the right food to get them to go into '...
    constexpr u32 FeedWheatToACowMooshroomOrSheep = 0x2602E491; // Feed Wheat to a cow, mooshroom, or sheep; Carrots to pigs or rabbits; Wheat Seeds to a chicken; unco...
    constexpr u32 SomeAnimalsWillFollowYouIfYouAre = 0xC5936017; // Some animals will follow you if you are holding their food in your hand. This makes it easier to gro...
    constexpr u32 OcelotsCanBeTamedIntoCatsByGivingm = 0xB6FADD57; // Ocelots can be tamed into Cats by giving them uncooked fish. Once tamed, Love Hearts will appear aro...
    constexpr u32 RNAdditionallyPigsCanBeSaddledAndn = 0xC49C0D63; // \r\n        Additionally, pigs can be saddled and then ridden by players. They are controlled by tem...
    constexpr u32 RNOnceTamedAWolfWillAlways = 0xDF7F652C; // \r\n        Once tamed, a wolf will always have its collar on. The color of their collar can be chan...
    constexpr u32 WildWolvesCanBeTamedByGivingmBones = 0x012A10FB; // Wild wolves can be tamed by giving them bones. Once tamed, Love Hearts will appear around them. Tame...
    constexpr u32 UseBrewingStandToCreateAPotionOf = 0xA57E40AF; // Use the Brewing Stand to create a Potion of Fire Resistance. You will need a Water Bottle, Nether Wa...
    constexpr u32 UseYourPotionOfFireResistanceOnYourself = 0xF7C6CAA1; // Use your Potion of Fire Resistance on yourself.
    constexpr u32 IfACauldronBecomesEmptyYouCanRefill = 0x43A035A4; // If a cauldron becomes empty, you can refill it with a Water Bucket.
    constexpr u32 YouCanFillAGlassBottleFromA = 0x64E7F921; // You can fill a glass bottle from a Cauldron that has water in it, or from a block of water. Fill you...
    constexpr u32 TheFirstStepInBrewingAPotionIs = 0xFDD3B930; // The first step in brewing a potion is to create a Water Bottle. Take a Glass Bottle from the chest.
    constexpr u32 AllPotionsStartWithAWaterBottleMost = 0xAED3450F; // All potions start with a Water Bottle. Most potions are created by first using a Nether Wart to make...
    constexpr u32 EachBlazePowderWillPowerBrewingStandFor = 0xC02F0030; // Each Blaze Powder will power the Brewing Stand for long enough to distill up to 20 ingredients. Blaz...
    constexpr u32 CreateAPotionOfFireResistanceByFirst = 0xBAB68593; // Create a Potion of Fire Resistance by first adding Nether Wart to a Water Bottle, then adding Magma ...
    constexpr u32 PressControllerVkBNowToExitBrewing = 0x757D5644; // Press{*CONTROLLER_VK_B*} now to exit the brewing interface.
    constexpr u32 OnceYouHaveAPotionYouCanModify = 0xFB48ACEA; // Once you have a potion you can modify its effects. Adding Redstone Dust increases the duration of it...
    constexpr u32 AddingFermentedSpiderEyeCorruptsPotionAndCan = 0xFCFE0427; // Adding Fermented Spider Eye corrupts the potion and can turn it into a potion with the opposite effe...
    constexpr u32 YouBrewPotionsByPlacingAnIngredientIn = 0x96BEBCB3; // You brew potions by placing an ingredient in the top slot, some Blaze Powder in the fuel slot, and a...
    constexpr u32 ThisIsBrewingInterfaceYouCanUseThis = 0x09253A77; // This is the brewing interface. You can use this to create potions that have a variety of different e...
    constexpr u32 InThisAreareIsABrewingStandA = 0xDF003D9B; // In this area there is a Brewing Stand, a Cauldron and a chest full of items for brewing.
    constexpr u32 NowThatYouAreResistantToFireAnd = 0x7C858498; // Now that you are resistant to fire and lava, you should see if there are places you can get to that ...
    constexpr u32 WithAPotionInYourHandHoldController = 0x2A36CC97; // With a potion in your hand, hold{*CONTROLLER_ACTION_USE*} to use it. For a normal potion you will dr...
    constexpr u32 PortalsAreCreatedByPlacingObsidianBlocksInto = 0xBDF81A00; // Portals are created by placing Obsidian blocks into a frame four blocks wide and five blocks tall. T...
    constexpr u32 HoldControllerActionActionToChopDown4 = 0xC76706B5; // Hold{*CONTROLLER_ACTION_ACTION*} to chop down 4 blocks of wood (tree trunks).{*B*}When a block break...
    constexpr u32 TheWoodThatYouHaveCollectedCanBe = 0x98FEB8F6; // The wood that you have collected can be crafted into planks. Craft some planks now.{*PlanksIcon*}
    constexpr u32 YouWillNeedToCollectResourcesToComplete = 0x441C0545; // You will need to collect the resources to complete the shelter. The walls and roof can be made of an...
    constexpr u32 YouCanCraftALargerSelectionOfItems = 0x723936AB; // You can craft a larger selection of items using a crafting table. Crafting on a table works in the s...
    constexpr u32 TheCraftingAreaShowsItemsYouRequireIn = 0xA42613B4; // The crafting area shows the items you require in order to craft the new item. Press{*CONTROLLER_VK_A...
    constexpr u32 SomeItemsCanNotBeCreatedUsingCrafting = 0x7513D4C3; // Some items can not be created using the crafting table, but require a furnace. Craft a furnace now.{...
    constexpr u32 TheWoodThatYouHaveCollectedCanBeSelectIconAndPressController = 0x61C2F830; // The wood that you have collected can be crafted into planks. Select the planks icon and press{*CONTR...
    constexpr u32 TheDescriptionOfCurrentlySelectedItemIsNow = 0x0B135E36; // The description of the currently selected item is now displayed. The description can give you an ide...
    constexpr u32 PlaceFurnaceYouHaveCraftedInWorldYou = 0x5FCE503F; // Place the furnace you have crafted in the world. You will want to put this inside your shelter.{*B*}...
    constexpr u32 NowYouHaveBuiltACraftingTableYou = 0x12EEEE51; // Now you have built a crafting table you should place it in the world to enable you to build a larger...
    constexpr u32 TheListOfIngredientsRequiredToCraftSelected = 0x3AF6EF3E; // The list of ingredients required to craft the selected item is now displayed.
    constexpr u32 TheBottomRightPartOfCraftingInterfaceShows = 0x1F10DDC2; // The bottom right part of the crafting interface shows your inventory. This area can also show a desc...
    constexpr u32 ScrollThroughGroupTypeTabsAtTopUsing = 0x27A2B969; // Scroll through the Group Type tabs at the top using{*CONTROLLER_VK_LB*} and{*CONTROLLER_VK_RB*} to s...
    constexpr u32 ThisIsCraftingInterfaceThisInterfaceAllowsYou = 0x9A252193; // This is the crafting interface. This interface allows you to combine the items you've collected to m...
    constexpr u32 ALotOfCraftingCanInvolveMultipleSteps = 0xC8A27304; // A lot of crafting can involve multiple steps. Now that you have some planks there are more items tha...
    constexpr u32 PressControllerVkLbAndControllerVkRb = 0xE4451189; // Press{*CONTROLLER_VK_LB*} and{*CONTROLLER_VK_RB*} to change to the group type of the items you wish ...
    constexpr u32 PressControllerVkLbAndControllerVkRbToolsToolsicon = 0xB2A0AD4C; // Press{*CONTROLLER_VK_LB*} and{*CONTROLLER_VK_RB*} to change to the group type of the items you wish ...
    constexpr u32 UseControllerMenuNavigateToChangeToItem = 0x76C32BBB; // Use{*CONTROLLER_MENU_NAVIGATE*} to change to the item you wish to craft. Some items have multiple ve...
    constexpr u32 WithToolsYouHaveBuiltYouAreOff = 0x63C8C01A; // With the tools you have built you are off to a great start, and are able to collect a variety of dif...
    constexpr u32 PressControllerActionCraftingToOpenCraftingInterface = 0xB5FCD4E7; // Press{*CONTROLLER_ACTION_CRAFTING*} to open the crafting interface.
    constexpr u32 UseFurnaceToCreateSomeCharcoalIfYou = 0xF485454F; // Use the furnace to create some charcoal. If you are waiting for it to finish, how about using the ti...
    constexpr u32 ALotOfCraftingInvolvesMultipleStepsNow = 0x2E35E925; // A lot of crafting involves multiple steps. Now that you have some planks, there are more items that ...
    constexpr u32 YouHaveCollectedEnoughCobblestoneToCraftA = 0xE7CAD766; // You have collected enough cobblestone to craft a furnace. Use your crafting table to craft one.
    constexpr u32 UseFurnaceToCreateSomeGlassIfYou = 0x5F29384C; // Use the furnace to create some glass. If you are waiting for it to finish, how about using the time ...
    constexpr u32 TheWoodThatYouHaveCollectedCanBeOpenCraftingInterfaceToCraftm = 0x4D449D7D; // The wood that you have collected can be crafted into planks. Open the crafting interface to craft th...
    constexpr u32 ToMakeCollectingBlocksFasterYouCanBuild = 0x56BEE93B; // To make collecting blocks faster you can build tools designed for the job. Some tools have a handle ...
    constexpr u32 ItCanGetVeryDarkAtNightSo = 0x000D15AC; // It can get very dark at night, so you will want some lighting inside your shelter so that you can se...
    constexpr u32 AGoodShelterWillHaveADoorSo = 0x74135C27; // A good shelter will have a door so that you can easily go in and out without having to mine and repl...
    constexpr u32 AnAxeHelpsChopWoodAndWoodenTiles = 0xFAC53756; // An axe helps chop wood and wooden tiles faster. As you collect more materials you can craft tools th...
    constexpr u32 APickaxeHelpsDigHardBlocksLikeStone = 0x19CDD9A4; // A pickaxe helps dig hard blocks, like stone and ore, faster. As you collect more materials you can c...
    constexpr u32 AShovelHelpsDigSoftBlocksLikeDirt = 0xF9CC6772; // A shovel helps dig soft blocks, like dirt and sand, faster. As you collect more materials you can cr...
    constexpr u32 YouHaveNowCompletedCreativeModeTutorial = 0xA77B2AB0; // You have now completed the Creative mode tutorial.
    constexpr u32 MakeYourWayToOppositeSideOfThis = 0xE4341F71; // Make your way to the opposite side of this hole to continue.
    constexpr u32 IfYouMovePointerOutsideEdgeOfInterface = 0x94985DDE; // If you move the pointer outside the edge of the interface with an item on the pointer, you can drop ...
    constexpr u32 PressControllerVkBNowToExitCreative = 0x6727AAC7; // Press{*CONTROLLER_VK_B*} now to exit the creative mode inventory.
    constexpr u32 IfYouWantMoreInformationAboutAnItem = 0x893A28E1; // If you want more information about an item, move the pointer over the item and press{*CONTROLLER_ACT...
    constexpr u32 ThePointerWillAutomaticallyMoveOverASpace = 0x5F3FE8A6; // The pointer will automatically move over a space in the use row. You can place it down using{*CONTRO...
    constexpr u32 ScrollThroughGroupTypeTabsAtTopUsingPickUp = 0x03F6BE86; // Scroll through the Group Type tabs at the top using{*CONTROLLER_VK_LB*} and{*CONTROLLER_VK_RB*} to s...
    constexpr u32 ThisIsCreativeModeInventoryItShowsItems = 0x025598D4; // This is the creative mode inventory. It shows items available for use in your hand, and all the othe...
    constexpr u32 UseControllerMenuNavigateToMovePointerR = 0x11BE3D54; // Use{*CONTROLLER_MENU_NAVIGATE*} to move the pointer.\r\nWhen on the item list, use{*CONTROLLER_VK_A*...
    constexpr u32 WhenInCreativeModeYouHaveAnInfinite = 0xC93A06C2; // When in Creative mode you have an infinite number of all available items and blocks, you can destroy...
    constexpr u32 YouHaveFoundADonkey = 0x80BBE3E3; // You have found a Donkey.
    constexpr u32 TryJumpingOffFromHereNFlyingWith = 0x6FCB60C3; // Try jumping off from here, then flying with Elytra through all of the rings. Land on the target for ...
    constexpr u32 ThereAreRingsPlacedAroundTowersInThis = 0xDC0FE933; // There are rings placed around the towers in this tutorial area. Try flying through all of them in on...
    constexpr u32 FlyingWithElytraCanBeQuiteTrickyElytraicon = 0x07F2ABFF; // Flying with Elytra can be quite tricky. {*ElytraIcon*}
    constexpr u32 IfYouLookDownwardsWhileGlidingYouLl = 0x58852EDA; // If you look downwards while gliding, you'll move faster - but you'll also hit the ground sooner. If ...
    constexpr u32 ToStartFlyingJumpOrFallFromA = 0x8992FD0C; // To start flying, jump or fall from a high place and press {*CONTROLLER_ACTION_JUMP*}. Then use {*CON...
    constexpr u32 FirstYouLlNeedToEquipElytraIn = 0x8FCC51E8; // First, you'll need to equip Elytra in your Chest Armor slot. {*ElytraIcon*}
    constexpr u32 ElytraAreWingsThatAllowPlayerToGlide = 0xD741E933; // Elytra are wings that allow the player to glide through the air. {*ElytraIcon*}
    constexpr u32 YourElytraAreDamagedCombineSomeLeatherWithm = 0x1CEB28A5; // Your Elytra are damaged. Combine some Leather with them at an Anvil to repair them. Elytra won't be ...
    constexpr u32 PlacingBookcasesAroundEnchantmentTableIncreasesItsPower = 0x0A3D895F; // Placing bookcases around the Enchantment Table increases its power and allows access to higher level...
    constexpr u32 RNTYouCanAlsoCreateEnchanted = 0xB8D8FDBB; // \r\n\t  You can also create Enchanted Books at the Enchantment Table, which can be used later at the...
    constexpr u32 YouCanAlsoBuildExperienceLevelsUsingA = 0x000C52E1; // You can also build experience levels using a Bottle O' Enchanting, which, when thrown, creates Exper...
    constexpr u32 EnchantingItemsCostsExperienceLevelsWhichCanBe = 0x3AF1FDDF; // Enchanting items costs Experience Levels, which can be built up by collecting Experience Orbs which ...
    constexpr u32 AlthoughEnchantmentsAreAllRandomSomeOfBetter = 0x697EA620; // Although the enchantments are all random, some of the better enchantments are only available when yo...
    constexpr u32 TheTwoNumbersOnButtonRepresentCostIn = 0x244CF0FE; // The two numbers on the button represent the cost in Lapis Lazuli and experience levels to apply that...
    constexpr u32 SelectAnEnchantmentAndPressControllerVkA = 0x731167E6; // Select an enchantment and press{*CONTROLLER_VK_A*} to enchant the item. This will decrease your expe...
    constexpr u32 WhenAnItemIsPlacedInEnchantingSlot = 0xCA85FE57; // When an item is placed in the enchanting slot, the buttons on the right will change to show a select...
    constexpr u32 ThisIsEnchantingInterfaceWhichYouCanUse = 0x18A28D4E; // This is the enchanting interface which you can use to add enchantments to weapons, armor, and some t...
    constexpr u32 ToEnchantAnItemFirstPlaceItIn = 0xD1EDBF15; // To enchant an item, first place it in the enchanting slot. Weapons, armor, and some tools can be enc...
    constexpr u32 InThisAreareIsAnEnchantmentTableAnd = 0x27323D4A; // In this area there is an Enchantment Table and some other items to help you learn about enchanting.
    constexpr u32 UsingAnEnchantmentTableAllowsYouToAdd = 0xF4D6E44D; // Using an Enchantment Table allows you to add special effects such as increasing the number of items ...
    constexpr u32 InChestInThisAreaYouCanFind = 0xFCD038DF; // In the chest in this area you can find some enchanted items, Bottles O' Enchanting, and some items t...
    constexpr u32 RNTTTthisAllowsPlayersTo = 0x2B2D9551; // \r\n\t\t\tThis allows players to store items in any Ender Chest, and retrieve them from other Ender ...
    constexpr u32 RNTTTinThisAreareAre = 0x0E6BF898; // \r\n\t\t\tIn this area there are two Ender Chests.\r\n\t\t
    constexpr u32 RNTTThoweverContentsOfEnder = 0x0CB555AB; // \r\n\t\t\tHowever, the contents of the Ender Chests are different for each player.\r\n\t\t
    constexpr u32 RNTTTallEnderChestsIn = 0x393EB8EF; // \r\n\t\t\tAll Ender Chests in a world are linked, even across dimensions. Items placed into an Ender...
    constexpr u32 BonemealCanBeUsedToGrowCropsToir = 0x80F36051; // Bonemeal can be used to grow crops to their fully grown state, or grow Mushrooms into Huge Mushrooms...
    constexpr u32 CactiMustBePlantedOnSandAndWill = 0x361DE5E9; // Cacti must be planted on Sand, and will grow up to three blocks high. Like Sugarcane, destroying the...
    constexpr u32 CarrotsAndPotatoesAreFarmedByPlantingCarrots = 0x773032A4; // Carrots and Potatoes are farmed by planting Carrots or Potatoes, and are ready for harvesting when t...
    constexpr u32 YouHaveNowCompletedFarmingTutorial = 0x8225D54B; // You have now completed the farming tutorial.
    constexpr u32 BeforePlantingSeedsDirtBlocksNeedToBe = 0x0B101B8D; // Before planting seeds the dirt blocks need to be turned into Farmland by using a Hoe. A nearby sourc...
    constexpr u32 MushroomsShouldBePlantedInADimlyLit = 0x3326967E; // Mushrooms should be planted in a dimly lit area, and will spread to nearby dimly lit blocks.{*ICON*}...
    constexpr u32 PumpkinsAndMelonsAlsoNeedABlockNext = 0xC3230DB0; // Pumpkins and Melons also need a block next to where you planted the seed for the fruit to grow once ...
    constexpr u32 WheatCarrotsPotatoesBeetrootPumpkinsAndMelonsAre = 0x0CD48E76; // Wheat, Carrots, Potatoes, Beetroot, Pumpkins, and Melons are grown from seeds. Wheat seeds are colle...
    constexpr u32 SugarcaneMustBePlantedOnAGrassDirt = 0x05944041; // Sugarcane must be planted on a Grass, Dirt or Sand block that is right next to water block. Chopping...
    constexpr u32 WheatGoesThroughSeveralStagesWhenGrowingAnd = 0xB5D4B255; // Wheat goes through several stages when growing, and is ready to be harvested when it appears darker....
    constexpr u32 TryCraftingAFireworkAtCraftingTableUsing = 0x55F90729; // Try crafting a Firework at the Crafting Table using an assortment of ingredients from the chests.
    constexpr u32 TheColorsFadeShapeSizeAndEffectsSuch = 0xE6996247; // The colors, fade, shape, size, and effects (such as trails and twinkles) of Firework Stars can be cu...
    constexpr u32 TheDyeWillSetColorOfExplosionOf = 0x859377B3; // The Dye will set the color of the explosion of the Firework Star.
    constexpr u32 ATrailOrATwinkleCanBeAdded = 0x36518124; // A trail or a twinkle can be added using Diamonds or Glowstone Dust.
    constexpr u32 AfterAFireworkStarHasBeenCraftedYou = 0x306CF96D; // After a Firework Star has been crafted, you can set the fade color of the Firework Star by crafting ...
    constexpr u32 TheShapeOfFireworkStarCanBeSet = 0xD0C84AA4; // The shape of the Firework Star can be set by adding either a Fire Charge, Gold Nugget, Feather, or M...
    constexpr u32 FireworkStarsCanBeCraftedByPlacingGunpowder = 0x13FD0693; // Firework Stars can be crafted by placing Gunpowder and Dye into the crafting grid.
    constexpr u32 YouCannPressControllerVkAToCraft = 0xE44F42D0; // You can then press {*CONTROLLER_VK_A*} to craft your completed Firework.
    constexpr u32 FillingMoreSlotsInCraftingGridWithGunpowder = 0x22299E7D; // Filling more slots in the crafting grid with Gunpowder will increase the height at which all of the ...
    constexpr u32 YouCanOptionallyPlaceOneOrMoreFirework = 0xFE1D058D; // You can optionally place one or more Firework Stars into the crafting grid to add them to the Firewo...
    constexpr u32 ToCraftAFireworkYouLlNeedGunpowder = 0x8C159652; // To craft a Firework, you'll need Gunpowder and Paper.
    constexpr u32 ThisIsFireworkInterfaceWhichYouCanUse = 0xECBB7BAC; // This is the Firework interface, which you can use to craft Fireworks and Firework Stars.
    constexpr u32 ContainedWithinChestsHerereAreVariousItemsUsed = 0x432EA6F8; // Contained within the chests here there are various items used in the creation of Fireworks!
    constexpr u32 FireworksAreDecorativeItemsThatCanBeLaunched = 0xBA3E693D; // Fireworks are decorative items that can be launched by hand or from Dispensers. They are crafted usi...
    constexpr u32 PressControllerActionUseToCastYourLine = 0xC7681D23; // Press{*CONTROLLER_ACTION_USE*} to cast your line and start fishing. Press{*CONTROLLER_ACTION_USE*} a...
    constexpr u32 IfYouWaitUntilFloatSinksBelowSurface = 0x4F274F92; // If you wait until the float sinks below the surface of the water before reeling in you can catch a f...
    constexpr u32 YouAreNowUsingAFishingRodPress = 0x2C532B5D; // You are now using a fishing rod. Press{*CONTROLLER_ACTION_USE*} to use it.{*FishingRodIcon*}
    constexpr u32 AsWithManyOtherToolsAFishingRod = 0x314B8DCE; // As with many other tools a fishing rod has a fixed number of uses. Those uses are not limited to cat...
    constexpr u32 PressingControllerActionJumpTwiceQuicklyWillAllow = 0x6064EBD6; // Pressing{*CONTROLLER_ACTION_JUMP*} twice quickly will allow you to fly. To exit flying, repeat the a...
    constexpr u32 AsYouMoveAroundMineAndAttackYou = 0x67613737; // As you move around, mine, and attack, you will deplete your {*ICON_SHANK_01*} bar. Sprinting and spr...
    constexpr u32 YourIconShank01BarIsLowAnd = 0x355EB7D9; // Your {*ICON_SHANK_01*} bar is low, and you have lost some health. Eat the steak in your inventory to...
    constexpr u32 WithAFoodItemInYourHandHold = 0x642C1BB4; // With a food item in your hand, hold{*CONTROLLER_ACTION_USE*} to eat it and replenish your {*ICON_SHA...
    constexpr u32 IfYouLoseSomeHealthButHaveA = 0xD756C6A6; // If you lose some health, but have a {*ICON_SHANK_01*} bar with 9 or more{*ICON_SHANK_01*} in it, you...
    constexpr u32 YourFoodBarHasDepletedToALevel = 0x82BFAADD; // Your food bar has depleted to a level where you will no longer heal.
    constexpr u32 CharcoalCanBeUsedAsAFuelOr = 0x4C729FC4; // Charcoal can be used as a fuel, or combined with a stick to craft a torch.
    constexpr u32 IfYouUseWoodAsIngredientNYou = 0xB9AD8818; // If you use wood as the ingredient, then you can make charcoal. Put some fuel in the furnace and wood...
    constexpr u32 PlacingSandInIngredientSlotAllowsYouTo = 0xA9CA4693; // Placing sand in the ingredient slot allows you to make glass. Create some glass blocks to use as win...
    constexpr u32 ManyWoodenItemsCanBeUsedAsFuels = 0xC6B63D93; // Many wooden items can be used as fuels, but not everything burns for the same time. You may also dis...
    constexpr u32 WhenYourItemsHaveBeenFiredYouCan = 0x5466C434; // When your items have been fired, you can move them from the output area into your inventory. You sho...
    constexpr u32 YouNeedToPutSomeFuelIntoBottom = 0x9BB6558D; // You need to put some fuel into the bottom slot of the furnace, and the item to be changed in the top...
    constexpr u32 ThisIsFurnaceInterfaceAFurnaceAllowsYou = 0x06CE6D19; // This is the furnace interface. A furnace allows you to change items by firing them. For example, you...
    constexpr u32 IronGolemsAreCreatedWithFourIronBlocks = 0xF80F3154; // Iron Golems are created with four Iron Blocks in the pattern shown, with a pumpkin on top of the mid...
    constexpr u32 IronGolemsAlsoAppearNaturallyToProtectVillages = 0x1B5F8B07; // Iron Golems also appear naturally to protect villages, and will attack you if you attack any village...
    constexpr u32 GolemsAreCreatedByPlacingAPumpkinOn = 0x6EB103CA; // Golems are created by placing a pumpkin on top of a stack of blocks.
    constexpr u32 SnowGolemsAreCreatedWithTwoSnowBlocks = 0xE32B7783; // Snow Golems are created with two Snow Blocks, one of top of the other, with a pumpkin on top. Snow G...
    constexpr u32 ThereAreVariousUsefulHopperLayoutsForYou = 0x7795FDBD; // There are various useful Hopper layouts for you to see and experiment with in this room.
    constexpr u32 TheyCanAffectBrewingStandsChestsDispensersDroppers = 0x985F1D96; // They can affect Brewing Stands, Chests, Dispensers, Droppers, Minecarts with Chests, Minecarts with ...
    constexpr u32 HoppersWillContinuouslyAttemptToSuckItemsOut = 0xC398648F; // Hoppers will continuously attempt to suck items out of a suitable container placed above them. They ...
    constexpr u32 AHopperTriesToOutputItemsInDirection = 0xAD1E3075; // A Hopper tries to output items in the direction it is pointing. To make a Hopper point to a particul...
    constexpr u32 ThisRoomContainsHoppers = 0x18796E51; // This room contains Hoppers.
    constexpr u32 HoppersAreUsedToInsertOrRemoveItems = 0x31BCD75C; // Hoppers are used to insert or remove items from containers, and to automatically pick-up items throw...
    constexpr u32 HoweverIfAHopperIsPoweredByRedstone = 0x221F6E02; // However, if a Hopper is powered by Redstone it will become inactive and stop both sucking and insert...
    constexpr u32 YouCanTryToTameHorsesAndDonkeys = 0x0D17B1EE; // You can try to tame the Horses and Donkeys here, and there are Saddles, Horse Armor, and other usefu...
    constexpr u32 HorsesDonkeysAndLlamasButNotMulesCan = 0x3ED848DD; // Horses, Donkeys, and Llamas (but not Mules) can be bred like other animals by using Golden Apples or...
    constexpr u32 HorsesDonkeysAndLlamasAreFoundMainlyIn = 0x8DFE2C47; // Horses, Donkeys, and Llamas are found mainly in open plains and savannas. Mules can be bred from a D...
    constexpr u32 SaddleYourHorseByPlacingASaddleIn = 0xAC55BC2F; // Saddle your Horse by placing a Saddle in the saddle slot. Horses can be given armor by placing Horse...
    constexpr u32 TheHorseInventoryAllowsYouToTransferOr = 0xE4582E6F; // The horse inventory allows you to transfer or equip items to your Horse, Donkey, Mule, or Llama.
    constexpr u32 ThisIsHorseInventoryInterface = 0x7C8AEDB6; // This is the horse inventory interface.
    constexpr u32 YouCanAlsoTransferItemsBetweenYourOwn = 0xAD1032A9; // You can also transfer items between your own inventory and the saddlebags strapped to Donkeys, Mules...
    constexpr u32 YouHaveFoundAHorse = 0x4DCDE902; // You have found a Horse.
    constexpr u32 AllAdultHorsesDonkeysMulesAndLlamasCan = 0xCE6D12A7; // All adult Horses, Donkeys, Mules, and Llamas can be ridden. However only Horses can be armored, and ...
    constexpr u32 TryToRideThisHorseNowUseController = 0x032AEB3B; // Try to ride this horse now. Use {*CONTROLLER_ACTION_USE*} with no items or tools in your hand to mou...
    constexpr u32 TameDonkeysMulesAndLlamasCanBeGiven = 0xB916B23D; // Tame Donkeys, Mules, and Llamas can be given saddlebags by attaching a chest. These bags can be acce...
    constexpr u32 ToSteerAHorseYMustBeEquipped = 0xD0B71241; // To steer a horse, they must be equipped with a saddle. Saddles can be bought from villagers or found...
    constexpr u32 HorsesDonkeysMulesAndLlamasMustBeTamed = 0xFB9D6DB1; // Horses, Donkeys, Mules, and Llamas must be tamed before they can be used. A horse is tamed by attemp...
    constexpr u32 WhenTamedLoveHeartsWillAppearAroundmAndy = 0x86C858BB; // When tamed, Love Hearts will appear around them and they will no longer buck the player off.  
    constexpr u32 IfYouMovePointerOutsideEdgeOfInterface_1 = 0x1A28A6CA; // If you move the pointer outside the edge of the interface with an item on the pointer, you can drop ...
    constexpr u32 PressControllerVkBNowToExitInventory = 0x3F434D73; // Press{*CONTROLLER_VK_B*} now to exit the inventory.
    constexpr u32 IfYouWantMoreInformationAboutAnItem_1 = 0xEC1649D5; // If you want more information about an item, move the pointer over the item and press{*CONTROLLER_ACT...
    constexpr u32 YouCanPlaceItemsDownAgainByUsing = 0x99B85F72; // You can place items down again by using {*CONTROLLER_VK_A*}. With multiple items on the pointer, use...
    constexpr u32 ThisIsYourInventoryItShowsItemsThat = 0xB77FC340; // This is your inventory. It shows the items that are available for use in your hand, and all of the o...
    constexpr u32 UseControllerMenuNavigateToMovePointerUse = 0xC18416E0; // Use{*CONTROLLER_MENU_NAVIGATE*} to move the pointer. Use{*CONTROLLER_VK_A*} to pick up the item that...
    constexpr u32 AsYouCollectAndCraftMoreItemsYour = 0x69B79DDF; // As you collect and craft more items, your inventory will fill up.{*B*}\r\nPress{*CONTROLLER_ACTION_I...
    constexpr u32 PressControllerActionJumpToJump = 0xE21AD07F; // Press{*CONTROLLER_ACTION_JUMP*} to jump.
    constexpr u32 YouHaveFoundALlama = 0xE9B948F4; // You have found a Llama.
    constexpr u32 UseControllerActionLookToLookUpDown = 0x68129F42; // Use{*CONTROLLER_ACTION_LOOK*} to look up, down and around.
    constexpr u32 HoldControllerActionActionToMineAndChop = 0xFA88CE3A; // Hold{*CONTROLLER_ACTION_ACTION*} to mine and chop using your hand or whatever you are holding. You m...
    constexpr u32 UseYourPickaxeToMineSomeStoneBlocks = 0x8B96AFEE; // Use your pickaxe to mine some stone blocks. Stone blocks will produce cobblestone when mined. If you...
    constexpr u32 YouAreNowRidingInAMinecartTo = 0x97628A42; // You are now riding in a minecart. To exit the minecart, press{*CONTROLLER_ACTION_DISMOUNT*} .{*Minec...
    constexpr u32 YouCanAlsoCraftPoweredRailsWhichTake = 0xF965D585; // You can also craft powered rails, which take power from redstone torches and circuits to accelerate ...
    constexpr u32 RNIfNecessaryYouCanSlowlyMove = 0x5C8E319F; // \r\n      If necessary you can slowly move your minecart along using {*CONTROLLER_ACTION_MOVE*}. Thi...
    constexpr u32 AMinecartRunsOnRailsYouCanAlso = 0x6D8D73AC; // A minecart runs on rails. You can also craft a powered minecart with a furnace, and a minecart with ...
    constexpr u32 UseControllerActionMoveToMoveAround = 0xD6B36624; // Use{*CONTROLLER_ACTION_MOVE*} to move around.
    constexpr u32 YouHaveFoundAMule = 0xDB419510; // You have found a Mule.
    constexpr u32 YouAreNowHoldingANametagOnceYou = 0xAD017F4C; // You are now holding a Nametag. Once you have given the Nametag a name at the Anvil, you can use it t...
    constexpr u32 NearbyreIsAnAbandonedMinerSShelterThat = 0x79452EF8; // Nearby there is an abandoned Miner's shelter that you can complete to be safe overnight.
    constexpr u32 TheNetherCanBeADangerousPlaceFull = 0x97639B2D; // The Nether can be a dangerous place, full of lava, but can be useful to collect Netherrack, which bu...
    constexpr u32 TheNetherWorldCanBeUsedToFast = 0xD9A3BCD5; // The Nether world can be used to fast-travel in the Overworld - traveling one block distance in the N...
    constexpr u32 NightTimeCanApproachQuicklyAndItIs = 0x88AC7BFD; // Night time can approach quickly, and it is dangerous to be outside unprepared. You can craft armor a...
    constexpr u32 OpenContainer = 0x0F5A82A9; // Open the container.
    constexpr u32 PressControllerActionCraftingToOpenCreativeInventory = 0xBEAC2F00; // Press{*CONTROLLER_ACTION_CRAFTING*} to open the creative inventory interface.
    constexpr u32 PointCrosshairAtCraftingTableAndPressController = 0x7DE96D85; // Point the crosshair at the crafting table and press{*CONTROLLER_ACTION_USE*} to open it.
    constexpr u32 MinecraftIsAGameAboutPlacingBlocksTo = 0x989A3F76; // Minecraft is a game about placing blocks to build anything you can imagine!  \r\nAt night monsters c...
    constexpr u32 WhenPoweredAPistonWillExtendPushingUp = 0xB9459719; // When powered, a Piston will extend, pushing up to 12 blocks. When they retract, Sticky Pistons can p...
    constexpr u32 UseControllerActionUseToPlaceFurnaceIn = 0xF1D4D67E; // Use{*CONTROLLER_ACTION_USE*} to place the furnace in the world, and then open it.
    constexpr u32 UseControllerActionUseToPlaceDoorYou = 0xF39F40BF; // Use{*CONTROLLER_ACTION_USE*} to place the door. You can use{*CONTROLLER_ACTION_USE*} to open and clo...
    constexpr u32 WithCraftingTableSelectedPointCrosshairWhereYou = 0xE42098C2; // With the crafting table selected, point the crosshair where you want it and use{*CONTROLLER_ACTION_U...
    constexpr u32 RedstoneDustIsCollectedByMiningRedstoneOre = 0xEC2AC2E4; // Redstone dust is collected by mining redstone ore with a pickaxe made of Iron, Diamond, or Gold. You...
    constexpr u32 LeversButtonsPressurePlatesAndRedstoneTorchesCan = 0xC1453D8C; // Levers, Buttons, Pressure Plates, and Redstone Torches can all provide power to circuits, either by ...
    constexpr u32 ThePositionAndDirectionThatYouPlaceA = 0x2AA68E1A; // The position and direction that you place a power source can change how it affects the surrounding b...
    constexpr u32 RedstoneRepeatersCanBeUsedToExtendDistance = 0x8A39641A; // Redstone repeaters can be used to extend the distance that power is carried, or to put a delay in a ...
    constexpr u32 RNTTtripwireHooksWillAlsoProvide = 0xE197530C; // \r\n\t\tTripwire Hooks will also provide constant power to a circuit while something is triggering t...
    constexpr u32 UseControllerActionLeftScrollAndControllerAction = 0xD50AC0C8; // Use{*CONTROLLER_ACTION_LEFT_SCROLL*} and{*CONTROLLER_ACTION_RIGHT_SCROLL*} to change the current hel...
    constexpr u32 JumpingOrFallingOntoASlimeBlockWill = 0xD56BB829; // Jumping or falling onto a Slime block will make you (or any mob) bounce like a trampoline! You won't...
    constexpr u32 InThisAreaYouLlFindSomeSlime = 0x53BE1D97; // In this area you'll find some Slime blocks. Slime blocks are sticky, and will slow you down if you w...
    constexpr u32 PlacingASlimeBlockOnAPistonWill = 0x853766E0; // Placing a Slime block on a Piston will allow the Piston to grab and pull other blocks. This can be u...
    constexpr u32 ToSprintPushControllerActionMoveForwardTwice = 0x24614E1F; // To sprint, push{*CONTROLLER_ACTION_MOVE*} forward twice quickly. While you hold{*CONTROLLER_ACTION_M...
    constexpr u32 RNTTTtradesThatHaveBeen = 0x1886CB59; // \r\n\t\t\tTrades that have been used frequently may be removed temporarily, but the villager will al...
    constexpr u32 RNTTTperformingAMixOf = 0x2C97E467; // \r\n\t\t\tPerforming a mix of trades will randomly add to or update the villager's available trades....
    constexpr u32 RNTTTtheAmountAndType = 0x7C03162F; // \r\n\t\t\tThe amount and type of items you are giving to the villager are shown in the two boxes on ...
    constexpr u32 RNTTTyouCanSeeTotal = 0x7B8B7B8F; // \r\n\t\t\tYou can see the total number of the items required for the trade in the two boxes on the l...
    constexpr u32 RNTTTthisIsTradingInterface = 0x821611E6; // \r\n\t\t\tThis is the trading interface which displays trades that can be made with a villager.\r\n\...
    constexpr u32 RNTTTallTradesThatVillager = 0x54091CCD; // \r\n\t\t\tAll trades that the villager is willing to make at the moment are displayed along the top....
    constexpr u32 RNTTTpressControllerVkA = 0x4896FB7B; // \r\n\t\t\tPress{*CONTROLLER_VK_A*} to trade the items the villager requires for the item on offer.\r...
    constexpr u32 RNTTTtradesWillAppearRed = 0xB7242ECF; // \r\n\t\t\tTrades will appear red and be unavailable if you do not have the required items.\r\n\t\t
    constexpr u32 RNTTTinThisAreareIsVillagerPaperPurchaseItems = 0xFEDE66F2; // \r\n\t\t\tIn this area there is a villager and a Chest containing Paper to purchase items.\r\n\t\t
    constexpr u32 RNTTTplayersCanTradeItems = 0x5A138E45; // \r\n\t\t\tPlayers can trade items from their inventory with villagers.\r\n\t\t
    constexpr u32 RNTTTtheTradesAVillager = 0xB2FDEE5C; // \r\n\t\t\tThe trades a villager is likely to offer depends on their profession.\r\n\t\t
    constexpr u32 RNTTTtakeSomePaperFrom = 0x239BEE27; // \r\n\t\t\tTake some Paper from the Chest and try trading with the villager here.\r\n\t\t
    constexpr u32 InChestInThisAreareAreSomeComponents = 0x1E3960B0; // In the chest in this area there are some components for making circuits with pistons. Try using or c...
    constexpr u32 UseControllerActionUseToUseItemsInteract = 0xEAE5D55E; // Use{*CONTROLLER_ACTION_USE*} to use items, interact with objects, and place some items. Items that h...
    constexpr u32 ToUseANetherPortalStandInsideIt = 0xF0AFF2F5; // To use a Nether Portal, stand inside it. Your screen will go purple and a sound will play. After a f...
    constexpr u32 Tutorial = 0xE6C3646E; // Tutorial
    constexpr u32 ShowAllMashUpWorlds = 0x58FE2F14; // Show all Mash-up Worlds
    constexpr u32 ThisIsConsoleTrialGameYouNeedFull = 0xADECE1FD; // This is the Minecraft: Nintendo Switch Edition trial game. You need the full game to be able to acce...
    constexpr u32 ThisIsConsoleAndToPlayWithYour = 0x6A6E6A26; // This is the Minecraft: Nintendo Switch Edition trial game. If you had the full game, you would just ...
    constexpr u32 ThisIsConsoleAndToPlayWithYour_1 = 0x6D8F5818; // This is the Minecraft: Nintendo Switch Edition trial game. If you had the full game, you would just ...
    constexpr u32 ToUseMapYouHaveSelectedYouNeed_2 = 0xA78136D4; // To use the map you have selected, you need to unlock this mash-up pack.\r\nWould you like to unlock ...
    constexpr u32 UnlockMashUpPack = 0x1139FF03; // Unlock Mash-Up Pack
    constexpr u32 ToUseSkinYouHaveSelectedYouNeed_1 = 0xAA7803B0; // To use the skin you have selected, you need to unlock this skin pack.\r\nWould you like to unlock th...
    constexpr u32 ToUseThisTexturePackForThisMini = 0xF50904C6; // To use this texture pack for this Mini Game, you need to unlock it.\r\nWould you like to unlock it n...
    constexpr u32 ToUseThisTexturePackForYourWorld_1 = 0xF69CAF83; // To use this texture pack for your world, you need to unlock it.\r\nWould you like to unlock it now?
    constexpr u32 UnlockTexturePack = 0x2C5E0D0E; // Unlock Texture Pack
    constexpr u32 UnlockSkinPack = 0x3C4392B7; // Unlock Skin Pack
    constexpr u32 ToUseMapYouHaveSelectedYouNeed_3 = 0xA9BE05DC; // To use the map you have selected, you need to unlock this map pack.\r\nWould you like to unlock this...
    constexpr u32 UnlockMapPack = 0x8983D4DB; // Unlock Map Pack
    constexpr u32 UnlockFullGame_2 = 0x88E0C979; // Unlock Full Game
    constexpr u32 ThisIsConsoleAndToPlayWithYour_2 = 0x1031480F; // This is the Minecraft: Nintendo Switch Edition trial game. If you had the full game, you would just ...
    constexpr u32 GuestPlayersCannotUnlockFullGamePleaseSign = 0xFA275479; // Guest players cannot unlock the full game. Please sign in with a Nintendo Account.
    constexpr u32 KickThisPlayerFromGameTheyWillNot = 0x0B5F4B25; // Are you sure you want to kick this player from the game? They will not be able to rejoin until you r...
    constexpr u32 KickThisPlayerFromGameTheyWillNotStartANewMiniGame = 0x2CF43E54; // Are you sure you want to kick this player from the game? They will not be able to rejoin until you s...
    constexpr u32 KickPlayerPlayer = 0x628F8B32; // Kick player
    constexpr u32 ThisIsConsoleAndToPlayWithYour_3 = 0xE4912220; // This is the Minecraft: Nintendo Switch Edition trial game. If you had the full game, you would just ...
    constexpr u32 UnlockFullGame_3 = 0xC6058D6B; // Unlock Full Game
    constexpr u32 YouRePlayingTrialGameButYouLlSaveYour = 0xC75616C3; // You're playing the trial game, but you'll need the full game to be able to save your game.\r\nWould ...
    constexpr u32 UserInterface = 0xFDDFE517; // User Interface
    constexpr u32 YouAreUsingTrialVersionOfATexture = 0x1CFE436F; // You are using the trial version of a texture pack. You will have access to the full contents of the ...
    constexpr u32 Vex = 0x710952F7; // Vex
    constexpr u32 HoldControllerVkXToView = 0x4523129E; // Hold {*CONTROLLER_VK_X*} to view
    constexpr u32 ViewBobbing = 0x387F56E3; // View Bobbing
    constexpr u32 Villager = 0x6FA8F932; // Villager
    constexpr u32 Armorer = 0x7A749749; // Armorer
    constexpr u32 Butcher = 0x88879922; // Butcher
    constexpr u32 Cartographer = 0x27A9699D; // Cartographer
    constexpr u32 Cleric = 0x869E763F; // Cleric
    constexpr u32 Farmer = 0xAFC5D10A; // Farmer
    constexpr u32 Fisherman = 0x6034AAA4; // Fisherman
    constexpr u32 Fletcher = 0xDB47C202; // Fletcher
    constexpr u32 Leatherworker = 0xB61448E0; // Leatherworker
    constexpr u32 Librarian_1 = 0x8007817D; // Librarian
    constexpr u32 Nitwit = 0x6C6ADD7C; // Nitwit
    constexpr u32 VillagerTypeOffersS = 0x8C04D144; // {*VILLAGER_TYPE*} offers %s
    constexpr u32 Priest = 0xB862BAA4; // Priest
    constexpr u32 Shepherd = 0x90F9B618; // Shepherd
    constexpr u32 Blacksmith = 0x7B287B16; // Blacksmith
    constexpr u32 ToolSmith = 0x1B5F9E56; // Tool Smith
    constexpr u32 WeaponSmith = 0x2C92054C; // Weapon Smith
    constexpr u32 Vindicator = 0xF3D4F291; // Vindicator
    constexpr u32 GameChat = 0xBCE33AF3; // Game Chat
    constexpr u32 ExitGameExitGame = 0xDE9A48C3; // Are you sure you want to exit the game?
    constexpr u32 ExitGame_2 = 0x5D7629CE; // Exit Game
    constexpr u32 YouAreUsingATrialVersionOfTexture_1 = 0x0D52C2E3; // You are using a trial version of the texture pack. You will not be able to save this world unless yo...
    constexpr u32 TrialTexturePack = 0x3BB3096E; // Trial Texture Pack
    constexpr u32 SplitScreenIsOnlySupportedWhenNotDisplaying = 0x6F86265B; // Split-screen is only supported when not displaying the game on the Nintendo Switch GamePad touch scr...
    constexpr u32 Back_2 = 0x7A458ED2; // Back
    constexpr u32 ContinueWithoutSplitScreen = 0x1A65D275; // Continue without split-screen
    constexpr u32 SplitScreenPlay = 0x337F2CFC; // Split-screen play
    constexpr u32 Weather = 0x38C1C044; // Weather
    constexpr u32 Clear = 0xD885F542; // Clear
    constexpr u32 WeatherCycle = 0xFAAAEB73; // Weather Cycle
    constexpr u32 Rain = 0xB05E725F; // Rain
    constexpr u32 Thunder = 0xA8F9A6D7; // Thunder
    constexpr u32 RNC3ISeePlayerYouMean = 0x47630C46; // \r\n{*C3*}I see the player you mean.{*EF*}{*B*}{*B*}\r\n{*C2*}{*PLAYER*}?{*EF*}{*B*}{*B*}\r\n{*C3*}Y...
    constexpr u32 RNC2TakeABreathNowTake = 0x69414293; // \r\n{*C2*}Take a breath, now. Take another. Feel air in your lungs. Let your limbs return. Yes, move...
    constexpr u32 RNC2SometimesItCalledmPlanetsAnd = 0x433EC82A; // \r\n{*C2*}Sometimes it called them "planets" and "stars".{*EF*}{*B*}{*B*}\r\n{*C2*}Sometimes it beli...
    constexpr u32 Witch_1 = 0x8AAD2185; // Witch
    constexpr u32 Wither_1 = 0xB6A67881; // Wither
    constexpr u32 WitherSkeleton = 0x1CFE3457; // Wither Skeleton
    constexpr u32 Wolf = 0x8A3B6226; // Wolf
    constexpr u32 WorldName = 0x9DB1D436; // World Name
    constexpr u32 WorldOptions = 0x66331121; // World Options
    constexpr u32 WorldSize = 0x3130D6B4; // World Size
    constexpr u32 Classic = 0xA978E0A8; // Classic
    constexpr u32 Large_3 = 0xC9DA7CA9; // Large
    constexpr u32 Medium_1 = 0x009E30A9; // Medium
    constexpr u32 Small_2 = 0x84B65213; // Small
    constexpr u32 Yes = 0xE3455343; // Yes
    constexpr u32 YouDied = 0x69C7EDA4; // You Died!
    constexpr u32 YouHave = 0x476B347A; // You have:
    constexpr u32 Zombie = 0xDDD48F6A; // Zombie
    constexpr u32 ZombieHorse = 0x2E0607AE; // Zombie Horse
    constexpr u32 ZombieVillager = 0x33791323; // Zombie Villager
}
